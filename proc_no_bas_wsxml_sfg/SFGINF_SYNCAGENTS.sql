USE SFGPRODU;
--  DDL for Package Body SFGINF_SYNCAGENTS
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGINF_SYNCAGENTS */ 

  IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetAgentsLocalInfo', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetAgentsLocalInfo;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetAgentsLocalInfo(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                               @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                               @pg_CADENA                NVARCHAR(2000),
                               @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                              @pg_PRODUCTO              NVARCHAR(2000)
                               ) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT PDV.CODIGOGTECHPUNTODEVENTA                                    AS CODIGOGTECHPUNTODEVENTA,
             PDV.NUMEROTERMINAL                                             AS NUMEROTERMINAL,
             CDA.CIUDADDANE                                                 AS CIUDADDANE,
             PDV.NOMPUNTODEVENTA                                            AS NOMPUNTODEVENTA,
             COALESCE(RSC.NOMBRECONTACTO, RSC.NOMRAZONSOCIAL)               AS NOMBRECONTACTO,
             RED.NOMREDPDV                                                  AS NOMREDPDV,
             COALESCE(RUT.DESCRIPCION, RUT.NOMRUTAPDV)                      AS NOMRUTAPDV,
             FMR.NOMFMR                                                     AS NOMFMR,
             REG.NOMREGIONAL                                                AS NOMREGIONAL,
             JEF.NOMJEFEDISTRITO                                            AS NOMJEFEDISTRITO,
             TPN.NOMTIPONEGOCIO                                             AS NOMTIPONEGOCIO,
             AGR.CODIGOAGRUPACIONGTECH                                      AS CODIGOAGRUPACIONGTECH,
             AGR.NOMAGRUPACIONPUNTODEVENTA                                  AS NOMAGRUPACIONPUNTODEVENTA,
             CASE WHEN PDV.ACTIVE = 1 THEN 'Activo' ELSE 'Desinstalado' END AS ESTADO
      FROM WSXML_SFG.PUNTODEVENTA PDV
      INNER JOIN WSXML_SFG.CIUDAD CDA ON (CDA.ID_CIUDAD = PDV.CODCIUDAD)
      INNER JOIN WSXML_SFG.REDPDV RED ON (RED.ID_REDPDV = PDV.CODREDPDV)
      INNER JOIN WSXML_SFG.RUTAPDV RUT ON (RUT.ID_RUTAPDV = PDV.CODRUTAPDV)
      INNER JOIN WSXML_SFG.FMR FMR ON (FMR.ID_FMR = RUT.CODFMR)
      INNER JOIN WSXML_SFG.REGIONAL REG ON (REG.ID_REGIONAL = PDV.CODREGIONAL)
      INNER JOIN WSXML_SFG.JEFEDISTRITO JEF ON (JEF.ID_JEFEDISTRITO = REG.CODJEFEDISTRITO)
      INNER JOIN WSXML_SFG.TIPONEGOCIO  TPN ON (TPN.ID_TIPONEGOCIO = PDV.CODTIPONEGOCIO)
      INNER JOIN WSXML_SFG.AGRUPACIONPUNTODEVENTA AGR ON (AGR.ID_AGRUPACIONPUNTODEVENTA = PDV.CODAGRUPACIONPUNTODEVENTA)
      INNER JOIN WSXML_SFG.RAZONSOCIAL RSC ON (RSC.ID_RAZONSOCIAL = PDV.CODRAZONSOCIAL)
      ORDER BY CAST(PDV.CODIGOGTECHPUNTODEVENTA AS NUMERIC(38,0))
  END;
 GO

  IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetRetailersInfo', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetRetailersInfo;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetRetailersInfo(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                             @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                             @pg_CADENA                NVARCHAR(2000),
                             @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                             @pg_PRODUCTO              NVARCHAR(2000)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT PDV.CODIGOGTECHPUNTODEVENTA,
             dbo.rpad_varchar2(WSXML_SFG.SFGINF_SYNCAGENTS_BCharRemove(PDV.NOMPUNTODEVENTA), 25, ' ') AS NOMPUNTODEVENTA,
             dbo.rpad_varchar2(WSXML_SFG.SFGINF_SYNCAGENTS_BCharRemove(RSC.NOMRAZONSOCIAL), 25, ' ')  AS NOMRAZONSOCIAL,
             dbo.rpad_varchar2(WSXML_SFG.SFGINF_SYNCAGENTS_BCharRemove(PDV.DIRECCION), 28, ' ')       AS DIRECCION,
             dbo.rpad_varchar2(WSXML_SFG.SFGINF_SYNCAGENTS_BCharRemove(PDV.BARRIO), 28, ' ')          AS BARRIO,
             dbo.rpad_varchar2(CDA.NOMCIUDAD, 18, ' ')                    AS NOMCIUDAD,
             DPT.ABREVIACIONDEPARTAMENTO,
             dbo.rpad_varchar2(WSXML_SFG.SFGINF_SYNCAGENTS_BCharRemove(PDV.TELEFONO), 12, ' ')        AS TELEFONO,
             CASE WHEN AGR.CODTIPOPUNTODEVENTA=3 THEN 0 ELSE CONVERT(NUMERIC,AGR.CODIGOAGRUPACIONGTECH) END AS CHAIN,
             CASE WHEN AGR.CODTIPOPUNTODEVENTA IN (1, 2) AND AGR.CODPUNTODEVENTACABEZA = PDV.ID_PUNTODEVENTA THEN 'C'
                  WHEN AGR.CODTIPOPUNTODEVENTA IN (1, 2) AND AGR.CODPUNTODEVENTACABEZA <> PDV.ID_PUNTODEVENTA THEN 'S'
                  WHEN AGR.CODTIPOPUNTODEVENTA = 3 THEN 'I' ELSE NULL END AS TIPO,
             ' ' AS NUMEROCUENTA,
             DPT.DEPARTAMENTODANE,
             dbo.lpad_varchar2(CASE WHEN LEN(CDA.CIUDADDANE) > 3 THEN SUBSTRING(CDA.CIUDADDANE, LEN(CDA.CIUDADDANE) - 2, 3) ELSE CDA.CIUDADDANE END, 3, '0') AS CIUDADDANE,
             RSC.CODREGIMEN,
             ISNULL(CONVERT(VARCHAR,RSC.IDENTIFICACION), '') + '-' + ISNULL(CONVERT(VARCHAR,RSC.DIGITOVERIFICACION), '') AS NIT,
             PDV.NUMEROTERMINAL,
             3 AS ACTIVE,
             CASE WHEN PDV.CODTIPOTERMINAL NOT IN (1, 2) THEN 1 ELSE PDV.CODTIPOTERMINAL END AS TIPOTERMINAL,
             CN.CODIGO  AS CANALDENEGOCIO,
             CASE WHEN PDV.NUMEROCELULARVIAMOVIL IS NULL THEN '            ' ELSE '57' + ISNULL(PDV.NUMEROCELULARVIAMOVIL, '')  END AS NUMEROCELULARVIAMOVIL,
             CASE WHEN CN.CODIGO ='M' THEN ltrim(FORMAT(isnull(COMISIONVIAMOVIL.VALOR,0),'#0.00')) ELSE '     ' END AS COMISIONVIAMOVIL
      FROM WSXML_SFG.PUNTODEVENTA PDV
      INNER JOIN WSXML_SFG.RAZONSOCIAL RSC ON (RSC.ID_RAZONSOCIAL = PDV.CODRAZONSOCIAL)
      INNER JOIN WSXML_SFG.CIUDAD CDA ON (CDA.ID_CIUDAD = PDV.CODCIUDAD)
      INNER JOIN WSXML_SFG.AGRUPACIONPUNTODEVENTA AGR ON (AGR.ID_AGRUPACIONPUNTODEVENTA = PDV.CODAGRUPACIONPUNTODEVENTA)
      INNER JOIN WSXML_SFG.DEPARTAMENTO DPT ON (DPT.ID_DEPARTAMENTO = CDA.CODDEPARTAMENTO)
      INNER JOIN WSXML_SFG.REDPDV RED ON PDV.CODREDPDV = RED.ID_REDPDV
      INNER JOIN WSXML_SFG.CANALNEGOCIO CN ON (RED.CODCANALNEGOCIO = CN.ID_CANALNEGOCIO) 
      LEFT OUTER JOIN 
                 (
                  SELECT RANGOCOMISION.ID_RANGOCOMISION,MAX(RANGOCOMISIONDETALLE.VALORPORCENTUAL) AS VALOR
                  FROM WSXML_SFG.RANGOCOMISIONDETALLE
                  INNER JOIN WSXML_SFG.RANGOCOMISION ON RANGOCOMISIONDETALLE.CODRANGOCOMISION = RANGOCOMISION.ID_RANGOCOMISION
                  GROUP BY RANGOCOMISION.ID_RANGOCOMISION                   
                 )COMISIONVIAMOVIL ON PDV.CODRANGOCOMISIONVIAMOVIL = COMISIONVIAMOVIL.ID_RANGOCOMISION           
      
      WHERE PDV.ACTIVE = 1
      ORDER BY CONVERT(NUMERIC,NUMEROTERMINAL);
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetRetailersFooter', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetRetailersFooter;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetRetailersFooter(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                               @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                               @pg_CADENA                NVARCHAR(2000),
                               @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                              @pg_PRODUCTO              NVARCHAR(2000)
                               ) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT (SELECT COUNT(1) FROM WSXML_SFG.AGRUPACIONPUNTODEVENTA AGR
              INNER JOIN WSXML_SFG.PUNTODEVENTA PDV ON (PDV.ID_PUNTODEVENTA = AGR.CODPUNTODEVENTACABEZA AND PDV.CODAGRUPACIONPUNTODEVENTA = AGR.ID_AGRUPACIONPUNTODEVENTA)
              WHERE CODTIPOPUNTODEVENTA <> 3 ) + 1 AS CHAINCOUNT,
             (SELECT COUNT(1) FROM WSXML_SFG.PUNTODEVENTA WHERE ACTIVE = 1) + 1 AS AGENTCOUNT
     ;
  END;
  GO

 IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetChainsInfo', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetChainsInfo;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetChainsInfo(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                          @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                          @pg_CADENA                NVARCHAR(2000),
                          @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                          @pg_PRODUCTO              NVARCHAR(2000)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT AGR.CODIGOAGRUPACIONGTECH,
             dbo.rpad_varchar2(WSXML_SFG.SFGINF_SYNCAGENTS_BCharRemove(AGR.NOMAGRUPACIONPUNTODEVENTA), 32, ' ') AS NOMAGRUPACIONPUNTODEVENTA,
             RSC.IDENTIFICACION,
             DPT.DEPARTAMENTODANE,
             dbo.lpad_varchar2(CASE WHEN LEN(CDA.CIUDADDANE) > 3 THEN SUBSTRING(CDA.CIUDADDANE, LEN(CDA.CIUDADDANE) - 2, 3) ELSE CDA.CIUDADDANE END, 3, '0') AS CIUDADDANE,
             RSC.CODREGIMEN,
             dbo.rpad_varchar2(WSXML_SFG.SFGINF_SYNCAGENTS_BCharRemove(PDV.DIRECCION), 54, ' ')    AS DIRECCION,
             dbo.rpad_varchar2(CDA.NOMCIUDAD, 18, ' ')                 AS NOMCIUDAD,
             DPT.ABREVIACIONDEPARTAMENTO,
             dbo.rpad_varchar2(WSXML_SFG.SFGINF_SYNCAGENTS_BCharRemove(PDV.TELEFONO), 12, ' ')     AS TELEFONO,
             dbo.rpad_varchar2(RSC.NOMRAZONSOCIAL, 25, ' ')            AS NOMRAZONSOCIAL
      FROM WSXML_SFG.AGRUPACIONPUNTODEVENTA AGR
      INNER JOIN WSXML_SFG.PUNTODEVENTA PDV ON (PDV.ID_PUNTODEVENTA = AGR.CODPUNTODEVENTACABEZA AND PDV.CODAGRUPACIONPUNTODEVENTA = AGR.ID_AGRUPACIONPUNTODEVENTA)
      INNER JOIN WSXML_SFG.RAZONSOCIAL RSC ON (RSC.ID_RAZONSOCIAL = PDV.CODRAZONSOCIAL)
      INNER JOIN WSXML_SFG.CIUDAD CDA ON (CDA.ID_CIUDAD = PDV.CODCIUDAD)
      INNER JOIN WSXML_SFG.DEPARTAMENTO DPT ON (DPT.ID_DEPARTAMENTO = CDA.CODDEPARTAMENTO)
      WHERE AGR.CODTIPOPUNTODEVENTA <> 3 
      ORDER BY CONVERT(NUMERIC,AGR.CODIGOAGRUPACIONGTECH);
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetChainsFooter', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetChainsFooter;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetChainsFooter(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                            @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                            @pg_CADENA                NVARCHAR(2000),
                            @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                           @pg_PRODUCTO              NVARCHAR(2000)
                            ) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT (SELECT COUNT(1) FROM WSXML_SFG.AGRUPACIONPUNTODEVENTA AGR
              INNER JOIN WSXML_SFG.PUNTODEVENTA PDV ON (PDV.ID_PUNTODEVENTA = AGR.CODPUNTODEVENTACABEZA AND PDV.CODAGRUPACIONPUNTODEVENTA = AGR.ID_AGRUPACIONPUNTODEVENTA)
              WHERE CODTIPOPUNTODEVENTA <> 3 ) + 1 AS CHAINCOUNT,
             (SELECT COUNT(1) FROM WSXML_SFG.PUNTODEVENTA WHERE ACTIVE = 1) + 1 AS AGENTCOUNT
     ;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetChainTypesInfo', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetChainTypesInfo;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetChainTypesInfo(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                              @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                              @pg_CADENA                NVARCHAR(2000),
                              @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                             @pg_PRODUCTO              NVARCHAR(2000)
                              ) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT CODIGOAGRUPACIONGTECH,
             2 AS CODTIPOPUNTODEVENTA,/*siempre independiente*/
             CODIGOGTECHPUNTODEVENTA
      FROM WSXML_SFG.AGRUPACIONPUNTODEVENTA
      INNER JOIN WSXML_SFG.PUNTODEVENTA ON (CODPUNTODEVENTACABEZA = ID_PUNTODEVENTA)
      WHERE CODTIPOPUNTODEVENTA <> 3 AND CODAGRUPACIONPUNTODEVENTA = ID_AGRUPACIONPUNTODEVENTA
      ORDER BY CAST(CODIGOAGRUPACIONGTECH AS NUMERIC(38,0));
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_BCharRemove', 'FN') IS NOT NULL
  DROP FUNCTION WSXML_SFG.SFGINF_SYNCAGENTS_BCharRemove;
GO

CREATE     FUNCTION WSXML_SFG.SFGINF_SYNCAGENTS_BCharRemove(@InitialText NVARCHAR(2000)) RETURNS NVARCHAR(2000) AS
 BEGIN
    DECLARE @FinalText NVARCHAR(2000);
   
    SET @FinalText = ISNULL(@InitialText, ' ');
    SET @FinalText = REPLACE(@FinalText, '|', ' ');
    RETURN @FinalText;
  END;
GO

  /*Reporte tipo dane de puntos de venta y cadenas (en cadena los campos agente ,direccion,ciudad son del punto de venta cabeza)*/
  IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetDanePDVAndChains', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDanePDVAndChains;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDanePDVAndChains(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                              @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                              @pg_CADENA                NVARCHAR(2000),
                              @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                             @pg_PRODUCTO              NVARCHAR(2000)
                              ) AS
  
GO

/*Reporte tipo dane para los puntos de venta de cundinamarca*/
  IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneCundiPOS', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneCundiPOS;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneCundiPOS(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                              @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                              @pg_CADENA                NVARCHAR(2000),
                              @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                              @pg_PRODUCTO              NVARCHAR(2000)) AS
  BEGIN
  SET NOCOUNT ON;
        SELECT  PUNTODEVENTA.CODIGOGTECHPUNTODEVENTA   AS  AGENTE,
                CONVERT(NUMERIC,PUNTODEVENTA.NUMEROTERMINAL) AS  TERMINAL,
                PUNTODEVENTA.NOMPUNTODEVENTA           AS  NOMBRE,
                ISNULL(PUNTODEVENTA.DIRECCION,' ')        AS  DIRECCION,
                CIUDAD.NOMCIUDAD                       AS CIUDAD,
                SUBSTRING(CIUDAD.CIUDADDANE,1,2)          AS  DEPARTAMENTODANE,
                SUBSTRING(CIUDAD.CIUDADDANE,3,3)          AS  CIUDADDANE
        FROM WSXML_SFG.PUNTODEVENTA
        INNER JOIN WSXML_SFG.CIUDAD ON PUNTODEVENTA.CODCIUDAD = CIUDAD.ID_CIUDAD
        WHERE PUNTODEVENTA.ACTIVE=1 AND  SUBSTRING(CIUDAD.CIUDADDANE,1,2) IN ('11','25')
        ORDER BY  CONVERT(NUMERIC,PUNTODEVENTA.NUMEROTERMINAL) ;
  END;
  GO

/*Reporte tipo dane para los puntos de venta*/
  IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetDanePOS', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDanePOS;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDanePOS(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                              @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                              @pg_CADENA                NVARCHAR(2000),
                              @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                             @pg_PRODUCTO              NVARCHAR(2000)
                              ) AS
  BEGIN
  SET NOCOUNT ON;
        SELECT  PUNTODEVENTA.CODIGOGTECHPUNTODEVENTA   AS  AGENTE,
                CAST(PUNTODEVENTA.NUMEROTERMINAL AS NUMERIC(38,0)) AS  TERMINAL,
                PUNTODEVENTA.NOMPUNTODEVENTA           AS  NOMBRE,
                ISNULL(PUNTODEVENTA.DIRECCION,' ')        AS  DIRECCION,
                CIUDAD.NOMCIUDAD                       AS CIUDAD,
                SUBSTRING(CIUDAD.CIUDADDANE,1,2)          AS  DEPARTAMENTODANE,
                SUBSTRING(CIUDAD.CIUDADDANE,3,3)          AS  CIUDADDANE
        FROM WSXML_SFG.PUNTODEVENTA
        INNER JOIN WSXML_SFG.CIUDAD ON PUNTODEVENTA.CODCIUDAD = CIUDAD.ID_CIUDAD
        WHERE PUNTODEVENTA.ACTIVE=1
        ORDER BY  CAST(PUNTODEVENTA.NUMEROTERMINAL AS NUMERIC(38,0)) ;
 END;
GO

  /*Reporte tipo dane de puntos de venta y cadenas (en cadena los campos agente ,direccion,ciudad son del punto de venta cabeza)*/
  IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneChains', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneChains;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneChains(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                              @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                              @pg_CADENA                NVARCHAR(2000),
                              @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                             @pg_PRODUCTO              NVARCHAR(2000)
                              ) AS
  BEGIN
  SET NOCOUNT ON;
        SELECT  PUNTODEVENTA.NUMEROTERMINAL                                    AS  AGENTE,
                CAST(AGRUPACIONPUNTODEVENTA.CODIGOAGRUPACIONGTECH AS NUMERIC(38,0))+90000  AS  TERMINAL,
                AGRUPACIONPUNTODEVENTA.NOMAGRUPACIONPUNTODEVENTA               AS  NOMBRE,
                ISNULL(PUNTODEVENTA.DIRECCION,' ')                                AS  DIRECCION,
                CIUDAD.NOMCIUDAD                                               AS  CIUDAD,
                SUBSTRING(CIUDAD.CIUDADDANE,1,2)                                  AS  DEPARTAMENTODANE,
                SUBSTRING(CIUDAD.CIUDADDANE,3,3)                                  AS  CIUDADDANE
        FROM WSXML_SFG.AGRUPACIONPUNTODEVENTA
        INNER JOIN WSXML_SFG.PUNTODEVENTA ON AGRUPACIONPUNTODEVENTA.CODPUNTODEVENTACABEZA=PUNTODEVENTA.ID_PUNTODEVENTA
        INNER JOIN WSXML_SFG.CIUDAD ON PUNTODEVENTA.CODCIUDAD = CIUDAD.ID_CIUDAD
        WHERE AGRUPACIONPUNTODEVENTA.ACTIVE=1 AND PUNTODEVENTA.ACTIVE=1
        ORDER BY CAST(AGRUPACIONPUNTODEVENTA.CODIGOAGRUPACIONGTECH AS NUMERIC(38,0));
   END;

GO

/*Reporte tipo dane para los puntos de venta*/
  IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneOnlyBaloto', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneOnlyBaloto;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneOnlyBaloto(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                              @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                              @pg_CADENA                NVARCHAR(2000),
                              @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                             @pg_PRODUCTO              NVARCHAR(2000)
                              ) AS
 BEGIN
  DECLARE @FECHACICLO  DATETIME;
  DECLARE @FECHAINICIO DATETIME;
  DECLARE @FECHAFIN    DATETIME;
   
  SET NOCOUNT ON;
      SELECT @FECHACICLO = FECHAEJECUCION FROM WSXML_SFG.CICLOFACTURACIONPDV WHERE ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV;
      EXEC WSXML_SFG.SFG_PACKAGE_GetMonthRange @FECHACICLO,@FECHAINICIO OUT,@FECHAFIN OUT
         SELECT PUNTODEVENTA.CODIGOGTECHPUNTODEVENTA   AS  AGENTE,
                CAST(PUNTODEVENTA.NUMEROTERMINAL  AS NUMERIC(38,0)) AS  TERMINAL,
                PUNTODEVENTA.NOMPUNTODEVENTA           AS  NOMBRE,
                ISNULL(PUNTODEVENTA.DIRECCION,' ')        AS  DIRECCION,
                CIUDAD.NOMCIUDAD                       AS CIUDAD,
                SUBSTRING(RTRIM(LTRIM(CIUDAD.CIUDADDANE)),1,2)          AS  DEPARTAMENTODANE,
                SUBSTRING(RTRIM(LTRIM(CIUDAD.CIUDADDANE)),3,3)          AS  CIUDADDANE
        FROM WSXML_SFG.PUNTODEVENTA
        INNER JOIN WSXML_SFG.CIUDAD ON PUNTODEVENTA.CODCIUDAD = CIUDAD.ID_CIUDAD
        INNER JOIN
           (
           SELECT ID_PUNTODEVENTA
           FROM WSXML_SFG.PUNTODEVENTA
           WHERE
                NOT(
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('%PPago%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('%PPP%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('%Of validacion%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('%AEL PAGADORA%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('Loteria de Bogota%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('Fiducolombia%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('Bancolombia%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('Baloto movil%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('%Citibank%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('%Ventas especiales%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('GTECH%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('PRUEBA%') OR
              UPPER(PUNTODEVENTA.NOMPUNTODEVENTA) LIKE UPPER('%TEST%'))
           ) PDVVTASBALOTO ON PUNTODEVENTA.ID_PUNTODEVENTA = PDVVTASBALOTO.ID_PUNTODEVENTA
        WHERE PUNTODEVENTA.ACTIVE=1
        ORDER BY  CAST(PUNTODEVENTA.NUMEROTERMINAL AS NUMERIC(38,0)) ;
 END;
GO

IF OBJECT_ID('WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneCundiPOSAuto', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneCundiPOSAuto;
GO

CREATE PROCEDURE WSXML_SFG.SFGINF_SYNCAGENTS_GetDaneCundiPOSAuto(@p_ID_DETALLETAREAEJECUTADA NUMERIC(22,0),
                                 @p_FECHA                    DATETIME
                                  ) AS
  BEGIN
  SET NOCOUNT ON;
       SELECT CONVERT(VARCHAR, CAST(PUNTODEVENTA.CODIGOGTECHPUNTODEVENTA AS NUMERIC(38,0))) AS AGENTE,
             CAST(PUNTODEVENTA.NUMEROTERMINAL AS NUMERIC(38,0)) AS TERMINAL,
             PUNTODEVENTA.NOMPUNTODEVENTA AS NOMBRE,
             ISNULL(PUNTODEVENTA.DIRECCION, ' ') AS DIRECCION,
             CIUDAD.NOMCIUDAD AS CIUDAD,
             SUBSTRING(RTRIM(LTRIM(CIUDAD.CIUDADDANE)), 1, 2) AS DEPARTAMENTODANE,
             SUBSTRING(RTRIM(LTRIM(CIUDAD.CIUDADDANE)), 3, 3) AS CIUDADDANE
        FROM WSXML_SFG.PUNTODEVENTA
     INNER JOIN WSXML_SFG.CIUDAD
          ON PUNTODEVENTA.CODCIUDAD = CIUDAD.ID_CIUDAD
       WHERE PUNTODEVENTA.ACTIVE = 1
         AND SUBSTRING(CIUDAD.CIUDADDANE, 1, 2) IN ('11', '25') 
         and PUNTODEVENTA.CODDUENOPUNTODEVENTA = 0 
         AND CODTIPOTERMINAL NOT IN (3)
       ORDER BY CAST(PUNTODEVENTA.NUMEROTERMINAL AS NUMERIC(38,0));
          
  END;

GO


