USE SFGPRODU;
--  DDL for Package Body SFGCERTIFICACIONCOLABORACION
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGCERTIFICACIONCOLABORACION */ 

  IF OBJECT_ID('WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetMontlyDateRange', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetMontlyDateRange;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetMontlyDateRange(@p_FECHA DATETIME) AS
 BEGIN
    DECLARE @firstDAY DATETIME;
    DECLARE @lastDAY  DATETIME;
   
  SET NOCOUNT ON;
    -- Siempre se genera al mes recibido. Logica de obtencion de mes completo en Capa SFGCLassLibrary
    EXEC WSXML_SFG.SFG_PACKAGE_GetMonthRange @p_FECHA, @firstDAY OUT, @lastDAY OUT
      SELECT @firstDAY AS PRIMERDIA, @lastDAY AS ULTIMODIA;
  END;
  GO

  IF OBJECT_ID('WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetRazonesSocialesCertificados', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetRazonesSocialesCertificados;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetRazonesSocialesCertificados AS
  BEGIN
  SET NOCOUNT ON;
      SELECT RSC.ID_RAZONSOCIAL            AS ID_RAZONSOCIAL,
             RSC.IDENTIFICACION            AS IDENTIFICACION,
             RSC.DIGITOVERIFICACION        AS DIGITOVERIFICACION,
             RSC.NOMRAZONSOCIAL            AS NOMRAZONSOCIAL,
             RCT.FECHACONTRATO             AS FECHACONTRATO,
             RCT.CODCOMPANIA               AS CODCOMPANIA
      FROM WSXML_SFG.RAZONSOCIAL RSC
      INNER JOIN WSXML_SFG.RAZONSOCIALCONTRATO RCT ON (RCT.CODRAZONSOCIAL = RSC.ID_RAZONSOCIAL AND RCT.CODTIPOCONTRATOPDV = 3)
      ORDER BY RSC.ID_RAZONSOCIAL;
  END;
  GO

  IF OBJECT_ID('WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetTiposContratoProducto', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetTiposContratoProducto;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetTiposContratoProducto AS
  BEGIN
  SET NOCOUNT ON;
      SELECT ID_TIPOCONTRATOPRODUCTO, DESCRIPCION, NOMTIPOCONTRATOPRODUCTO FROM WSXML_SFG.TIPOCONTRATOPRODUCTO
      ORDER BY ORDEN;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetCompanias', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetCompanias;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetCompanias AS
  BEGIN
  SET NOCOUNT ON;
      SELECT ID_COMPANIA, CASE WHEN CODIGO = '105' THEN 'GF' ELSE 'GC' END AS ABREVIACION,
             CODIGO, NOMCOMPANIA, IDENTIFICACION, DIGITOVERIFICACION
      FROM WSXML_SFG.COMPANIA
      ORDER BY CAST(CODIGO AS NUMERIC(38,0));
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetMonthlyInvoiceInfo', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetMonthlyInvoiceInfo;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCERTIFICACIONCOLABORACION_GetMonthlyInvoiceInfo(@p_FECHA DATETIME) AS
 BEGIN
    DECLARE @firstDAY DATETIME;
    DECLARE @lastDAY  DATETIME;
    DECLARE @filelst  WSXML_SFG.NUMBERARRAY;
   
  SET NOCOUNT ON;
    -- Siempre se genera al mes recibido. Logica de obtencion de mes a generar en Capa SFGCLassLibrary
    EXEC WSXML_SFG.SFG_PACKAGE_GetMonthRange @p_FECHA, @firstDAY OUT , @lastDAY OUT
    -- Obtener tabla de archivos cabeza
	INSERT INTO @filelst 
    SELECT ID_ENTRADAARCHIVOCONTROL FROM ENTRADAARCHIVOCONTROL
--    WHERE FECHAARCHIVO BETWEEN firstDAY AND lastDAY
    WHERE (FECHAARCHIVO BETWEEN @firstDAY AND @lastDAY)
      AND REVERSADO = 0;
    -- Cursor de prefacturacion
      SELECT /*+ index REGISTROFACTURACION (REGISTROFACT_IDENTIFTIPOPRD_IX) */
              REG.CODRAZONSOCIAL, REG.CODCOMPANIA, REG.CODTIPOCONTRATOPRODUCTO,
              -- Comision Calculada + anticipo
              ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN REG.VALORCOMISION ELSE 0 END) -
                    SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN REG.VALORCOMISION ELSE 0 END), 6)                            AS INGRESOPDV,
              -- IVA de la Comision
              ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN REG.IVACOMISION ELSE 0 END) -
                    SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN REG.IVACOMISION ELSE 0 END), 6)                              AS IVAINGRESOPDV,
              -- ReteFuente
              ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN ISNULL(RET.RETEFUENTE, 0) + ISNULL(UVT.RETEUVT, 0) ELSE 0 END) -
                    SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN ISNULL(RET.RETEFUENTE, 0) + ISNULL(UVT.RETEUVT, 0) ELSE 0 END), 6) AS RETEFUENTE,
              -- ReteICA
              ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN ISNULL(RET.RETEICA, 0) ELSE 0 END) -
                    SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN ISNULL(RET.RETEICA, 0) ELSE 0 END), 6)                          AS RETEICA,
              -- ReteIVA
              ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN ISNULL(RET.RETEIVA, 0) ELSE 0 END) -
                    SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN ISNULL(RET.RETEIVA, 0) ELSE 0 END), 6)                          AS RETEIVA,
              -- ReteCREE
              ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN ISNULL(RET.RETECREE, 0) ELSE 0 END) -
                    SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN ISNULL(RET.RETECREE, 0) ELSE 0 END), 6)                         AS RETECREE
       FROM (SELECT IDValue AS ID_ENTRADAARCHIVOCONTROL FROM @filelst) CTR
       INNER JOIN WSXML_SFG.REGISTROFACTURACION    REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL AND REG.CODTIPOREGISTRO <> 5 AND REG.CODTIPOCONTRATOPDV = 3)
       INNER JOIN WSXML_SFG.PUNTODEVENTA           PDV ON (PDV.ID_PUNTODEVENTA          = REG.CODPUNTODEVENTA)
       LEFT OUTER JOIN (SELECT CODENTRADAARCHIVOCONTROL, CODREGISTROFACTURACION,
                               SUM(CASE WHEN CODRETENCIONTRIBUTARIA = 1 THEN VALORRETENCION ELSE 0 END) AS RETEFUENTE,
                               SUM(CASE WHEN CODRETENCIONTRIBUTARIA = 2 THEN VALORRETENCION ELSE 0 END) AS RETEICA,
                               SUM(CASE WHEN CODRETENCIONTRIBUTARIA = 3 THEN VALORRETENCION ELSE 0 END) AS RETEIVA,
                               SUM(CASE WHEN CODRETENCIONTRIBUTARIA = 4 THEN VALORRETENCION ELSE 0 END) AS RETECREE
                        FROM WSXML_SFG.RETENCIONREGFACTURACION
                        GROUP BY CODENTRADAARCHIVOCONTROL, CODREGISTROFACTURACION) RET ON (RET.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL
                                                                                       AND RET.CODREGISTROFACTURACION   = REG.ID_REGISTROFACTURACION)
       LEFT OUTER JOIN (SELECT CODENTRADAARCHIVOCONTROL, CODREGISTROFACTURACION,
                               SUM(CASE WHEN CODRETENCIONUVT = 1 THEN VALORRETENCION ELSE 0 END) AS RETEUVT
                        FROM RETUVTREGFACTURACION
                        GROUP BY CODENTRADAARCHIVOCONTROL, CODREGISTROFACTURACION) UVT ON (UVT.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL
                                                                                       AND UVT.CODREGISTROFACTURACION   = REG.ID_REGISTROFACTURACION)
       GROUP BY REG.CODRAZONSOCIAL, REG.CODCOMPANIA, REG.CODTIPOCONTRATOPRODUCTO;
  END;


GO


