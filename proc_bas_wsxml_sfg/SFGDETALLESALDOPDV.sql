USE SFGPRODU;
--  DDL for Package Body SFGDETALLESALDOPDV
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGDETALLESALDOPDV */ 

  IF OBJECT_ID('WSXML_SFG.SFGDETALLESALDOPDV_AddRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_AddRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_AddRecord(@p_CODPUNTODEVENTA        NUMERIC(22,0),
                      @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                      @p_FECHALIMITEPAGOGTECH   DATETIME,
                      @p_FECHALIMITEPAGOFIDUCIA DATETIME,
                      @p_NUMDIASMORAGTECH       NUMERIC(22,0),
                      @p_NUMDIASMORAFIDUCIA     NUMERIC(22,0),
                      @p_SALDOAFAVORGTECH       FLOAT,
                      @p_SALDOAFAVORFIDUCIA     FLOAT,
                      @p_SALDOCONTRAGTECH       FLOAT,
                      @p_SALDOCONTRAFIDUCIA     FLOAT,
                      @p_CODUSUARIOMODIFICACION NUMERIC(22,0),
                      @p_ID_DETALLESALDOPDV_out NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    INSERT INTO WSXML_SFG.DETALLESALDOPDV(
                                CODPUNTODEVENTA,
                                CODLINEADENEGOCIO,
                                FECHALIMITEPAGOGTECH,
                                FECHALIMITEPAGOFIDUCIA,
                                NUMDIASMORAGTECH,
                                NUMDIASMORAFIDUCIA,
                                SALDOAFAVORGTECH,
                                SALDOAFAVORFIDUCIA,
                                SALDOCONTRAGTECH,
                                SALDOCONTRAFIDUCIA,
                                CODUSUARIOMODIFICACION)
    VALUES (
            @p_CODPUNTODEVENTA,
            @p_CODLINEADENEGOCIO,
            @p_FECHALIMITEPAGOGTECH,
            @p_FECHALIMITEPAGOFIDUCIA,
            @p_NUMDIASMORAGTECH,
            @p_NUMDIASMORAFIDUCIA,
            @p_SALDOAFAVORGTECH,
            @p_SALDOAFAVORFIDUCIA,
            @p_SALDOCONTRAGTECH,
            @p_SALDOCONTRAFIDUCIA,
            @p_CODUSUARIOMODIFICACION);
    SET @p_ID_DETALLESALDOPDV_out = SCOPE_IDENTITY();
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLESALDOPDV_UpdateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_UpdateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_UpdateRecord(@pk_ID_DETALLESALDOPDV    NUMERIC(22,0),
                         @p_CODPUNTODEVENTA        NUMERIC(22,0),
                         @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                         @p_FECHALIMITEPAGOGTECH   DATETIME,
                         @p_FECHALIMITEPAGOFIDUCIA DATETIME,
                         @p_NUMDIASMORAGTECH       NUMERIC(22,0),
                         @p_NUMDIASMORAFIDUCIA     NUMERIC(22,0),
                         @p_SALDOAFAVORGTECH       FLOAT,
                         @p_SALDOAFAVORFIDUCIA     FLOAT,
                         @p_SALDOCONTRAGTECH       FLOAT,
                         @p_SALDOCONTRAFIDUCIA     FLOAT,
                         @p_CODUSUARIOMODIFICACION NUMERIC(22,0),
                         @p_ACTIVE                 NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.DETALLESALDOPDV
       SET CODPUNTODEVENTA        = @p_CODPUNTODEVENTA,
           CODLINEADENEGOCIO      = @p_CODLINEADENEGOCIO,
           FECHALIMITEPAGOGTECH   = @p_FECHALIMITEPAGOGTECH,
           FECHALIMITEPAGOFIDUCIA = @p_FECHALIMITEPAGOFIDUCIA,
           NUMDIASMORAGTECH       = @p_NUMDIASMORAGTECH,
           NUMDIASMORAFIDUCIA     = @p_NUMDIASMORAFIDUCIA,
           SALDOAFAVORGTECH       = @p_SALDOAFAVORGTECH,
           SALDOAFAVORFIDUCIA     = @p_SALDOAFAVORFIDUCIA,
           SALDOCONTRAGTECH       = @p_SALDOCONTRAGTECH,
           SALDOCONTRAFIDUCIA     = @p_SALDOCONTRAFIDUCIA,
           CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION,
           ACTIVE                 = @p_ACTIVE
     WHERE ID_DETALLESALDOPDV = @pk_ID_DETALLESALDOPDV;
	 
	 
	DECLARE @rowcount NUMERIC(22,0) = @@ROWCOUNT;
    IF @rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 

  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLESALDOPDV_GetRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_GetRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_GetRecord(@pk_ID_DETALLESALDOPDV NUMERIC(22,0)) AS
 BEGIN
    DECLARE @l_count INTEGER;
   
  SET NOCOUNT ON;
    SELECT @l_count = COUNT(*) FROM WSXML_SFG.DETALLESALDOPDV WHERE ID_DETALLESALDOPDV = @pk_ID_DETALLESALDOPDV;
    IF @l_count = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @l_count > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 

      SELECT ID_DETALLESALDOPDV,
             CODPUNTODEVENTA,
             CODLINEADENEGOCIO,
             FECHALIMITEPAGOGTECH,
             FECHALIMITEPAGOFIDUCIA,
             NUMDIASMORAGTECH,
             NUMDIASMORAFIDUCIA,
             SALDOAFAVORGTECH,
             SALDOAFAVORFIDUCIA,
             SALDOCONTRAGTECH,
             SALDOCONTRAFIDUCIA,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.DETALLESALDOPDV
       WHERE ID_DETALLESALDOPDV = @pk_ID_DETALLESALDOPDV;
  END;
GO


  IF OBJECT_ID('WSXML_SFG.SFGDETALLESALDOPDV_GetSaldoActualPDV', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_GetSaldoActualPDV;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_GetSaldoActualPDV(@p_CODPUNTODEVENTA NUMERIC(22,0), @p_CODLINEADENEGOCIO NUMERIC(22,0)) AS
 BEGIN
    DECLARE @varCODDETALLESALDOPDV NUMERIC(22,0);
   
  SET NOCOUNT ON;
    BEGIN
	  BEGIN TRY
		  SELECT @varCODDETALLESALDOPDV = CODDETALLESALDOPDV FROM WSXML_SFG.SALDOPDV
		   WHERE CODPUNTODEVENTA = @p_CODPUNTODEVENTA
			 AND CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
			 AND ACTIVE = 1;
		END TRY
		BEGIN CATCH
			RAISERROR('-20054 The record does not exist.', 16, 1);
		END CATCH
    END;


      SELECT ID_DETALLESALDOPDV,
             CODPUNTODEVENTA,
             CODLINEADENEGOCIO,
             FECHALIMITEPAGOGTECH,
             FECHALIMITEPAGOFIDUCIA,
             NUMDIASMORAGTECH,
             NUMDIASMORAFIDUCIA,
             SALDOAFAVORGTECH,
             SALDOAFAVORFIDUCIA,
             SALDOCONTRAGTECH,
             SALDOCONTRAFIDUCIA,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
      FROM WSXML_SFG.DETALLESALDOPDV
      WHERE ID_DETALLESALDOPDV = @varCODDETALLESALDOPDV;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLESALDOPDV_GetValuesSaldoActualPDV', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_GetValuesSaldoActualPDV;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_GetValuesSaldoActualPDV(@p_CODPUNTODEVENTA NUMERIC(22,0), @p_CODLINEADENEGOCIO NUMERIC(22,0), @p_CODDETALLESALDOPDV_out NUMERIC(22,0) OUT, @p_SALDOAFAVORGTECH FLOAT OUT, @p_SALDOAFAVORFIDUCIA FLOAT OUT, @p_SALDOCONTRAGTECH FLOAT OUT, @p_SALDOCONTRAFIDUCIA FLOAT OUT) AS
 BEGIN
    DECLARE @varCODDETALLESALDOPDV NUMERIC(22,0);
   
  SET NOCOUNT ON;
    BEGIN
		begin try
      SELECT @varCODDETALLESALDOPDV = CODDETALLESALDOPDV FROM WSXML_SFG.SALDOPDV
       WHERE CODPUNTODEVENTA = @p_CODPUNTODEVENTA
         AND CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
         AND ACTIVE = 1;
		end try
		begin catch
			RAISERROR('-20054 The record does not exist.', 16, 1);
		end catch
    END;


    SELECT @p_SALDOAFAVORGTECH = SALDOAFAVORGTECH,
           @p_SALDOAFAVORFIDUCIA = SALDOAFAVORFIDUCIA,
           @p_SALDOCONTRAGTECH = SALDOCONTRAGTECH,
           @p_SALDOCONTRAFIDUCIA = SALDOCONTRAFIDUCIA
           FROM WSXML_SFG.DETALLESALDOPDV WHERE ID_DETALLESALDOPDV = @varCODDETALLESALDOPDV;
    SET @p_CODDETALLESALDOPDV_out = @varCODDETALLESALDOPDV;
  END;
GO


  IF OBJECT_ID('WSXML_SFG.SFGDETALLESALDOPDV_GetPreviousValuesFromBilling', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_GetPreviousValuesFromBilling;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_GetPreviousValuesFromBilling(@p_CODMAESTROFACTURACIONPDV NUMERIC(22,0),
                                         @p_CODPUNTODEVENTA          NUMERIC(22,0),
                                         @p_CODLINEADENEGOCIO        NUMERIC(22,0),
                                         @p_SALDOANTERIORCONTRAGTECH NUMERIC(22,0) OUT,
                                         @p_SALDOANTERIORCONTRAFDCIA NUMERIC(22,0) OUT,
                                         @p_SALDOANTERIORAFAVORGTECH NUMERIC(22,0) OUT,
                                         @p_SALDOANTERIORAFAVORFDCIA NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    BEGIN
		BEGIN TRY
			  SELECT @p_SALDOANTERIORCONTRAGTECH = SALDOCONTRAGTECH, @p_SALDOANTERIORCONTRAFDCIA = SALDOCONTRAFIDUCIA, @p_SALDOANTERIORAFAVORGTECH = SALDOAFAVORGTECH, @p_SALDOANTERIORAFAVORFDCIA = SALDOAFAVORFIDUCIA
			  FROM (SELECT SALDOCONTRAGTECH, SALDOCONTRAFIDUCIA, SALDOAFAVORGTECH, SALDOAFAVORFIDUCIA
					FROM (SELECT CODPUNTODEVENTA, CODLINEADENEGOCIO, CODMAESTROFACTURACIONPDV, SALDOCONTRAGTECH, SALDOCONTRAFIDUCIA, SALDOAFAVORGTECH, SALDOAFAVORFIDUCIA
						  FROM WSXML_SFG.DETALLESALDOPDV
						  WHERE CODPUNTODEVENTA = @p_CODPUNTODEVENTA
							AND CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
							AND CODMAESTROFACTURACIONPDV < @p_CODMAESTROFACTURACIONPDV
							AND ACTIVE = 1 -- Ensures that only active balances are considered
						  --ORDER BY FECHAHORAMODIFICACION DESC
						  ) s
				   ) s;
		END TRY
		BEGIN CATCH
			-- El punto de venta no tiene facturacion previa
			  SET @p_SALDOANTERIORCONTRAGTECH = 0;
			  SET @p_SALDOANTERIORCONTRAFDCIA = 0;
			  SET @p_SALDOANTERIORAFAVORGTECH = 0;
			  SET @p_SALDOANTERIORAFAVORFDCIA = 0;
		END CATCH
    END;

  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLESALDOPDV_SetCodSaldoActualPDV', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_SetCodSaldoActualPDV;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_SetCodSaldoActualPDV(@p_CODPUNTODEVENTA          NUMERIC(22,0),
                                 @p_CODLINEADENEGOCIO        NUMERIC(22,0),
                                 @p_CODMAESTROFACTURACIONPDV NUMERIC(22,0),
                                 @p_CODUSUARIOMODIFICACION   NUMERIC(22,0),
                                 @p_CODDETALLESALDOPDV_out   NUMERIC(22,0) OUT) AS
 BEGIN
    DECLARE @thisDETALLESALDOPDV NUMERIC(22,0);
    DECLARE @thisSALDOPDV        NUMERIC(22,0);
   
  SET NOCOUNT ON;
    BEGIN
      SELECT @thisDETALLESALDOPDV = ID_DETALLESALDOPDV FROM WSXML_SFG.DETALLESALDOPDV
      WHERE CODMAESTROFACTURACIONPDV = @p_CODMAESTROFACTURACIONPDV;
		
		IF @@ROWCOUNT = 0  BEGIN

			DECLARE @thisSALDOAFAVORGTECH   FLOAT = 0;
			DECLARE @thisSALDOAFAVORFIDUCIA FLOAT = 0;
			DECLARE @thisSALDOCONTRAGTECH   FLOAT = 0;
			DECLARE @thisSALDOCONTRAFIDUCIA FLOAT = 0;

			  BEGIN
				INSERT INTO WSXML_SFG.DETALLESALDOPDV (
											 CODPUNTODEVENTA,
											 CODLINEADENEGOCIO,
											 SALDOAFAVORGTECH,
											 SALDOAFAVORFIDUCIA,
											 SALDOCONTRAGTECH,
											 SALDOCONTRAFIDUCIA,
											 CODMAESTROFACTURACIONPDV,
											 CODUSUARIOMODIFICACION)
				VALUES (
						@p_CODPUNTODEVENTA,
						@p_CODLINEADENEGOCIO,
						@thisSALDOAFAVORGTECH,
						@thisSALDOAFAVORFIDUCIA,
						@thisSALDOCONTRAGTECH,
						@thisSALDOCONTRAFIDUCIA,
						@p_CODMAESTROFACTURACIONPDV,
						@p_CODUSUARIOMODIFICACION);
				SET @thisDETALLESALDOPDV = SCOPE_IDENTITY();
			  END;
		END
    END;

    IF @thisDETALLESALDOPDV > 0
	BEGIN
        SELECT @thisSALDOPDV = ID_SALDOPDV FROM WSXML_SFG.SALDOPDV WHERE CODPUNTODEVENTA = @p_CODPUNTODEVENTA AND CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO;
		
		IF @@ROWCOUNT = 0 BEGIN
      
			INSERT INTO WSXML_SFG.SALDOPDV (
								  CODPUNTODEVENTA,
								  CODLINEADENEGOCIO,
								  CODDETALLESALDOPDV,
								  CODUSUARIOMODIFICACION)
			VALUES (
					@p_CODPUNTODEVENTA,
					@p_CODLINEADENEGOCIO,
					@thisDETALLESALDOPDV,
					@p_CODUSUARIOMODIFICACION);
			SET @thisDETALLESALDOPDV = SCOPE_IDENTITY();
		END ELSE BEGIN		
			UPDATE WSXML_SFG.SALDOPDV SET CODDETALLESALDOPDV = @thisDETALLESALDOPDV,
								CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION,
								FECHAHORAMODIFICACION  = GETDATE(),
								ACTIVE                 = 1
			WHERE ID_SALDOPDV = @thisSALDOPDV;
		END

	END;
    ELSE BEGIN
		RAISERROR('-20054 No se pudo ingresar el registro de saldo', 16, 1);
		RETURN 0;
	END
    
	SET @p_CODDETALLESALDOPDV_OUT = @thisDETALLESALDOPDV;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLESALDOPDV_SetSaldoActualPDV', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_SetSaldoActualPDV;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_SetSaldoActualPDV(@p_CODPUNTODEVENTA          NUMERIC(22,0),
                              @p_CODLINEADENEGOCIO        NUMERIC(22,0),
                              @p_SALDOAFAVORGTECH         FLOAT,
                              @p_SALDOAFAVORFIDUCIA       FLOAT,
                              @p_SALDOCONTRAGTECH         FLOAT,
                              @p_SALDOCONTRAFIDUCIA       FLOAT,
                              @p_CODMAESTROFACTURACIONPDV NUMERIC(22,0),
                              @p_CODUSUARIOMODIFICACION   NUMERIC(22,0),
                              @p_CODDETALLESALDOPDV_out   NUMERIC(22,0) OUT) AS
 BEGIN
    DECLARE @thisDETALLESALDOPDV NUMERIC(22,0);
    DECLARE @thisSALDOPDV        NUMERIC(22,0);
   
  SET NOCOUNT ON;
    BEGIN
      SELECT @thisDETALLESALDOPDV = ID_DETALLESALDOPDV FROM WSXML_SFG.DETALLESALDOPDV
      WHERE CODMAESTROFACTURACIONPDV = @p_CODMAESTROFACTURACIONPDV;
      
		IF @@ROWCOUNT = 0 BEGIN
		  INSERT INTO WSXML_SFG.DETALLESALDOPDV (
									   CODPUNTODEVENTA,
									   CODLINEADENEGOCIO,
									   SALDOAFAVORGTECH,
									   SALDOAFAVORFIDUCIA,
									   SALDOCONTRAGTECH,
									   SALDOCONTRAFIDUCIA,
									   CODMAESTROFACTURACIONPDV,
									   CODUSUARIOMODIFICACION)
		  VALUES (
				  @p_CODPUNTODEVENTA,
				  @p_CODLINEADENEGOCIO,
				  @p_SALDOAFAVORGTECH,
				  @p_SALDOAFAVORFIDUCIA,
				  @p_SALDOCONTRAGTECH,
				  @p_SALDOCONTRAFIDUCIA,
				  @p_CODMAESTROFACTURACIONPDV,
				  @p_CODUSUARIOMODIFICACION);
		  SET @thisDETALLESALDOPDV = SCOPE_IDENTITY();
		END ELSE BEGIN
		
			UPDATE WSXML_SFG.DETALLESALDOPDV SET SALDOAFAVORGTECH = @p_SALDOAFAVORGTECH,
									 SALDOAFAVORFIDUCIA = @p_SALDOAFAVORFIDUCIA,
									 SALDOCONTRAGTECH   = @p_SALDOCONTRAGTECH,
									 SALDOCONTRAFIDUCIA = @p_SALDOCONTRAFIDUCIA,
									 FECHAHORAMODIFICACION = GETDATE(),
									 CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION
			WHERE ID_DETALLESALDOPDV = @thisDETALLESALDOPDV;
		  
		END
    END;

    IF @thisDETALLESALDOPDV > 0
    BEGIN
        SELECT @thisSALDOPDV = ID_SALDOPDV FROM WSXML_SFG.SALDOPDV WHERE CODPUNTODEVENTA = @p_CODPUNTODEVENTA AND CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO;
        
		IF @@ROWCOUNT = 0 BEGIN
          INSERT INTO WSXML_SFG.SALDOPDV (
                                CODPUNTODEVENTA,
                                CODLINEADENEGOCIO,
                                CODDETALLESALDOPDV,
                                CODUSUARIOMODIFICACION)
          VALUES (
                  @p_CODPUNTODEVENTA,
                  @p_CODLINEADENEGOCIO,
                  @thisDETALLESALDOPDV,
                  @p_CODUSUARIOMODIFICACION);
          SET @thisDETALLESALDOPDV = SCOPE_IDENTITY();
		END ELSE BEGIN
		
			UPDATE WSXML_SFG.SALDOPDV SET CODDETALLESALDOPDV = @thisDETALLESALDOPDV,
                            CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION,
                            FECHAHORAMODIFICACION  = GETDATE(),
                            ACTIVE                 = 1
			WHERE ID_SALDOPDV = @thisSALDOPDV;
		  
		END

    END ELSE BEGIN
		RAISERROR('-20054 No se pudo ingresar el registro de saldo', 16, 1);
		RETURN 0;
	END;
	
	SET @p_CODDETALLESALDOPDV_OUT = @thisDETALLESALDOPDV;
END
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLESALDOPDV_GetList', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_GetList;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLESALDOPDV_GetList(@p_active NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT ID_DETALLESALDOPDV,
             CODPUNTODEVENTA,
             CODLINEADENEGOCIO,
             FECHALIMITEPAGOGTECH,
             FECHALIMITEPAGOFIDUCIA,
             NUMDIASMORAGTECH,
             NUMDIASMORAFIDUCIA,
             SALDOAFAVORGTECH,
             SALDOAFAVORFIDUCIA,
             SALDOCONTRAGTECH,
             SALDOCONTRAFIDUCIA,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.DETALLESALDOPDV
       WHERE ACTIVE = CASE WHEN @p_active = -1 THEN ACTIVE ELSE @p_active END;

  END;
GO
