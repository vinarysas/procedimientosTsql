USE SFGPRODU;
--  DDL for Package Body SFGFACTURACIONARCHIVOPLANO
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGFACTURACIONARCHIVOPLANO */ 

  IF OBJECT_ID('WSXML_SFG.SFGFACTURACIONARCHIVOPLANO_GetInfoProductos', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGFACTURACIONARCHIVOPLANO_GetInfoProductos;
GO

CREATE     PROCEDURE WSXML_SFG.SFGFACTURACIONARCHIVOPLANO_GetInfoProductos(@p_CODALIADOESTRATEGICO NUMERIC(22,0),
                             @p_FECHADESDE           DATETIME,
                             @p_FECHAHASTA           DATETIME,
                             @p_page_number          INTEGER,
                             @p_batch_size           INTEGER,
                            @p_total_size           INTEGER OUT) AS
  BEGIN
  SET NOCOUNT ON;
    IF @p_page_number = @p_page_number OR @p_batch_size = @p_batch_size BEGIN
      SELECT @p_total_size = COUNT(1)
      FROM (SELECT TXA.CODPRODUCTO, TXA.CODRANGOCOMISION
            FROM WSXML_SFG.ARCHIVOTRANSACCIONALIADO FIL, WSXML_SFG.TRANSACCIONALIADO TXA
            WHERE TXA.CODARCHIVOTRANSACCIONALIADO = FIL.ID_ARCHIVOTRANSACCIONALIADO
              AND FIL.CODALIADOESTRATEGICO        = @p_CODALIADOESTRATEGICO
              AND FIL.FECHAARCHIVO                BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_FECHADESDE)) AND CONVERT(DATETIME, CONVERT(DATE,@p_FECHAHASTA))
            GROUP BY TXA.CODPRODUCTO, TXA.CODRANGOCOMISION) s;
    END 
    -- Open plain cursor
      SELECT PRD.ID_PRODUCTO             AS ID_PRODUCTO,
             PRD.CODIGOGTECHPRODUCTO     AS CODIGOGTECHPRODUCTO,
             PRD.NOMPRODUCTO             AS NOMPRODUCTO,
             RCM.ID_RANGOCOMISION        AS ID_RANGOCOMISION,
             RCM.NOMRANGOCOMISION        AS NOMRANGOCOMISION,
             COUNT(ID_TRANSACCIONALIADO) AS CANTIDADTRANSACCIONES,
             SUM(TXA.VALORTRANSACCION)   AS VALORTRANSACCIONES,
             SUM(TXA.REVENUETRANSACCION) AS REVENUETOTAL,
             SUM(REVENUEPORCENTUAL)      AS REVENUEPORCENTUAL,
             SUM(REVENUETRANSACCIONAL)   AS REVENUETRANSACCIONAL
      FROM WSXML_SFG.ARCHIVOTRANSACCIONALIADO FIL
      INNER JOIN WSXML_SFG.TRANSACCIONALIADO TXA ON (CODARCHIVOTRANSACCIONALIADO = ID_ARCHIVOTRANSACCIONALIADO)
      INNER JOIN WSXML_SFG.PRODUCTO PRD ON (CODPRODUCTO = ID_PRODUCTO)
      INNER JOIN WSXML_SFG.RANGOCOMISION RCM ON (CODRANGOCOMISION = ID_RANGOCOMISION)
      WHERE FIL.CODALIADOESTRATEGICO = @p_CODALIADOESTRATEGICO
        AND FIL.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_FECHADESDE)) AND CONVERT(DATETIME, CONVERT(DATE,@p_FECHAHASTA))
      GROUP BY PRD.ID_PRODUCTO,
               PRD.CODIGOGTECHPRODUCTO,
               PRD.NOMPRODUCTO,
               RCM.ID_RANGOCOMISION,
               RCM.NOMRANGOCOMISION
      ORDER BY CAST(PRD.CODIGOGTECHPRODUCTO AS NUMERIC(38,0)), RCM.ID_RANGOCOMISION;
  END;
  GO
  IF OBJECT_ID('WSXML_SFG.SFGFACTURACIONARCHIVOPLANO_GetInfoRangos', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGFACTURACIONARCHIVOPLANO_GetInfoRangos;
GO

CREATE     PROCEDURE WSXML_SFG.SFGFACTURACIONARCHIVOPLANO_GetInfoRangos(@p_CODALIADOESTRATEGICO NUMERIC(22,0),
                          @p_FECHADESDE           DATETIME,
                          @p_FECHAHASTA           DATETIME,
                          @p_page_number          INTEGER,
                          @p_batch_size           INTEGER,
                         @p_total_size           INTEGER OUT) AS
  BEGIN
  SET NOCOUNT ON;
    IF @p_page_number = @p_page_number OR @p_batch_size = @p_batch_size BEGIN
      SELECT @p_total_size = COUNT(1)
      FROM (SELECT RRT.CODRANGOCOMISIONDETALLE FROM WSXML_SFG.ARCHIVOTRANSACCIONALIADO ARC
            INNER JOIN TRANSACCIONALIADO          TRS ON (TRS.CODARCHIVOTRANSACCIONALIADO = ARC.ID_ARCHIVOTRANSACCIONALIADO)
            INNER JOIN REGISTROFACTREFERENCIA     RFR ON (RFR.ID_REGISTROFACTREFERENCIA   = TRS.CODREGISTROFACTREFERENCIA)
            INNER JOIN REGISTROREVENUETRANSACCION RRT ON (RRT.CODREGISTROFACTREFERENCIA   = RFR.ID_REGISTROFACTREFERENCIA)
            WHERE ARC.CODALIADOESTRATEGICO = @p_CODALIADOESTRATEGICO
              AND ARC.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_FECHADESDE)) AND CONVERT(DATETIME, CONVERT(DATE,@p_FECHAHASTA))
            GROUP BY RRT.CODRANGOCOMISIONDETALLE) s;
    END 
    -- Open plain cursor
      SELECT ISNULL(RCT.RANGOINICIAL, 0)        AS RANGOINICIAL,
             ISNULL(RCT.RANGOFINAL, 0)          AS RANGOFINAL,
             COUNT(TRS.ID_TRANSACCIONALIADO) AS CANTIDADTRANSACCIONES,
             SUM(TRS.VALORTRANSACCION)       AS VALORTRANSACCIONES,
             SUM(TRS.REVENUETRANSACCION)     AS REVENUETRANSACCIONES
      FROM WSXML_SFG.ARCHIVOTRANSACCIONALIADO ARC
      INNER JOIN WSXML_SFG.TRANSACCIONALIADO          TRS ON (TRS.CODARCHIVOTRANSACCIONALIADO = ARC.ID_ARCHIVOTRANSACCIONALIADO)
      INNER JOIN WSXML_SFG.REGISTROFACTREFERENCIA     RFR ON (RFR.ID_REGISTROFACTREFERENCIA   = TRS.CODREGISTROFACTREFERENCIA)
      INNER JOIN WSXML_SFG.REGISTROREVENUETRANSACCION RRT ON (RRT.CODREGISTROFACTREFERENCIA   = RFR.ID_REGISTROFACTREFERENCIA)
      INNER JOIN WSXML_SFG.REGISTROREVENUE            RRV ON (RRV.ID_REGISTROREVENUE          = RRT.CODREGISTROREVENUE)
      INNER JOIN WSXML_SFG.RANGOCOMISIONDETALLE       RCT ON (RCT.ID_RANGOCOMISIONDETALLE     = RRT.CODRANGOCOMISIONDETALLE)
      WHERE ARC.CODALIADOESTRATEGICO = @p_CODALIADOESTRATEGICO
        AND ARC.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_FECHADESDE)) AND CONVERT(DATETIME, CONVERT(DATE,@p_FECHAHASTA))
      GROUP BY RCT.RANGOINICIAL, RCT.RANGOFINAL
      ORDER BY RCT.RANGOINICIAL;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGFACTURACIONARCHIVOPLANO_GetTransactionDetail', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGFACTURACIONARCHIVOPLANO_GetTransactionDetail;
GO

CREATE     PROCEDURE WSXML_SFG.SFGFACTURACIONARCHIVOPLANO_GetTransactionDetail(@p_CODALIADOESTRATEGICO NUMERIC(22,0),
                                 @p_CODPRODUCTO          NUMERIC(22,0),
                                 @p_FECHAINICIO          DATETIME,
                                 @p_FECHAFIN             DATETIME,
                                 @p_page_number          INTEGER,
                                 @p_batch_size           INTEGER,
                                @p_total_size           INTEGER OUT) AS
  BEGIN
  SET NOCOUNT ON;
    IF @p_page_number = @p_page_number OR @p_batch_size = @p_batch_size BEGIN
      set @p_total_size = 100;
    END 
      SELECT ARC.FECHAARCHIVO                    AS "Fecha Archivo",
             'xc' + ISNULL(TRS.NUMERORECIBO, '')            AS Recibo,
             'xc' + ISNULL(TRS.NUMEROSUSCRIPTOR, '')        AS Suscriptor,
             TRS.VALORTRANSACCION                AS Valor,
             TRS.REVENUETRANSACCION              AS Revenue,
             'xc' + ISNULL(PDV.CODIGOGTECHPUNTODEVENTA, '') AS POS,
             'xc' + ISNULL(CONVERT(VARCHAR,RFR.NUMEROREFERENCIA), '')        AS Referencia
      FROM WSXML_SFG.ARCHIVOTRANSACCIONALIADO ARC
      INNER JOIN WSXML_SFG.TRANSACCIONALIADO  TRS ON (TRS.CODARCHIVOTRANSACCIONALIADO = ARC.ID_ARCHIVOTRANSACCIONALIADO)
      INNER JOIN WSXML_SFG.RANGOCOMISION      RCM ON (RCM.ID_RANGOCOMISION            = TRS.CODRANGOCOMISION)
      INNER JOIN WSXML_SFG.PUNTODEVENTA       PDV ON (PDV.ID_PUNTODEVENTA             = TRS.CODPUNTODEVENTA)
      INNER JOIN WSXML_SFG.REGISTROFACTREFERENCIA RFR ON (RFR.ID_REGISTROFACTREFERENCIA = TRS.CODREGISTROFACTREFERENCIA)
      WHERE ARC.CODALIADOESTRATEGICO = @p_CODALIADOESTRATEGICO
        AND ARC.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_FECHAINICIO)) AND CONVERT(DATETIME, CONVERT(DATE,@p_FECHAFIN))
        AND TRS.CODPRODUCTO = @p_CODPRODUCTO
      ORDER BY ARC.FECHAARCHIVO, TRS.ID_TRANSACCIONALIADO;


END 

GO


