USE SFGPRODU;
--  DDL for Package Body SFGDETALLEFACTURACIONRETDIFE
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE */ 

  IF OBJECT_ID('WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_AddRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_AddRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_AddRecord(@p_CODMAESTROFACTURACIONPDV     NUMERIC(22,0),
                      @p_CODDETALLEFACTURACIONPDV     NUMERIC(22,0),
                      @p_CODRETENCIONTRIBUTARIA       NUMERIC(22,0),
                      @p_VALORRETENCION               FLOAT,
                      @p_CODUSUARIOMODIFICACION       NUMERIC(22,0),
                      @p_ID_DETALLEFACTRETENCION_out  NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    INSERT INTO WSXML_SFG.DETALLEFACTURACIONRETDIFE (
                                             CODMAESTROFACTURACIONPDV,
                                             CODDETALLEFACTURACIONPDV,
                                             CODRETENCIONTRIBUTARIA,
                                             VALORRETENCION,
                                             CODUSUARIOMODIFICACION)
    VALUES (
            @p_CODMAESTROFACTURACIONPDV,
            @p_CODDETALLEFACTURACIONPDV,
            @p_CODRETENCIONTRIBUTARIA,
            @p_VALORRETENCION,
            @p_CODUSUARIOMODIFICACION);
    SET @p_ID_DETALLEFACTRETENCION_out = SCOPE_IDENTITY();
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_CrearRetencionTributaria', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_CrearRetencionTributaria;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_CrearRetencionTributaria(@p_CODMAESTROFACTURACIONPDV     NUMERIC(22,0),
                                     @p_CODDETALLEFACTURACIONPDV     NUMERIC(22,0),
                                     @p_CODRETENCIONTRIBUTARIA       NUMERIC(22,0),
                                     @p_VALORRETENCION               FLOAT,
                                     @p_CODUSUARIOMODIFICACION       NUMERIC(22,0),
                                     @p_ID_DETALLEFACTRETENCION_out  NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    -- Identificador de retencion existente
    SELECT @p_ID_DETALLEFACTRETENCION_out = ID_DETALLEFACTURACIONRETDIFE FROM WSXML_SFG.DETALLEFACTURACIONRETDIFE
     WHERE CODMAESTROFACTURACIONPDV      = @p_CODMAESTROFACTURACIONPDV
       AND CODDETALLEFACTURACIONPDV      = @p_CODDETALLEFACTURACIONPDV
       AND CODRETENCIONTRIBUTARIA        = @p_CODRETENCIONTRIBUTARIA
       AND ACTIVE = 1;
    -- Sumar retencion
    UPDATE WSXML_SFG.DETALLEFACTURACIONRETDIFE SET VALORRETENCION = VALORRETENCION + @p_VALORRETENCION
    WHERE ID_DETALLEFACTURACIONRETDIFE = @p_ID_DETALLEFACTRETENCION_out;

  --  EXCEPTION WHEN OTHERS THEN
    -- Nueva retencion

	
      IF(@@rowcount = 0)
	   BEGIN
	          EXEC   WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_AddRecord
		                                     @p_CODMAESTROFACTURACIONPDV,
                                             @p_CODDETALLEFACTURACIONPDV,
                                             @p_CODRETENCIONTRIBUTARIA,
                                             @p_VALORRETENCION,
                                             @p_CODUSUARIOMODIFICACION,
                                             @p_ID_DETALLEFACTRETENCION_out;
       END
    
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_UpdateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_UpdateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_UpdateRecord(@pk_ID_DETALLEFACTRETENCION     NUMERIC(22,0),
                         @p_CODMAESTROFACTURACIONPDV     NUMERIC(22,0),
                         @p_CODDETALLEFACTURACIONPDV     NUMERIC(22,0),
                         @p_VALORRETENCION               FLOAT,
                         @p_CODUSUARIOMODIFICACION       NUMERIC(22,0),
                         @p_ACTIVE                       NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.DETALLEFACTURACIONRETDIFE
       SET CODMAESTROFACTURACIONPDV      = @p_CODMAESTROFACTURACIONPDV,
           CODDETALLEFACTURACIONPDV      = @p_CODDETALLEFACTURACIONPDV,
           VALORRETENCION                = @p_VALORRETENCION,
           CODUSUARIOMODIFICACION        = @p_CODUSUARIOMODIFICACION,
           ACTIVE                        = @p_ACTIVE
     WHERE ID_DETALLEFACTURACIONRETDIFE = @pk_ID_DETALLEFACTRETENCION;

    IF @@rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @@rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_GetRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_GetRecord;
GO
CREATE     PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_GetRecord(@pk_ID_DETALLEFACTRETENCION NUMERIC(22,0)) AS
 BEGIN
    DECLARE @l_count INTEGER;
   
  SET NOCOUNT ON;
    SELECT @l_count = COUNT(*) FROM WSXML_SFG.DETALLEFACTURACIONRETDIFE
     WHERE ID_DETALLEFACTURACIONRETDIFE = @pk_ID_DETALLEFACTRETENCION;

    IF @l_count = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @l_count > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 

      SELECT ID_DETALLEFACTURACIONRETDIFE,
             CODMAESTROFACTURACIONPDV,
             CODDETALLEFACTURACIONPDV,
             VALORRETENCION,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.DETALLEFACTURACIONRETDIFE
       WHERE ID_DETALLEFACTURACIONRETDIFE = @pk_ID_DETALLEFACTRETENCION;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_GetList', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_GetList;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONRETDIFE_GetList(@p_active NUMERIC(22,0)
                                                                        ) AS
  BEGIN
  SET NOCOUNT ON;
    
      SELECT ID_DETALLEFACTURACIONRETDIFE,
             CODMAESTROFACTURACIONPDV,
             CODDETALLEFACTURACIONPDV,
             VALORRETENCION,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.DETALLEFACTURACIONRETDIFE
       WHERE ACTIVE = CASE WHEN @p_active = -1 THEN ACTIVE ELSE @p_active END;
	   
  END;
GO






