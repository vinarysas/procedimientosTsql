USE SFGPRODU;


--  DDL for Package Body SFGMEDIOPAGONOREF
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGMEDIOPAGONOREF */ 

  IF OBJECT_ID('WSXML_SFG.SFGMEDIOPAGONOREF_AplicarPago', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGMEDIOPAGONOREF_AplicarPago;
GO

CREATE     PROCEDURE WSXML_SFG.SFGMEDIOPAGONOREF_AplicarPago(@pk_ID_MEDIOPAGONOREF NUMERIC(22,0), @P_CODUSUARIOMODIFICACION NUMERIC(22,0)) as
GO


  -- Desde movimiento no se tiene informacion acerca del punto de venta, linea, o distribucion
  IF OBJECT_ID('WSXML_SFG.SFGMEDIOPAGONOREF_AddRecordFromMovement', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGMEDIOPAGONOREF_AddRecordFromMovement;
GO

CREATE     PROCEDURE WSXML_SFG.SFGMEDIOPAGONOREF_AddRecordFromMovement(@p_CODDETALLEPAGO          NUMERIC(22,0),
                                  @p_NUMEROREFERENCIA        NVARCHAR(2000),
                                  @p_CODUSUARIOMODIFICACION  NUMERIC(22,0),
                                  @p_ID_MEDIOPAGONOREF_out   NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
  DECLARE @p_HUERFANOREFERENCIA TINYINT ,@p_PAGOGLOBAL         TINYINT ,@p_REPORTADOASISTENCI TINYINT ,@p_PARTIDENTIFIMANUAL TINYINT ,@p_PARTSINREFAUTOMATC TINYINT ,@p_HUERFANOVALORNOCOR TINYINT ;
  EXEC WSXML_SFG.SFGTIPONOREFERENCIADO_CONSTANT @p_HUERFANOREFERENCIA  OUTPUT,@p_PAGOGLOBAL          OUTPUT,@p_REPORTADOASISTENCI  OUTPUT,@p_PARTIDENTIFIMANUAL  OUTPUT, @p_PARTSINREFAUTOMATC  OUTPUT,@p_HUERFANOVALORNOCOR  OUTPUT;
  
    INSERT INTO WSXML_SFG.MEDIOPAGONOREF (
                                CODDETALLEPAGO,
                                CODTIPONOREFERENCIADO,
                                NUMEROREFERENCIA,
                                CODUSUARIOMODIFICACION)
    VALUES (
            @p_CODDETALLEPAGO,
            @p_PARTIDENTIFIMANUAL,
            @p_NUMEROREFERENCIA,
            @p_CODUSUARIOMODIFICACION);
    SET @p_ID_MEDIOPAGONOREF_out = SCOPE_IDENTITY();
  END;
GO

  -- Desde Pago Global se tiene distribuciones de linea y de agrupamiento
  -- Desde Pago Global se tiene distribuciones de linea y de agrupamiento
  IF OBJECT_ID('WSXML_SFG.SFGMEDIOPAGONOREF_AddRecordFromGlobalPay', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGMEDIOPAGONOREF_AddRecordFromGlobalPay;
GO


CREATE PROCEDURE WSXML_SFG.SFGMEDIOPAGONOREF_AddRecordFromGlobalPay(@p_CODDETALLEPAGO          NUMERIC(22,0),
                                   @p_CODTIPOVINCULACIONPAGO  NUMERIC(22,0),
                                   @p_DISTRIBUCION            WSXML_SFG.BALANCEPAYMENT READONLY,
                                   @p_CRITERIOSUTILIZADOS     WSXML_SFG.IDVALUENUMERIC READONLY,
                                   @p_COMENTARIO              NVARCHAR(2000),
                                   @p_FECHAIDENTIFICADO       DATETIME,
                                   @p_CODUSUARIOMODIFICACION  NUMERIC(22,0),
                                   @p_ID_MEDIOPAGONOREF_out   NUMERIC(22,0) OUT) AS
 BEGIN
    SET NOCOUNT ON;

    DECLARE @coutMEDIOPAGONOREF NUMERIC(22,0);
	DECLARE @cCodCriterioDistribucion NUMERIC(38,0)
    
	DECLARE  @p_HUERFANOREFERENCIA TINYINT,
	  @p_PAGOGLOBAL         TINYINT,
	  @p_REPORTADOASISTENCI TINYINT,
	  @p_PARTIDENTIFIMANUAL TINYINT,
	  @p_PARTSINREFAUTOMATC TINYINT,
	  @p_HUERFANOVALORNOCOR TINYINT

	EXEC WSXML_SFG.SFGTIPONOREFERENCIADO_CONSTANT 
	  @p_HUERFANOREFERENCIA OUTPUT,
	  @p_PAGOGLOBAL         OUTPUT,
	  @p_REPORTADOASISTENCI OUTPUT,
	  @p_PARTIDENTIFIMANUAL OUTPUT,
	  @p_PARTSINREFAUTOMATC OUTPUT,
	  @p_HUERFANOVALORNOCOR OUTPUT

	DECLARE  @ASIGNADOGRNT 	TINYINT, @SUGERIDOXSFG TINYINT, @SUGERIDOXPDV TINYINT
	EXEC WSXML_SFG.SFGTIPODISTRIBUCION_CONSTANT @ASIGNADOGRNT OUTPUT, @SUGERIDOXSFG OUTPUT, @SUGERIDOXPDV  OUTPUT


    BEGIN
      SELECT @coutMEDIOPAGONOREF = ID_MEDIOPAGONOREF FROM WSXML_SFG.MEDIOPAGONOREF WHERE CODDETALLEPAGO = @p_CODDETALLEPAGO;
      

	  IF @@ROWCOUNT = 0 BEGIN
			INSERT INTO WSXML_SFG.MEDIOPAGONOREF (
									  CODDETALLEPAGO,
									  CODTIPONOREFERENCIADO,
									  CODTIPOVINCULACIONPAGO,
									  CODTIPODISTRIBUCION,
									  COMENTARIOPAGO,
									  FECHAIDENTIFICADO,
									  CODUSUARIOMODIFICACION)
		  VALUES (
				  @p_CODDETALLEPAGO,
				  @p_PAGOGLOBAL,
				  @p_CODTIPOVINCULACIONPAGO,
				  @ASIGNADOGRNT,
				  @p_COMENTARIO,
				  @p_FECHAIDENTIFICADO,
				  @p_CODUSUARIOMODIFICACION);
		  SET @coutMEDIOPAGONOREF = SCOPE_IDENTITY();
	  END ELSE BEGIN
		UPDATE WSXML_SFG.MEDIOPAGONOREF SET CODTIPONOREFERENCIADO  = @p_PAGOGLOBAL,
                                CODTIPOVINCULACIONPAGO = @p_CODTIPOVINCULACIONPAGO,
                                CODTIPODISTRIBUCION    = @ASIGNADOGRNT,
                                COMENTARIOPAGO         = @p_COMENTARIO,
                                FECHAIDENTIFICADO      = @p_FECHAIDENTIFICADO,
                                CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION
		WHERE ID_MEDIOPAGONOREF = @coutMEDIOPAGONOREF;
	  END
      
    END;

      -- Ingresar registro de distribucion
      BEGIN
        IF (SELECT COUNT(*) FROM @p_DISTRIBUCION) > 0 BEGIN
          DECLARE ix CURSOR FOR SELECT CODLINEADENEGOCIO,FIDUCIA,SALDOACTUAL,VALORPAGO,NUEVOSALDO FROM @p_DISTRIBUCION--.First..p_DISTRIBUCION.Last LOOP
		  OPEN ix
		  DECLARE @ix__CODLINEADENEGOCIO NUMERIC(38,0), @ix__FIDUCIA NUMERIC(38,0), @ix__SALDOACTUAL FLOAT, @ix__VALORPAGO FLOAT, @ix__NUEVOSALDO FLOAT

		  FETCH NEXT FROM ix INTO @ix__CODLINEADENEGOCIO, @ix__FIDUCIA, @ix__SALDOACTUAL, @ix__VALORPAGO, @ix__NUEVOSALDO;
		  WHILE @@FETCH_STATUS=0 
		  BEGIN
              DECLARE @existingNOREFSUGERENCIA NUMERIC(22,0);
            BEGIN
              SELECT @existingNOREFSUGERENCIA = ID_NOREFERENCIADOSUGERENCIA FROM WSXML_SFG.NOREFERENCIADOSUGERENCIA
              WHERE CODMEDIOPAGONOREF = @coutMEDIOPAGONOREF
                AND CODLINEADENEGOCIO = @ix__CODLINEADENEGOCIO
                AND FIDUCIA           = @ix__FIDUCIA;

			  SELECT @cCodCriterioDistribucion = VALUE FROM @p_CRITERIOSUTILIZADOS WHERE ID = @ix__CODLINEADENEGOCIO

              
				
				IF @@ROWCOUNT = 0 BEGIN
			
					INSERT INTO WSXML_SFG.NOREFERENCIADOSUGERENCIA (
														CODMEDIOPAGONOREF,
														CODLINEADENEGOCIO,
														FIDUCIA,
														VALORDISTRIBUCION,
														CODCRITERIODISTRIBUCION,
														CODUSUARIOMODIFICACION)
					VALUES (
						  @coutMEDIOPAGONOREF,
						  @ix__CODLINEADENEGOCIO,
						  @ix__FIDUCIA,
						  @ix__VALORPAGO,
						  @cCodCriterioDistribucion, --p_CRITERIOSUTILIZADOS(ix),
						  @p_CODUSUARIOMODIFICACION);
				END ELSE BEGIN
					UPDATE WSXML_SFG.NOREFERENCIADOSUGERENCIA SET VALORDISTRIBUCION       = @ix__VALORPAGO,
                                                  CODCRITERIODISTRIBUCION = @cCodCriterioDistribucion,-- @p_CRITERIOSUTILIZADOS(ix),
                                                  CODUSUARIOMODIFICACION  = @p_CODUSUARIOMODIFICACION
					WHERE ID_NOREFERENCIADOSUGERENCIA = @existingNOREFSUGERENCIA;
				
				END

            END;
			FETCH NEXT FROM ix INTO @ix__CODLINEADENEGOCIO, @ix__FIDUCIA, @ix__SALDOACTUAL, @ix__VALORPAGO, @ix__NUEVOSALDO;
          END;
          CLOSE ix;
          DEALLOCATE ix;
        END 
        SET @p_ID_MEDIOPAGONOREF_out = @coutMEDIOPAGONOREF;
      END;
  END;
  GO



  IF OBJECT_ID('WSXML_SFG.SFGMEDIOPAGONOREF_AddRecordFromLineaAsist', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGMEDIOPAGONOREF_AddRecordFromLineaAsist;
GO


CREATE PROCEDURE WSXML_SFG.SFGMEDIOPAGONOREF_AddRecordFromLineaAsist(@p_CODDETALLEPAGO          NUMERIC(22,0),
                                    @p_CODTIPOVINCULACIONPAGO  NUMERIC(22,0),
                                    @p_DISTRIBUCION            WSXML_SFG.BALANCEPAYMENT READONLY,
                                    @p_CODUSUARIOMODIFICACION  NUMERIC(22,0),
                                    @p_ID_MEDIOPAGONOREF_out   NUMERIC(22,0) OUT) AS
 BEGIN
    DECLARE @coutMEDIOPAGONOREF NUMERIC(22,0);
   
  SET NOCOUNT ON;

  DECLARE 
	  @p_HUERFANOREFERENCIA TINYINT,
	  @p_PAGOGLOBAL         TINYINT,
	  @p_REPORTADOASISTENCI TINYINT,
	  @p_PARTIDENTIFIMANUAL TINYINT,
	  @p_PARTSINREFAUTOMATC TINYINT,
	  @p_HUERFANOVALORNOCOR TINYINT

  EXEC WSXML_SFG.SFGTIPONOREFERENCIADO_CONSTANT 
	  @p_HUERFANOREFERENCIA OUTPUT,
	  @p_PAGOGLOBAL         OUTPUT,
	  @p_REPORTADOASISTENCI OUTPUT,
	  @p_PARTIDENTIFIMANUAL OUTPUT,
	  @p_PARTSINREFAUTOMATC OUTPUT,
	  @p_HUERFANOVALORNOCOR OUTPUT

  DECLARE  @ASIGNADOGRNT TINYINT, @SUGERIDOXSFG TINYINT, @SUGERIDOXPDV TINYINT
  EXEC WSXML_SFG.SFGTIPODISTRIBUCION_CONSTANT  @ASIGNADOGRNT OUTPUT, @SUGERIDOXSFG  OUTPUT, @SUGERIDOXPDV OUTPUT

    INSERT INTO WSXML_SFG.MEDIOPAGONOREF (
                                CODDETALLEPAGO,
                                CODTIPONOREFERENCIADO,
                                CODTIPOVINCULACIONPAGO,
                                CODTIPODISTRIBUCION,
                                CODUSUARIOMODIFICACION)
    VALUES (
            @p_CODDETALLEPAGO,
            @p_REPORTADOASISTENCI,
            @p_CODTIPOVINCULACIONPAGO,
            @SUGERIDOXPDV,
            @p_CODUSUARIOMODIFICACION);

    SET @coutMEDIOPAGONOREF = SCOPE_IDENTITY();

    IF (SELECT COUNT(*) FROM @p_DISTRIBUCION) > 0 BEGIN
      DECLARE ix CURSOR FOR SELECT CODLINEADENEGOCIO,FIDUCIA,SALDOACTUAL,VALORPAGO,NUEVOSALDO FROM @p_DISTRIBUCION--.First..p_DISTRIBUCION.Last LOOP
	  OPEN ix

	  DECLARE @ix__CODLINEADENEGOCIO NUMERIC(38,0), @ix__FIDUCIA NUMERIC(38,0), @ix__SALDOACTUAL FLOAT, @ix__VALORPAGO FLOAT, @ix__NUEVOSALDO FLOAT

	  FETCH NEXT FROM ix INTO @ix__CODLINEADENEGOCIO, @ix__FIDUCIA, @ix__SALDOACTUAL, @ix__VALORPAGO, @ix__NUEVOSALDO; 

	  WHILE @@FETCH_STATUS=0 BEGIN 
        INSERT INTO WSXML_SFG.NOREFERENCIADOSUGERENCIA (
                                              CODMEDIOPAGONOREF,
                                              CODLINEADENEGOCIO,
                                              FIDUCIA,
                                              VALORDISTRIBUCION,
                                              CODUSUARIOMODIFICACION)
        VALUES (
                @coutMEDIOPAGONOREF,
                @ix__CODLINEADENEGOCIO,
                @ix__FIDUCIA,
                @ix__VALORPAGO,
                @p_CODUSUARIOMODIFICACION);
		FETCH NEXT FROM ix INTO @ix__CODLINEADENEGOCIO, @ix__FIDUCIA, @ix__SALDOACTUAL, @ix__VALORPAGO, @ix__NUEVOSALDO; 
      END;
      CLOSE ix;
      DEALLOCATE ix;
    END 
    SET @p_ID_MEDIOPAGONOREF_out = @coutMEDIOPAGONOREF;
END;

GO

