USE SFGPRODU;
--  DDL for Package Body SFGINF_FACTURAS
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGINF_FACTURAS */ 

  IF OBJECT_ID('WSXML_SFG.SFGINF_FACTURAS_GetInfoServiciosComerciales', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_FACTURAS_GetInfoServiciosComerciales;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_FACTURAS_GetInfoServiciosComerciales(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                                        @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                                        @pg_CADENA                NVARCHAR(2000),
                                        @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                                       @pg_PRODUCTO              NVARCHAR(2000)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT CFP.SECUENCIA                     AS SECUENCIA,
             CFP.FECHAEJECUCION                AS FECHAEJECUCION,
             ISNULL(RSC.IDENTIFICACION, '') + '-' + ISNULL(RSC.DIGITOVERIFICACION, '') AS NIT,
             RSC.NOMRAZONSOCIAL                AS NOMRAZONSOCIAL,
             PRF.CODIGOAGRUPACIONGTECH         AS CODIGOAGRUPACIONGTECH,
             PRF.CODIGOGTECHPUNTODEVENTA       AS CODIGOGTECHPUNTODEVENTA,
             SUM(PRF.VALORCOMISION)            AS VALORCOMISION,
             SUM(PRF.VATCOMISION)              AS VATCOMISION,
             SUM(PRF.VALORCOMISIONBRUTA)       AS VALORCOMISIONBRUTA,
             SUM(PRF.RETENCION_RENTA)          AS RETENCION_RENTA,
             SUM(PRF.RETENCION_RETEICA)        AS RETENCION_RETEICA,
             SUM(PRF.RETENCION_RETEIVA)        AS RETENCION_RETEIVA,
             SUM(PRF.VALORCOMISIONNETA)        AS VALORCOMISIONNETA
      FROM WSXML_SFG.VW_SHOW_PDVFACTURACION PRF
      INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = PRF.ID_CICLOFACTURACIONPDV)
      INNER JOIN WSXML_SFG.PUNTODEVENTA PDV ON (PDV.ID_PUNTODEVENTA = PRF.ID_PUNTODEVENTA)
      INNER JOIN WSXML_SFG.RAZONSOCIAL  RSC ON (RSC.ID_RAZONSOCIAL  = PDV.CODRAZONSOCIAL)
      WHERE CFP.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
        AND PRF.CODSERVICIO = 1
        AND PRF.CODTIPOCONTRATOPDV IN (1, 2)
      GROUP BY CFP.SECUENCIA, CFP.FECHAEJECUCION, RSC.IDENTIFICACION, RSC.DIGITOVERIFICACION, RSC.NOMRAZONSOCIAL, PRF.CODIGOAGRUPACIONGTECH, PRF.CODIGOGTECHPUNTODEVENTA
      ORDER BY CFP.SECUENCIA, RSC.IDENTIFICACION, PRF.CODIGOAGRUPACIONGTECH, PRF.CODIGOGTECHPUNTODEVENTA;
  END;
  GO
  IF OBJECT_ID('WSXML_SFG.SFGINF_FACTURAS_GetInfoJuegos', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_FACTURAS_GetInfoJuegos;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_FACTURAS_GetInfoJuegos(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                          @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                          @pg_CADENA                NVARCHAR(2000),
                          @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                         @pg_PRODUCTO              NVARCHAR(2000)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT CFP.SECUENCIA                     AS SECUENCIA,
             CFP.FECHAEJECUCION                AS FECHAEJECUCION,
             ISNULL(RSC.IDENTIFICACION, '') + '-' + ISNULL(RSC.DIGITOVERIFICACION, '') AS NIT,
             RSC.NOMRAZONSOCIAL                AS NOMRAZONSOCIAL,
             PRF.CODIGOAGRUPACIONGTECH         AS CODIGOAGRUPACIONGTECH,
             PRF.CODIGOGTECHPUNTODEVENTA       AS CODIGOGTECHPUNTODEVENTA,
             round(SUM(PRF.VALORCOMISION),19)            AS VALORCOMISION,
             round(SUM(PRF.VATCOMISION),19)              AS VATCOMISION,
             round(SUM(PRF.VALORCOMISIONBRUTA),19)       AS VALORCOMISIONBRUTA,
             round(SUM(PRF.RETENCION_RENTA),19)          AS RETENCION_RENTA,
             round(SUM(PRF.RETENCION_RETEICA),19)        AS RETENCION_RETEICA,
             round(SUM(PRF.RETENCION_RETEIVA),19)        AS RETENCION_RETEIVA,
             round(SUM(PRF.VALORCOMISIONNETA),19)        AS VALORCOMISIONNETA
      FROM WSXML_SFG.VW_SHOW_PDVFACTURACION PRF
      INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = PRF.ID_CICLOFACTURACIONPDV)
      INNER JOIN WSXML_SFG.PUNTODEVENTA PDV ON (PDV.ID_PUNTODEVENTA = PRF.ID_PUNTODEVENTA)
      INNER JOIN WSXML_SFG.RAZONSOCIAL  RSC ON (RSC.ID_RAZONSOCIAL  = PDV.CODRAZONSOCIAL)
      WHERE CFP.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
        AND PRF.CODSERVICIO = 2
        AND PRF.CODTIPOCONTRATOPDV IN (1, 2)
      GROUP BY CFP.SECUENCIA, CFP.FECHAEJECUCION, RSC.IDENTIFICACION, RSC.DIGITOVERIFICACION, RSC.NOMRAZONSOCIAL, PRF.CODIGOAGRUPACIONGTECH, PRF.CODIGOGTECHPUNTODEVENTA
      ORDER BY CFP.SECUENCIA, RSC.IDENTIFICACION, PRF.CODIGOAGRUPACIONGTECH, PRF.CODIGOGTECHPUNTODEVENTA;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGINF_FACTURAS_GetInfoContracts', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_FACTURAS_GetInfoContracts;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_FACTURAS_GetInfoContracts(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                             @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                             @pg_CADENA                NVARCHAR(2000),
                             @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                            @pg_PRODUCTO              NVARCHAR(2000)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT CODIGOAGRUPACIONGTECH,
             CODIGOGTECHPUNTODEVENTA,
             NUMEROTERMINAL,
             ISNULL(NOMPUNTODEVENTA, '.') AS NOMPUNTODEVENTA,
             ISNULL(NOMRAZONSOCIAL, '.')  AS NOMRAZONSOCIAL,
             ISNULL(ISNULL(RSC.IDENTIFICACION, '') + '-' + ISNULL(RSC.DIGITOVERIFICACION, ''), '.') AS NIT,
             ISNULL(TCSC.NOMTIPOCONTRATOPDV, 'ADMINISTRACION') AS NOMTIPOCONTRATOPDVSC,
             ISNULL(TCGM.NOMTIPOCONTRATOPDV, 'ADMINISTRACION') AS NOMTIPOCONTRATOPDVGM,
             ISNULL(RCT.FECHACONTRATO, GETDATE()) AS FECHACONTRATO
      FROM WSXML_SFG.PUNTODEVENTA PDV
      INNER JOIN WSXML_SFG.AGRUPACIONPUNTODEVENTA AGR ON (AGR.ID_AGRUPACIONPUNTODEVENTA = PDV.CODAGRUPACIONPUNTODEVENTA)
      INNER JOIN WSXML_SFG.RAZONSOCIAL RSC ON (RSC.ID_RAZONSOCIAL = PDV.CODRAZONSOCIAL)
      LEFT OUTER JOIN (SELECT CODRAZONSOCIAL, MAX(CASE WHEN CODSERVICIO = 1 THEN CODTIPOCONTRATOPDV ELSE 0 END) AS CONTRATOSC,
                                              MAX(CASE WHEN CODSERVICIO = 2 THEN CODTIPOCONTRATOPDV ELSE 0 END) AS CONTRATOGM,
                                              MAX(FECHACONTRATO) AS FECHACONTRATO
                       FROM WSXML_SFG.RAZONSOCIALCONTRATO
                       GROUP BY CODRAZONSOCIAL) RCT ON (RCT.CODRAZONSOCIAL = RSC.ID_RAZONSOCIAL)
      LEFT OUTER JOIN WSXML_SFG.TIPOCONTRATOPDV TCSC ON (TCSC.ID_TIPOCONTRATOPDV = ISNULL(RCT.CONTRATOSC, 1))
      LEFT OUTER JOIN WSXML_SFG.TIPOCONTRATOPDV TCGM ON (TCGM.ID_TIPOCONTRATOPDV = ISNULL(RCT.CONTRATOGM, 1))
      WHERE PDV.ACTIVE = 1
      ORDER BY CAST(CODIGOGTECHPUNTODEVENTA AS NUMERIC(38,0));
  END;

GO

