USE SFGPRODU;
--  DDL for Package Body SFGSUSPENSIONPDV
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGSUSPENSIONPDV */ 

  --------------------------------------------------------------------
  -- Ingresar un registro en la tabla SUSPENSIONPDV ------------------
  --------------------------------------------------------------------
  IF OBJECT_ID('WSXML_SFG.SFGSUSPENSIONPDV_AddRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_AddRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_AddRecord(@p_CODPUNTODEVENTA        NUMERIC(22,0),
                      @p_CODUSUARIOMODIFICACION NUMERIC(22,0),
                      @p_ID_SUSPENSIONPDV_out   NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    INSERT INTO WSXML_SFG.SUSPENSIONPDV (
                               CODPUNTODEVENTA,
                               CODUSUARIOMODIFICACION)
    VALUES (
            @p_CODPUNTODEVENTA,
            @p_CODUSUARIOMODIFICACION);
    SET @p_ID_SUSPENSIONPDV_out = SCOPE_IDENTITY();
  END;
GO

  --------------------------------------------------------------------
  -- Actualizar un registro de la tabla SUSPENSIONPDV ----------------
  --------------------------------------------------------------------
  IF OBJECT_ID('WSXML_SFG.SFGSUSPENSIONPDV_UpdateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_UpdateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_UpdateRecord(@pk_ID_SUSPENSIONPDV      NUMERIC(22,0),
                         @p_CODPUNTODEVENTA        NUMERIC(22,0),
                         @p_CODUSUARIOMODIFICACION NUMERIC(22,0),
                         @p_ACTIVE                 NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.SUSPENSIONPDV
       SET CODPUNTODEVENTA        = @p_CODPUNTODEVENTA,
           CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION,
           FECHAHORAMODIFICACION  = GETDATE(),
           ACTIVE                 = @p_ACTIVE
     WHERE ID_SUSPENSIONPDV = @pk_ID_SUSPENSIONPDV;

    IF @@rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @@rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
  END;
GO

  --------------------------------------------------------------------
  -- Desactivar un registro de la tabla SUSPENSIONPDV ----------------
  --------------------------------------------------------------------
  IF OBJECT_ID('WSXML_SFG.SFGSUSPENSIONPDV_DeactivateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_DeactivateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_DeactivateRecord(@pk_ID_SUSPENSIONPDV      NUMERIC(22,0),
                             @p_CODUSUARIOMODIFICACION NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.SUSPENSIONPDV
       SET CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION,
           FECHAHORAMODIFICACION  = GETDATE(),
           ACTIVE                 = 0
     WHERE ID_SUSPENSIONPDV       = @pk_ID_SUSPENSIONPDV;

    IF @@rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @@rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGSUSPENSIONPDV_OmitSuspension', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_OmitSuspension;
GO

CREATE     PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_OmitSuspension(@pk_ID_SUSPENSIONPDV      NUMERIC(22,0),
                           @p_DESCRIPCION            NVARCHAR(2000),
                           @p_CODUSUARIOMODIFICACION NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    INSERT INTO WSXML_SFG.SUSPENSIONPDVOMISION (
                                      CODSUSPENSIONPDV,
                                      DESCRIPCION,
                                      CODUSUARIOMODIFICACION)
    VALUES (
            @pk_ID_SUSPENSIONPDV,
            @p_DESCRIPCION,
            @p_CODUSUARIOMODIFICACION);
  END;
GO

  --------------------------------------------------------------------
  -- Obtener un registro de la tabla SUSPENSIONPDV -------------------
  --------------------------------------------------------------------
  IF OBJECT_ID('WSXML_SFG.SFGSUSPENSIONPDV_GetRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_GetRecord;
GO
CREATE     PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_GetRecord(@pk_ID_SUSPENSIONPDV NUMERIC(22,0)) AS
 BEGIN
    DECLARE @l_count INTEGER;
   
  SET NOCOUNT ON;
    SELECT @l_count = COUNT(*) FROM WSXML_SFG.SUSPENSIONPDV
     WHERE ID_SUSPENSIONPDV = @pk_ID_SUSPENSIONPDV;

    IF @l_count = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @l_count > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 

      SELECT S.ID_SUSPENSIONPDV,
             S.CODPUNTODEVENTA,
             P.NOMPUNTODEVENTA,
             O.DESCRIPCION,
             D.NUMDIASMORAGTECH,
             D.NUMDIASMORAFIDUCIA,
             D.SALDOCONTRAGTECH,
             D.SALDOCONTRAFIDUCIA,
             S.FECHAHORAMODIFICACION,
             S.CODUSUARIOMODIFICACION,
             S.ACTIVE
      FROM WSXML_SFG.SUSPENSIONPDV S
      LEFT OUTER JOIN PUNTODEVENTA P
        ON (S.CODPUNTODEVENTA = P.ID_PUNTODEVENTA)
      LEFT OUTER JOIN SUSPENSIONPDVOMISION O
        ON (O.CODSUSPENSIONPDV = S.ID_SUSPENSIONPDV)
      LEFT OUTER JOIN DETALLESALDOSUSPENSIONPDV DS
        ON (DS.CODSUSPENSIONPDV = S.ID_SUSPENSIONPDV)
      LEFT OUTER JOIN DETALLESALDOPDV D
        ON (DS.CODDETALLESALDOPDV = D.ID_DETALLESALDOPDV)
      WHERE ID_SUSPENSIONPDV = @pk_ID_SUSPENSIONPDV;
  END;
GO

  --------------------------------------------------------------------
  -- Obtener lista de registros --------------------------------------
  --------------------------------------------------------------------
  IF OBJECT_ID('WSXML_SFG.SFGSUSPENSIONPDV_GetList', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_GetList;
GO
CREATE     PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_GetList(@p_active NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT S.ID_SUSPENSIONPDV,
             S.CODPUNTODEVENTA,
             P.NOMPUNTODEVENTA,
             O.DESCRIPCION,
             D.NUMDIASMORAGTECH,
             D.NUMDIASMORAFIDUCIA,
             D.SALDOCONTRAGTECH,
             D.SALDOCONTRAFIDUCIA,
             S.FECHAHORAMODIFICACION,
             S.CODUSUARIOMODIFICACION,
             S.ACTIVE
      FROM WSXML_SFG.SUSPENSIONPDV S
      LEFT OUTER JOIN PUNTODEVENTA P
        ON (S.CODPUNTODEVENTA = P.ID_PUNTODEVENTA)
      LEFT OUTER JOIN SUSPENSIONPDVOMISION O
        ON (O.CODSUSPENSIONPDV = S.ID_SUSPENSIONPDV)
      LEFT OUTER JOIN DETALLESALDOSUSPENSIONPDV DS
        ON (DS.CODSUSPENSIONPDV = S.ID_SUSPENSIONPDV)
      LEFT OUTER JOIN DETALLESALDOPDV D
        ON (DS.CODDETALLESALDOPDV = D.ID_DETALLESALDOPDV)
      WHERE S.ACTIVE = CASE WHEN @p_active = -1 THEN S.ACTIVE ELSE @p_active END;

  END
GO

  IF OBJECT_ID('WSXML_SFG.SFGSUSPENSIONPDV_GetListToSuspend', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_GetListToSuspend;
GO
CREATE     PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_GetListToSuspend AS
  BEGIN
  SET NOCOUNT ON;
      SELECT S.ID_SUSPENSIONPDV,
             S.CODPUNTODEVENTA,
             P.NOMPUNTODEVENTA,
             P.CODIGOGTECHPUNTODEVENTA,
             D.NUMDIASMORAGTECH,
             D.NUMDIASMORAFIDUCIA,
             D.SALDOCONTRAGTECH,
             D.SALDOCONTRAFIDUCIA,
             S.FECHAHORAMODIFICACION,
             S.CODUSUARIOMODIFICACION,
             S.ACTIVE
      FROM WSXML_SFG.SUSPENSIONPDV S
      LEFT OUTER JOIN WSXML_SFG.PUNTODEVENTA P
        ON (S.CODPUNTODEVENTA = P.ID_PUNTODEVENTA)
      LEFT OUTER JOIN WSXML_SFG.DETALLESALDOSUSPENSIONPDV DS
        ON (DS.CODSUSPENSIONPDV = S.ID_SUSPENSIONPDV)
      LEFT OUTER JOIN WSXML_SFG.DETALLESALDOPDV D
        ON (DS.CODDETALLESALDOPDV = D.ID_DETALLESALDOPDV)
      WHERE S.ACTIVE = 1
        AND S.ID_SUSPENSIONPDV NOT IN (SELECT CODSUSPENSIONPDV FROM WSXML_SFG.SUSPENSIONPDVOMISION);
  END;
GO


 IF OBJECT_ID('WSXML_SFG.SFGSUSPENSIONPDV_GenerarSuspensiones', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_GenerarSuspensiones;
GO

CREATE     PROCEDURE WSXML_SFG.SFGSUSPENSIONPDV_GenerarSuspensiones(@p_DETALLETAREAEJECUTADA NUMERIC(22,0), @p_RETVALUE_out NUMERIC(22,0) OUT) AS
 BEGIN
    DECLARE cPUNTOSDEVENTA CURSOR LOCAL FOR
      SELECT S.CODPUNTODEVENTA, S.CODLINEADENEGOCIO,
             S.CODDETALLESALDOPDV,
             D.FECHALIMITEPAGOGTECH, D.FECHALIMITEPAGOFIDUCIA,
             D.SALDOAFAVORGTECH, D.SALDOAFAVORFIDUCIA,
             D.SALDOCONTRAGTECH, D.SALDOCONTRAFIDUCIA
             , SPV.ID_SUSPENSIONPDV
      FROM WSXML_SFG.SALDOPDV S
      INNER JOIN WSXML_SFG.DETALLESALDOPDV D
        ON (D.ID_DETALLESALDOPDV = S.CODDETALLESALDOPDV)
      INNER JOIN WSXML_SFG.PUNTODEVENTA P
        ON (P.ID_PUNTODEVENTA = S.CODPUNTODEVENTA)
      LEFT JOIN WSXML_SFG.SUSPENSIONPDV SPV ON P.ID_PUNTODEVENTA=SPV.CODPUNTODEVENTA
      WHERE (S.ACTIVE = 1 OR S.ACTIVE IS NULL);


    DECLARE @c_TOTAL NUMERIC(38,0) = 0;
    DECLARE @c_COUNT NUMERIC(38,0) = 0;
    DECLARE @c_WAIT NUMERIC(38,0) = 10;
    DECLARE @c_CODUSUARIOMODIFICACION NUMERIC(38,0) = 1;
    DECLARE @c_FECHA datetime = getdate();
   
  SET NOCOUNT ON;

  SELECT @c_TOTAL = COUNT(1)
      FROM WSXML_SFG.SALDOPDV S;


    EXEC WSXML_SFG.SFGDETALLETAREAEJECUTADA_SetTotalRecords @p_DETALLETAREAEJECUTADA, @c_TOTAL
END
GO

