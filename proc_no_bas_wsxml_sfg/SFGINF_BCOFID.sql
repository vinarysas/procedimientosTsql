USE SFGPRODU;
--  DDL for Package Body SFGINF_BCOFID
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGINF_BCOFID */ 

  /* Obtiene valores de control para el archivo */
  IF OBJECT_ID('WSXML_SFG.SFGINF_BCOFID_GetHeaderData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_BCOFID_GetHeaderData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_BCOFID_GetHeaderData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                          @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                          @pg_CADENA                NVARCHAR(2000),
                          @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                         @pg_PRODUCTO              NVARCHAR(2000)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT COUNT(1)          AS REGISTROS,
             SUM(SALDOFIDUCIA) AS TOTALSALDOFIDUCIA
      FROM (SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(VLD.NUEVOSALDOENCONTRAFIDUCIA -
                       VLD.NUEVOSALDOAFAVORFIDUCIA)   AS SALDOFIDUCIA,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_IndependentReferenceNumber(VLD.NUMEROTERMINAL, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND @p_CODLINEADENEGOCIO        = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
            GROUP BY CFP.FECHAEJECUCION, VLD.NUMEROTERMINAL
            
            UNION
      
            SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(VLD.NUEVOSALDOENCONTRAFIDUCIA -
                       VLD.NUEVOSALDOAFAVORFIDUCIA)   AS SALDOFIDUCIA,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_GroupedReferenceNumber(VLD.CODIGOAGRUPACIONGTECH, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND @p_CODLINEADENEGOCIO        = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
              -- Particularity
              AND VLD.CODTIPOPUNTODEVENTA IN (1, 2)
            GROUP BY CFP.FECHAEJECUCION, VLD.CODIGOAGRUPACIONGTECH) s
      WHERE SALDOFIDUCIA > 0;
  END;
 GO

  /* Valores a recaudar */
  IF OBJECT_ID('WSXML_SFG.SFGINF_BCOFID_GetReportData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_BCOFID_GetReportData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_BCOFID_GetReportData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                          @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                          @pg_CADENA                NVARCHAR(2000),
                          @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                         @pg_PRODUCTO              NVARCHAR(2000)) AS
  BEGIN
  SET NOCOUNT ON;
    -- Particularidad: Union entre Agrupaciones y Terminales con Saldo > 0
      SELECT SALDOFIDUCIA,
             REFERENCIA,
             CONVERT(DATETIME,FECHACICLO) + 3 AS FECHACORTE
      FROM (SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(VLD.NUEVOSALDOENCONTRAFIDUCIA - 
                       VLD.NUEVOSALDOAFAVORFIDUCIA)   AS SALDOFIDUCIA,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_IndependentReferenceNumber(VLD.NUMEROTERMINAL, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND @p_CODLINEADENEGOCIO        = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
            GROUP BY CFP.FECHAEJECUCION, VLD.NUMEROTERMINAL
            
            UNION
      
            SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(VLD.NUEVOSALDOENCONTRAFIDUCIA - 
                       VLD.NUEVOSALDOAFAVORFIDUCIA)   AS SALDOFIDUCIA,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_GroupedReferenceNumber(VLD.CODIGOAGRUPACIONGTECH, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND @p_CODLINEADENEGOCIO        = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
              -- Particularity
              AND VLD.CODTIPOPUNTODEVENTA IN (1, 2)
            GROUP BY CFP.FECHAEJECUCION, VLD.CODIGOAGRUPACIONGTECH) s
      -- Particularity
      WHERE SALDOFIDUCIA > 0
      ORDER BY cast(REFERENCIA as numeric(38,0));
  END;

GO


