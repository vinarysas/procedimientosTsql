USE SFGPRODU;
--  DDL for Package Body SFGCONTRATO
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGCONTRATO */ 

  -- Creates a new record in the CONTRATO table
  IF OBJECT_ID('WSXML_SFG.SFGCONTRATO_AddRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONTRATO_AddRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGCONTRATO_AddRecord(@p_NUMEROCONTRATO            NVARCHAR(2000),
                      @p_CODAGRUPACIONPUNTODEVENTA NUMERIC(22,0),
                      @p_NOMBREORAZONSOCIAL        NVARCHAR(2000),
                      @p_CODTIPOIDENTIFICACION     NUMERIC(22,0),
                      @p_IDENTIFICACION            NVARCHAR(2000),
                      @p_DIGITOVERIFICACION        NUMERIC(22,0),
                      @p_TELEFONOCONTACTO          NVARCHAR(2000),
                      @p_DIRECCIONCONTACTO         NVARCHAR(2000),
                      @p_NOMBRECONTACTO            NVARCHAR(2000),
                      @p_EMAILCONTACTO             NVARCHAR(2000),
                      @p_CODCIUDAD                 NUMERIC(22,0),
                      @p_FECHAINSTALACION          DATETIME,
                      @p_CODREGIMEN                NUMERIC(22,0),
                      @p_NOMBREREPRESENTANTELEGAL  NVARCHAR(2000),
                      @p_IDENTIFICACIONREPLEG      VARCHAR(4000),
                      @p_CODUSUARIOMODIFICACION    NUMERIC(22,0),
                      @p_ID_CONTRATO_out           NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    INSERT INTO WSXML_SFG.CONTRATO (
                          NUMEROCONTRATO,
                          CODAGRUPACIONPDVCONTRATO,
                          NOMBREORAZONSOCIAL,
                          CODTIPOIDENTIFICACION,
                          IDENTIFICACIONCONTRATO,
                          DIGITOVERIFICACIONCONTRATO,
                          TELEFONOCONTACTO,
                          DIRECCIONCONTACTO,
                          NOMBRECONTACTO,
                          EMAILCONTACTO,
                          CODCIUDAD,
                          FECHAINSTALACION,
                          CODREGIMENAGRUPACION,
                          NOMBREREPRESENTANTELEGAL,
                          IDENTIFICACIONREPLEG,
                          CODUSUARIOMODIFICACION)
    VALUES (
            @p_NUMEROCONTRATO,
            @p_CODAGRUPACIONPUNTODEVENTA,
            @p_NOMBREORAZONSOCIAL,
            @p_CODTIPOIDENTIFICACION,
            @p_IDENTIFICACION,
            @p_DIGITOVERIFICACION,
            @p_TELEFONOCONTACTO,
            @p_DIRECCIONCONTACTO,
            @p_NOMBRECONTACTO,
            @p_EMAILCONTACTO,
            @p_CODCIUDAD,
            @p_FECHAINSTALACION,
            @p_CODREGIMEN,
            @p_NOMBREREPRESENTANTELEGAL,
            @p_IDENTIFICACIONREPLEG,
            @p_CODUSUARIOMODIFICACION);
    SET @p_ID_CONTRATO_out = SCOPE_IDENTITY();
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGCONTRATO_UpdateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONTRATO_UpdateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGCONTRATO_UpdateRecord(@pk_ID_CONTRATO              NUMERIC(22,0),
                         @p_NUMEROCONTRATO            NVARCHAR(2000),
                         @p_CODAGRUPACIONPUNTODEVENTA NUMERIC(22,0),
                         @p_NOMBREORAZONSOCIAL        NVARCHAR(2000),
                         @p_CODTIPOIDENTIFICACION     NUMERIC(22,0),
                         @p_IDENTIFICACION            NVARCHAR(2000),
                         @p_DIGITOVERIFICACION        NUMERIC(22,0),
                         @p_TELEFONOCONTACTO          NVARCHAR(2000),
                         @p_DIRECCIONCONTACTO         NVARCHAR(2000),
                         @p_NOMBRECONTACTO            NVARCHAR(2000),
                         @p_EMAILCONTACTO             NVARCHAR(2000),
                         @p_CODCIUDAD                 NUMERIC(22,0),
                         @p_FECHAINSTALACION          DATETIME,
                         @p_CODREGIMEN                NUMERIC(22,0),
                         @p_NOMBREREPRESENTANTELEGAL  NVARCHAR(2000),
                         @p_IDENTIFICACIONREPLEG      VARCHAR(4000),
                         @p_CODUSUARIOMODIFICACION    NUMERIC(22,0),
                         @p_ACTIVE                    NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    -- Si el tipo de agrupamiento es agrupado, y el regimen cambio
    /*DECLARE
      cCODTIPOAGRUPAMIENTO  NUMBER;
      cCODREGIMENAGRUPACION NUMBER;
      xCADENAAGRUPADA NUMBER := 1;
    BEGIN
      SELECT AGRUPACIONPUNTODEVENTA.CODTIPOPUNTODEVENTA, CONTRATO.CODREGIMENAGRUPACION INTO cCODTIPOAGRUPAMIENTO, cCODREGIMENAGRUPACION
      FROM CONTRATO
      INNER JOIN AGRUPACIONPUNTODEVENTA ON (CONTRATO.CODAGRUPACIONPUNTODEVENTA = AGRUPACIONPUNTODEVENTA.ID_AGRUPACIONPUNTODEVENTA)
      WHERE ID_CONTRATO = pk_ID_CONTRATO;

      IF cCODTIPOAGRUPAMIENTO = xCADENAAGRUPADA THEN
        IF NOT (cCODREGIMENAGRUPACION = p_CODREGIMEN) THEN
          -- Actualizar el regimen para toda la cadena
          UPDATE PUNTODEVENTA SET CODREGIMEN = p_CODREGIMEN
          WHERE CODCONTRATO = pk_ID_CONTRATO AND ACTIVE = 1;
        END IF;
      END IF;
    EXCEPTION WHEN OTHERS THEN
      msg := SQLERRM;
      SFGTMPTRACE.TraceLog('UPDATE GROUP REGIMEN', msg);
    END;
GO*/

    -- Update the record with the passed parameters
    UPDATE WSXML_SFG.CONTRATO
       SET NUMEROCONTRATO            = @p_NUMEROCONTRATO,
           CODAGRUPACIONPDVCONTRATO  = @p_CODAGRUPACIONPUNTODEVENTA,
           NOMBREORAZONSOCIAL        = @p_NOMBREORAZONSOCIAL,
           CODTIPOIDENTIFICACION     = @p_CODTIPOIDENTIFICACION,
           IDENTIFICACIONCONTRATO    = @p_IDENTIFICACION,
           DIGITOVERIFICACIONCONTRATO= @p_DIGITOVERIFICACION,
           TELEFONOCONTACTO          = @p_TELEFONOCONTACTO,
           DIRECCIONCONTACTO         = @p_DIRECCIONCONTACTO,
           NOMBRECONTACTO            = @p_NOMBRECONTACTO,
           EMAILCONTACTO             = @p_EMAILCONTACTO,
           CODCIUDAD                 = @p_CODCIUDAD,
           FECHAINSTALACION          = @p_FECHAINSTALACION,
           CODREGIMENAGRUPACION      = @p_CODREGIMEN,
           NOMBREREPRESENTANTELEGAL  = @p_NOMBREREPRESENTANTELEGAL,
           IDENTIFICACIONREPLEG      = @p_IDENTIFICACIONREPLEG,
           CODUSUARIOMODIFICACION    = @p_CODUSUARIOMODIFICACION,
           ACTIVE                    = @p_ACTIVE
     WHERE ID_CONTRATO = @pk_ID_CONTRATO;

    IF @@rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @@rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGCONTRATO_GetRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONTRATO_GetRecord;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCONTRATO_GetRecord(@pk_ID_CONTRATO NUMERIC(22,0)) AS
 BEGIN
    DECLARE @l_count INTEGER;
   
  SET NOCOUNT ON;
    SELECT @l_count = COUNT(*) FROM WSXML_SFG.CONTRATO WHERE ID_CONTRATO = @pk_ID_CONTRATO;
    IF @l_count = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @l_count > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
	 
      SELECT CONTRATO.ID_CONTRATO,
             CONTRATO.NUMEROCONTRATO,
             CONTRATO.CODAGRUPACIONPDVCONTRATO,
             CONTRATO.NOMBREORAZONSOCIAL,
             CONTRATO.CODTIPOIDENTIFICACION,
             CONTRATO.IDENTIFICACIONCONTRATO,
             CONTRATO.DIGITOVERIFICACIONCONTRATO,
             CONTRATO.TELEFONOCONTACTO,
             CONTRATO.DIRECCIONCONTACTO,
             CONTRATO.NOMBRECONTACTO,
             CONTRATO.EMAILCONTACTO,
             CONTRATO.CODCIUDAD,
             CIUDAD.CODDEPARTAMENTO,
             CONTRATO.FECHAINSTALACION,
             CONTRATO.CODREGIMENAGRUPACION,
             CONTRATO.NOMBREREPRESENTANTELEGAL,
             CONTRATO.IDENTIFICACIONREPLEG,
             CONTRATO.FECHAHORAMODIFICACION,
             CONTRATO.CODUSUARIOMODIFICACION,
             CONTRATO.ACTIVE
        FROM WSXML_SFG.CONTRATO
        LEFT OUTER JOIN CIUDAD
          ON (CIUDAD.ID_CIUDAD = CONTRATO.CODCIUDAD)
       WHERE CONTRATO.ID_CONTRATO = @pk_ID_CONTRATO;
	
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGCONTRATO_GetRecordByNumero', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONTRATO_GetRecordByNumero;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCONTRATO_GetRecordByNumero(@p_NUMEROCONTRATO NVARCHAR(2000)) AS
 BEGIN
    DECLARE @l_count INTEGER;
   
  SET NOCOUNT ON;
    SELECT @l_count = COUNT(*) FROM WSXML_SFG.CONTRATO WHERE NUMEROCONTRATO = @p_NUMEROCONTRATO;
    IF @l_count = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @l_count > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
		 
      SELECT CONTRATO.ID_CONTRATO,
             CONTRATO.NUMEROCONTRATO,
             CONTRATO.CODAGRUPACIONPDVCONTRATO,
             CONTRATO.NOMBREORAZONSOCIAL,
             CONTRATO.CODTIPOIDENTIFICACION,
             CONTRATO.IDENTIFICACIONCONTRATO,
             CONTRATO.DIGITOVERIFICACIONCONTRATO,
             CONTRATO.TELEFONOCONTACTO,
             CONTRATO.DIRECCIONCONTACTO,
             CONTRATO.NOMBRECONTACTO,
             CONTRATO.EMAILCONTACTO,
             CONTRATO.CODCIUDAD,
             CIUDAD.CODDEPARTAMENTO,
             CONTRATO.FECHAINSTALACION,
             CONTRATO.CODREGIMENAGRUPACION,
             CONTRATO.NOMBREREPRESENTANTELEGAL,
             CONTRATO.IDENTIFICACIONREPLEG,
             CONTRATO.FECHAHORAMODIFICACION,
             CONTRATO.CODUSUARIOMODIFICACION,
             CONTRATO.ACTIVE
        FROM WSXML_SFG.CONTRATO
        LEFT OUTER JOIN CIUDAD
          ON (CIUDAD.ID_CIUDAD = CONTRATO.CODCIUDAD)
       WHERE CONTRATO.NUMEROCONTRATO = @p_NUMEROCONTRATO;
	   	 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGCONTRATO_GetRecordWithData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONTRATO_GetRecordWithData;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCONTRATO_GetRecordWithData(@pk_ID_CONTRATO NUMERIC(22,0)) AS
 BEGIN
    DECLARE @l_count INTEGER;
   
  SET NOCOUNT ON;
    SELECT @l_count = COUNT(*) FROM WSXML_SFG.CONTRATO WHERE ID_CONTRATO = @pk_ID_CONTRATO;
    IF @l_count = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @l_count > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
		 
      SELECT CONTRATO.ID_CONTRATO,
             CONTRATO.NUMEROCONTRATO,
             CONTRATO.CODAGRUPACIONPDVCONTRATO,
             AGRUPACIONPUNTODEVENTA.NOMAGRUPACIONPUNTODEVENTA,
             CONTRATO.NOMBREORAZONSOCIAL,
             CONTRATO.CODTIPOIDENTIFICACION,
             TIPOIDENTIFICACION.NOMTIPOIDENTIFICACION,
             CONTRATO.IDENTIFICACIONCONTRATO,
             CONTRATO.DIGITOVERIFICACIONCONTRATO,
             CONTRATO.TELEFONOCONTACTO,
             CONTRATO.DIRECCIONCONTACTO,
             CONTRATO.NOMBRECONTACTO,
             CONTRATO.EMAILCONTACTO,
             CONTRATO.CODCIUDAD,
             CIUDAD.NOMCIUDAD,
             CONTRATO.FECHAINSTALACION,
             CONTRATO.CODREGIMENAGRUPACION,
             REGIMEN.NOMREGIMEN,
             CONTRATO.NOMBREREPRESENTANTELEGAL,
             CONTRATO.IDENTIFICACIONREPLEG,
             CONTRATO.FECHAHORAMODIFICACION,
             CONTRATO.CODUSUARIOMODIFICACION,
             USUARIO.NOMUSUARIO,
             CONTRATO.ACTIVE
        FROM WSXML_SFG.CONTRATO
        LEFT OUTER JOIN WSXML_SFG.AGRUPACIONPUNTODEVENTA
          ON (AGRUPACIONPUNTODEVENTA.ID_AGRUPACIONPUNTODEVENTA = CONTRATO.CODAGRUPACIONPDVCONTRATO)
        LEFT OUTER JOIN WSXML_SFG.TIPOIDENTIFICACION
          ON (TIPOIDENTIFICACION.ID_TIPOIDENTIFICACION = CONTRATO.CODTIPOIDENTIFICACION)
        LEFT OUTER JOIN WSXML_SFG.CIUDAD
          ON (CIUDAD.ID_CIUDAD = CONTRATO.CODCIUDAD)
        LEFT OUTER JOIN WSXML_SFG.REGIMEN
          ON (REGIMEN.ID_REGIMEN = CONTRATO.CODREGIMENAGRUPACION)
        LEFT OUTER JOIN WSXML_SFG.USUARIO
          ON (USUARIO.ID_USUARIO = CONTRATO.CODUSUARIOMODIFICACION)
       WHERE CONTRATO.ID_CONTRATO = @pk_ID_CONTRATO;
	   	 
  END;
GO

  -- Returns a query resultset from table CONTRATO
  -- given the search criteria and sorting condition.
  -- It will return a subset of the data based
  -- on the current page number and batch size.  Table joins can
  -- be performed if the join clause is specified.
  --
  -- If the resultset is not empty, it will return:
  --    1) The total number of rows which match the condition;
  --    2) The resultset in the current page
  -- If nothing matches the search condition, it will return:
  --    1) count is 0 ;
  --    2) empty resultset.
  IF OBJECT_ID('WSXML_SFG.SFGCONTRATO_GetList', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONTRATO_GetList;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCONTRATO_GetList(@p_active NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;

    -- Get the rows from the query.  Checksum value will be
    -- returned along the row data to support concurrency.

			 
      SELECT ID_CONTRATO,
             NUMEROCONTRATO,
             CODAGRUPACIONPDVCONTRATO,
             NOMBREORAZONSOCIAL,
             CODTIPOIDENTIFICACION,
             IDENTIFICACIONCONTRATO,
             DIGITOVERIFICACIONCONTRATO,
             TELEFONOCONTACTO,
             DIRECCIONCONTACTO,
             NOMBRECONTACTO,
             EMAILCONTACTO,
             CODCIUDAD,
             FECHAINSTALACION,
             CODREGIMENAGRUPACION,
             NOMBREREPRESENTANTELEGAL,
             IDENTIFICACIONREPLEG,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.CONTRATO
       WHERE ACTIVE = CASE WHEN @p_active = -1 THEN ACTIVE ELSE @p_active END;
		

  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGCONTRATO_GetListWithData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONTRATO_GetListWithData;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCONTRATO_GetListWithData(@p_active NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;

    -- Get the rows from the query.  Checksum value will be
    -- returned along the row data to support concurrency.
		 
      SELECT CONTRATO.ID_CONTRATO,
             CONTRATO.NUMEROCONTRATO,
             CONTRATO.CODAGRUPACIONPDVCONTRATO,
             AGRUPACIONPUNTODEVENTA.NOMAGRUPACIONPUNTODEVENTA,
             CONTRATO.NOMBREORAZONSOCIAL,
             CONTRATO.CODTIPOIDENTIFICACION,
             TIPOIDENTIFICACION.NOMTIPOIDENTIFICACION,
             CONTRATO.IDENTIFICACIONCONTRATO,
             CONTRATO.DIGITOVERIFICACIONCONTRATO,
             CONTRATO.TELEFONOCONTACTO,
             CONTRATO.DIRECCIONCONTACTO,
             CONTRATO.NOMBRECONTACTO,
             CONTRATO.EMAILCONTACTO,
             CONTRATO.CODCIUDAD,
             CIUDAD.NOMCIUDAD,
             CONTRATO.FECHAINSTALACION,
             CONTRATO.CODREGIMENAGRUPACION,
             REGIMEN.NOMREGIMEN,
             CONTRATO.NOMBREREPRESENTANTELEGAL,
             CONTRATO.IDENTIFICACIONREPLEG,
             CONTRATO.FECHAHORAMODIFICACION,
             CONTRATO.CODUSUARIOMODIFICACION,
             USUARIO.NOMUSUARIO,
             CONTRATO.ACTIVE
        FROM WSXML_SFG.CONTRATO
        LEFT OUTER JOIN WSXML_SFG.AGRUPACIONPUNTODEVENTA
          ON (AGRUPACIONPUNTODEVENTA.ID_AGRUPACIONPUNTODEVENTA = CONTRATO.CODAGRUPACIONPDVCONTRATO)
        LEFT OUTER JOIN TIPOIDENTIFICACION
          ON (TIPOIDENTIFICACION.ID_TIPOIDENTIFICACION = CONTRATO.CODTIPOIDENTIFICACION)
        LEFT OUTER JOIN WSXML_SFG.CIUDAD
          ON (CIUDAD.ID_CIUDAD = CONTRATO.CODCIUDAD)
        LEFT OUTER JOIN WSXML_SFG.REGIMEN
          ON (REGIMEN.ID_REGIMEN = CONTRATO.CODREGIMENAGRUPACION)
        LEFT OUTER JOIN WSXML_SFG.USUARIO
          ON (USUARIO.ID_USUARIO = CONTRATO.CODUSUARIOMODIFICACION)
       WHERE CONTRATO.ACTIVE = CASE WHEN @p_active = -1 THEN CONTRATO.ACTIVE ELSE @p_active END;
		

  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGCONTRATO_GetListWithDataPager', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONTRATO_GetListWithDataPager;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCONTRATO_GetListWithDataPager(@p_ACTIVE NUMERIC(22,0), @start_row NUMERIC(22,0), @end_row NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
   
      SELECT ID_CONTRATO,
             NUMEROCONTRATO,
             CODAGRUPACIONPDVCONTRATO,
             NOMAGRUPACIONPUNTODEVENTA,
             NOMBREORAZONSOCIAL,
             CODTIPOIDENTIFICACION,
             NOMTIPOIDENTIFICACION,
             IDENTIFICACIONCONTRATO,
             DIGITOVERIFICACIONCONTRATO,
             TELEFONOCONTACTO,
             DIRECCIONCONTACTO,
             NOMBRECONTACTO,
             EMAILCONTACTO,
             CODCIUDAD,
             NOMCIUDAD,
             FECHAINSTALACION,
             CODREGIMENAGRUPACION,
             NOMREGIMEN,
             NOMBREREPRESENTANTELEGAL,
             IDENTIFICACIONREPLEG,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             NOMUSUARIO,
             ACTIVE,
             total_rows,
             row_counter
       FROM (SELECT ID_CONTRATO,
                    NUMEROCONTRATO,
                    CODAGRUPACIONPDVCONTRATO,
                    NOMAGRUPACIONPUNTODEVENTA,
                    NOMBREORAZONSOCIAL,
                    CODTIPOIDENTIFICACION,
                    NOMTIPOIDENTIFICACION,
                    IDENTIFICACIONCONTRATO,
                    DIGITOVERIFICACIONCONTRATO,
                    TELEFONOCONTACTO,
                    DIRECCIONCONTACTO,
                    NOMBRECONTACTO,
                    EMAILCONTACTO,
                    CODCIUDAD,
                    NOMCIUDAD,
                    FECHAINSTALACION,
                    CODREGIMENAGRUPACION,
                    NOMREGIMEN,
                    NOMBREREPRESENTANTELEGAL,
                    IDENTIFICACIONREPLEG,
                    FECHAHORAMODIFICACION,
                    CODUSUARIOMODIFICACION,
                    NOMUSUARIO,
                    ACTIVE,
                    total_rows,
                    --rownum row_counter
					ROW_NUMBER () OVER (ORDER BY ID_CONTRATO ASC ) row_counter
              FROM (
				SELECT CONTRATO.ID_CONTRATO,
                           CONTRATO.NUMEROCONTRATO,
                           CONTRATO.CODAGRUPACIONPDVCONTRATO,
                           AGRUPACIONPUNTODEVENTA.NOMAGRUPACIONPUNTODEVENTA,
                           CONTRATO.NOMBREORAZONSOCIAL,
                           CONTRATO.CODTIPOIDENTIFICACION,
                           TIPOIDENTIFICACION.NOMTIPOIDENTIFICACION,
                           CONTRATO.IDENTIFICACIONCONTRATO,
                           CONTRATO.DIGITOVERIFICACIONCONTRATO,
                           CONTRATO.TELEFONOCONTACTO,
                           CONTRATO.DIRECCIONCONTACTO,
                           CONTRATO.NOMBRECONTACTO,
                           CONTRATO.EMAILCONTACTO,
                           CONTRATO.CODCIUDAD,
                           CIUDAD.NOMCIUDAD,
                           CONTRATO.FECHAINSTALACION,
                           CONTRATO.CODREGIMENAGRUPACION,
                           REGIMEN.NOMREGIMEN,
                           CONTRATO.NOMBREREPRESENTANTELEGAL,
                           CONTRATO.IDENTIFICACIONREPLEG,
                           CONTRATO.FECHAHORAMODIFICACION,
                           CONTRATO.CODUSUARIOMODIFICACION,
                           USUARIO.NOMUSUARIO,
                           CONTRATO.ACTIVE,
                           count(*) OVER() total_rows
                      FROM WSXML_SFG.CONTRATO
                      LEFT OUTER JOIN WSXML_SFG.AGRUPACIONPUNTODEVENTA
                        ON (AGRUPACIONPUNTODEVENTA.ID_AGRUPACIONPUNTODEVENTA = CONTRATO.CODAGRUPACIONPDVCONTRATO)
                      LEFT OUTER JOIN WSXML_SFG.TIPOIDENTIFICACION
                        ON (TIPOIDENTIFICACION.ID_TIPOIDENTIFICACION = CONTRATO.CODTIPOIDENTIFICACION)
                      LEFT OUTER JOIN WSXML_SFG.CIUDAD
                        ON (CIUDAD.ID_CIUDAD = CONTRATO.CODCIUDAD)
                      LEFT OUTER JOIN WSXML_SFG.REGIMEN
                        ON (REGIMEN.ID_REGIMEN = CONTRATO.CODREGIMENAGRUPACION)
                      LEFT OUTER JOIN WSXML_SFG.USUARIO
                        ON (USUARIO.ID_USUARIO = CONTRATO.CODUSUARIOMODIFICACION)
                     WHERE CONTRATO.ACTIVE = CASE WHEN @p_ACTIVE = -1 THEN CONTRATO.ACTIVE ELSE @p_ACTIVE END
				) s
					 
			) s
    WHERE row_counter between @start_row and @end_row;

 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGCONTRATO_GetListByAgrupacion', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONTRATO_GetListByAgrupacion;
GO
CREATE     PROCEDURE WSXML_SFG.SFGCONTRATO_GetListByAgrupacion(@p_ACTIVE NUMERIC(22,0), @p_CODAGRUPACIONPUNTODEVENTA NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
     
      SELECT CONTRATO.ID_CONTRATO,
             CONTRATO.NUMEROCONTRATO,
             CONTRATO.CODAGRUPACIONPDVCONTRATO,
             AGRUPACIONPUNTODEVENTA.NOMAGRUPACIONPUNTODEVENTA,
             CONTRATO.NOMBREORAZONSOCIAL,
             CONTRATO.CODTIPOIDENTIFICACION,
             TIPOIDENTIFICACION.NOMTIPOIDENTIFICACION,
             CONTRATO.IDENTIFICACIONCONTRATO,
             CONTRATO.DIGITOVERIFICACIONCONTRATO,
             CONTRATO.TELEFONOCONTACTO,
             CONTRATO.DIRECCIONCONTACTO,
             CONTRATO.NOMBRECONTACTO,
             CONTRATO.EMAILCONTACTO,
             CONTRATO.CODCIUDAD,
             CIUDAD.NOMCIUDAD,
             CONTRATO.FECHAINSTALACION,
             CONTRATO.CODREGIMENAGRUPACION,
             REGIMEN.NOMREGIMEN,
             CONTRATO.NOMBREREPRESENTANTELEGAL,
             CONTRATO.IDENTIFICACIONREPLEG,
             CONTRATO.FECHAHORAMODIFICACION,
             CONTRATO.CODUSUARIOMODIFICACION,
             USUARIO.NOMUSUARIO,
             CONTRATO.ACTIVE
        FROM WSXML_SFG.CONTRATO
        LEFT OUTER JOIN WSXML_SFG.AGRUPACIONPUNTODEVENTA
          ON (AGRUPACIONPUNTODEVENTA.ID_AGRUPACIONPUNTODEVENTA = CONTRATO.CODAGRUPACIONPDVCONTRATO)
        LEFT OUTER JOIN WSXML_SFG.TIPOIDENTIFICACION
          ON (TIPOIDENTIFICACION.ID_TIPOIDENTIFICACION = CONTRATO.CODTIPOIDENTIFICACION)
        LEFT OUTER JOIN WSXML_SFG.CIUDAD
          ON (CIUDAD.ID_CIUDAD = CONTRATO.CODCIUDAD)
        LEFT OUTER JOIN WSXML_SFG.REGIMEN
          ON (REGIMEN.ID_REGIMEN = CONTRATO.CODREGIMENAGRUPACION)
        LEFT OUTER JOIN WSXML_SFG.USUARIO
          ON (USUARIO.ID_USUARIO = CONTRATO.CODUSUARIOMODIFICACION)
       WHERE CONTRATO.CODAGRUPACIONPDVCONTRATO = CASE WHEN @p_CODAGRUPACIONPUNTODEVENTA = -1 THEN CONTRATO.CODAGRUPACIONPDVCONTRATO ELSE @p_CODAGRUPACIONPUNTODEVENTA END
         AND CONTRATO.ACTIVE = CASE WHEN @p_ACTIVE = -1 THEN CONTRATO.ACTIVE ELSE @p_ACTIVE END;
   
  END;
GO

