USE SFGPRODU;
--  DDL for Package Body SFGINF_SALDOSPENDIENTES
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGINF_SALDOSPENDIENTES */ 

  /* Valores facturados y a recaudar */
  IF OBJECT_ID('WSXML_SFG.SFGINF_SALDOSPENDIENTES_GetReportData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SALDOSPENDIENTES_GetReportData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SALDOSPENDIENTES_GetReportData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                          @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                          @pg_CADENA                NVARCHAR(2000),
                          @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                         @pg_PRODUCTO              NVARCHAR(2000)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
             VLD.CODTIPOPUNTODEVENTA            AS TIPOAGRUPACION,
             CASE WHEN VLD.CODTIPOPUNTODEVENTA = 1
                  THEN 
					'9' + RIGHT(REPLICATE('0', 4) + LEFT(MIN(VLD.CODIGOAGRUPACIONGTECH), 4),42)

                  ELSE CASE WHEN CAST(MIN(VLD.NUMEROTERMINAL) AS NUMERIC(38,0)) > 0
                            THEN 
								RIGHT(REPLICATE('0', 5) + LEFT(MIN(VLD.NUMEROTERMINAL), 5), 5)
                            ELSE MIN(VLD.NUMEROTERMINAL)
                       END
             END AS NUMEROTERMINAL,
             CASE WHEN VLD.CODTIPOPUNTODEVENTA = 1
                  THEN 
					'9' + RIGHT(REPLICATE('0', 4) + LEFT(MIN(VLD.CODIGOAGRUPACIONGTECH), 4), 4)
                  ELSE CASE WHEN CAST(MIN(VLD.NUMEROTERMINAL) AS NUMERIC(38,0)) > 0
                            THEN 
								RIGHT(REPLICATE('0', 5) + LEFT(MIN(VLD.NUMEROTERMINAL), 5), 5)
                            ELSE MIN(VLD.NUMEROTERMINAL)
                       END
             END AS NUMEROTERMINAL1,
             -- SUM(VLD.FACTURADOENCONTRAGTECH - VLD.FACTURADOAFAVORGTECH)       AS FACTURACIONACTUALGTECH,
             SUM(VLD.FACTURADODSCGTECH)                                       AS FACTURACIONACTUALGTECH,
             -- SUM(VLD.FACTURADOENCONTRAFIDUCIA - VLD.FACTURADOAFAVORFIDUCIA)   AS FACTURACIONACTUALFIDUCIA,
             SUM(VLD.FACTURADODSCFIDUCIA)                                     AS FACTURACIONACTUALFIDUCIA,
             SUM(VLD.NUEVOSALDOENCONTRAGTECH - VLD.NUEVOSALDOAFAVORGTECH)     AS TOTALAPAGARGTECH,
             SUM(VLD.NUEVOSALDOENCONTRAFIDUCIA - VLD.NUEVOSALDOAFAVORFIDUCIA) AS TOTALAPAGARFIDUCIA,
             VLD.REFERENCIAGTECH                                              AS REFERENCIAGTECH,
             VLD.REFERENCIAGTECH                                              AS REFERENCIAGTECH1,
             VLD.REFERENCIAFIDUCIA                                            AS REFERENCIAFIDUCIA
      FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
      INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
      WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
        AND VLD.CODLINEADENEGOCIO      = @p_CODLINEADENEGOCIO
        AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
        AND @pg_PRODUCTO                = @pg_PRODUCTO
        -- Filters
        AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
      GROUP BY CFP.FECHAEJECUCION, VLD.CODTIPOPUNTODEVENTA, VLD.REFERENCIAGTECH, VLD.REFERENCIAFIDUCIA
      ORDER BY cast(REFERENCIAGTECH as numeric(38,0));
  END;
GO
  IF OBJECT_ID('WSXML_SFG.SFGINF_SALDOSPENDIENTES_GetRealReportData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_SALDOSPENDIENTES_GetRealReportData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_SALDOSPENDIENTES_GetRealReportData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                              @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                              @pg_CADENA                NVARCHAR(2000),
                              @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                             @pg_PRODUCTO              NVARCHAR(2000)) AS
 BEGIN
    DECLARE @cACTUALBILLINGDATE DATETIME;
   
  SET NOCOUNT ON;
    SELECT @cACTUALBILLINGDATE = FECHAEJECUCION FROM WSXML_SFG.CICLOFACTURACIONPDV WHERE ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV;
      SELECT ID,
             FECHACICLO,
             TIPOAGRUPACION,
             NUMEROTERMINAL,
             FACTURACIONACTUALGTECH,
             FACTURACIONACTUALFIDUCIA,
             TOTALAPAGARGTECH,
             TOTALAPAGARFIDUCIA,
             REFERENCIAGTECH,
             REFERENCIAFIDUCIA
        FROM

      (
      SELECT 1                                  AS ID,
             CFP.FECHAEJECUCION                 AS FECHACICLO,
             VLD.CODTIPOPUNTODEVENTA            AS TIPOAGRUPACION,
             CONVERT(VARCHAR, 
             CASE WHEN VLD.CODTIPOPUNTODEVENTA = 1
                  THEN '9' + 
					RIGHT(REPLICATE('0', 4) + LEFT(MIN(VLD.CODIGOAGRUPACIONGTECH), 4), 4)
                  ELSE CASE WHEN CAST(MIN(VLD.NUMEROTERMINAL) AS NUMERIC(38,0)) > 0
                            THEN
								RIGHT(REPLICATE('0', 5) + LEFT(MIN(VLD.NUMEROTERMINAL), 5), 5)
                            ELSE MIN(VLD.NUMEROTERMINAL)
                       END
             END) AS NUMEROTERMINAL,
             CONVERT(VARCHAR, 
              CASE WHEN VLD.CODTIPOPUNTODEVENTA = 1
                  THEN '9' + 
					RIGHT(REPLICATE('0', 4) + LEFT(MIN(VLD.NUMEROTERMINAL), 4), 4)
                  ELSE CASE WHEN CAST(MIN(VLD.NUMEROTERMINAL) AS NUMERIC(38,0)) > 0
                            THEN RIGHT(REPLICATE('0', 5) + LEFT(MIN(VLD.NUMEROTERMINAL), 5), 5)
                            ELSE MIN(VLD.NUMEROTERMINAL)
                       END
             END) AS NUMEROTERMINAL1,
             -- SUM(VLD.FACTURADOENCONTRAGTECH - VLD.FACTURADOAFAVORGTECH)       AS FACTURACIONACTUALGTECH,
             SUM(VLD.FACTURADODSCGTECH)                                       AS FACTURACIONACTUALGTECH,
             -- SUM(VLD.FACTURADOENCONTRAFIDUCIA - VLD.FACTURADOAFAVORFIDUCIA)   AS FACTURACIONACTUALFIDUCIA,
             SUM(VLD.FACTURADODSCFIDUCIA)                                     AS FACTURACIONACTUALFIDUCIA,
             SUM(VLD.NUEVOSALDOENCONTRAGTECH - VLD.NUEVOSALDOAFAVORGTECH)     AS TOTALAPAGARGTECH,
             SUM(VLD.NUEVOSALDOENCONTRAFIDUCIA - VLD.NUEVOSALDOAFAVORFIDUCIA) AS TOTALAPAGARFIDUCIA,
             VLD.REFERENCIAGTECH                                              AS REFERENCIAGTECH,
             VLD.REFERENCIAGTECH                                              AS REFERENCIAGTECH1,             
             VLD.REFERENCIAFIDUCIA                                            AS REFERENCIAFIDUCIA
      FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
      INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
      WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
        AND VLD.CODLINEADENEGOCIO      = @p_CODLINEADENEGOCIO
        AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
        AND @pg_PRODUCTO                = @pg_PRODUCTO
        -- Filters
        AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
      GROUP BY CFP.FECHAEJECUCION, VLD.CODTIPOPUNTODEVENTA, VLD.REFERENCIAGTECH, VLD.REFERENCIAFIDUCIA
      ) s

      UNION

      (
      SELECT 2                         AS ID,
             @cACTUALBILLINGDATE        AS FECHACICLO,
             AGR.CODTIPOPUNTODEVENTA   AS TIPOAGRUPACION,
             CASE WHEN AGR.CODTIPOPUNTODEVENTA = 1
                  THEN '9' + 
						RIGHT(REPLICATE('0', 4) + LEFT(CONVERT(VARCHAR, AGR.CODIGOAGRUPACIONGTECH), 4), 4)
                  ELSE CASE WHEN CAST(PDV.NUMEROTERMINAL AS NUMERIC(38,0)) > 0
                            THEN 
								RIGHT(REPLICATE('0', 5) + LEFT(CONVERT(VARCHAR, PDV.NUMEROTERMINAL), 5), 5)
                            ELSE 
								RIGHT(REPLICATE('0', 5) + LEFT(CONVERT(VARCHAR, ABS(CAST(PDV.NUMEROTERMINAL AS NUMERIC(38,0)))), 5), 5)
                       END
             END AS NUMEROTERMINAL,
             0                                               AS FACTURACIONACTUALGTECH,
             0                                               AS FACTURACIONACTUALFIDUCIA,
             SIN.SALDOCONTRAGTECH - SIN.SALDOAFAVORGTECH     AS TOTALAPAGARGTECH,
             SIN.SALDOCONTRAFIDUCIA - SIN.SALDOAFAVORFIDUCIA AS TOTALAPAGARFIDUCIA,
             'N/A'                                           AS REFERENCIAGTECH,
             'N/A'                                           AS REFERENCIAFIDUCIA
      FROM WSXML_SFG.SALDOINACTIVO SIN
      INNER JOIN WSXML_SFG.PUNTODEVENTA PDV ON (SIN.CODPUNTODEVENTA = PDV.ID_PUNTODEVENTA)
      INNER JOIN WSXML_SFG.AGRUPACIONPUNTODEVENTA AGR ON (PDV.CODAGRUPACIONPUNTODEVENTA = AGR.ID_AGRUPACIONPUNTODEVENTA)
      WHERE CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
      )
      ORDER BY ID, REFERENCIAGTECH, NUMEROTERMINAL
      ;
  END;


GO


