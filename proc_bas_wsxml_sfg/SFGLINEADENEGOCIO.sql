USE SFGPRODU;
--  DDL for Package Body SFGLINEADENEGOCIO
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGLINEADENEGOCIO */ 

  IF OBJECT_ID('WSXML_SFG.SFGLINEADENEGOCIO_AddRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGLINEADENEGOCIO_AddRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGLINEADENEGOCIO_AddRecord(@p_NOMLINEADENEGOCIO      VARCHAR(4000),
                      @p_CODUSUARIOMODIFICACION NUMERIC(22,0),
                      @p_ID_LINEADENEGOCIO_out  NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    INSERT INTO WSXML_SFG.LINEADENEGOCIO
      ( NOMLINEADENEGOCIO, CODUSUARIOMODIFICACION)
    VALUES
      (
       @p_NOMLINEADENEGOCIO,
       @p_CODUSUARIOMODIFICACION);
    SET @p_ID_LINEADENEGOCIO_out = SCOPE_IDENTITY();

  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGLINEADENEGOCIO_UpdateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGLINEADENEGOCIO_UpdateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGLINEADENEGOCIO_UpdateRecord(@pk_ID_LINEADENEGOCIO     NUMERIC(22,0),
                         @p_NOMLINEADENEGOCIO      VARCHAR(4000),
                         @p_CODUSUARIOMODIFICACION NUMERIC(22,0),
                         @p_ACTIVE                 NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.LINEADENEGOCIO
       SET NOMLINEADENEGOCIO      = @p_NOMLINEADENEGOCIO,
           CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION,
           ACTIVE                 = @p_ACTIVE
     WHERE ID_LINEADENEGOCIO = @pk_ID_LINEADENEGOCIO;

    IF @@rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @@rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGLINEADENEGOCIO_GetRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGLINEADENEGOCIO_GetRecord;
GO
CREATE     PROCEDURE WSXML_SFG.SFGLINEADENEGOCIO_GetRecord(@pk_ID_LINEADENEGOCIO NUMERIC(22,0)) AS
 BEGIN
    DECLARE @l_count INTEGER;
   
  SET NOCOUNT ON;
    SELECT @l_count = COUNT(*) FROM WSXML_SFG.LINEADENEGOCIO WHERE ID_LINEADENEGOCIO = @pk_ID_LINEADENEGOCIO;
    IF @l_count = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @l_count > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 

      SELECT ID_LINEADENEGOCIO,
             NOMLINEADENEGOCIO,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.LINEADENEGOCIO
       WHERE ID_LINEADENEGOCIO = @pk_ID_LINEADENEGOCIO;
  END;
GO

IF OBJECT_ID('WSXML_SFG.SFGLINEADENEGOCIO_GetList', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGLINEADENEGOCIO_GetList;
GO
CREATE     PROCEDURE WSXML_SFG.SFGLINEADENEGOCIO_GetList(@p_active NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT L.ID_LINEADENEGOCIO,
             L.NOMLINEADENEGOCIO,
             L.FECHAHORAMODIFICACION,
             L.CODUSUARIOMODIFICACION,
             L.ACTIVE,
             COUNT (T.ID_TIPOPRODUCTO) NUMTIPOSPRODUCTO,
             L.NOMCORTOLINEADENEGOCIO,
             CASE WHEN ISNULL(PRODUCTOSCONFIDUCIA.NUMERO,0) <>0  THEN 1 ELSE 0 END AS TIENEFIDUCIA
      FROM WSXML_SFG.LINEADENEGOCIO L
      LEFT OUTER JOIN WSXML_SFG.TIPOPRODUCTO T
        ON (T.CODLINEADENEGOCIO = L.ID_LINEADENEGOCIO)
      LEFT OUTER JOIN 
           (
           SELECT TIPOPRODUCTO.CODLINEADENEGOCIO,COUNT(1) NUMERO
           FROM WSXML_SFG.PRODUCTO 
           INNER JOIN WSXML_SFG.TIPOPRODUCTO ON PRODUCTO.CODTIPOPRODUCTO = TIPOPRODUCTO.ID_TIPOPRODUCTO
           WHERE PRODUCTO.ACTIVE = 1 AND PRODUCTO.PORCENTAJEFIDUCIA<>0
           GROUP BY TIPOPRODUCTO.CODLINEADENEGOCIO
           ) PRODUCTOSCONFIDUCIA ON PRODUCTOSCONFIDUCIA.CODLINEADENEGOCIO = L.ID_LINEADENEGOCIO
      WHERE L.ACTIVE = CASE WHEN @p_active = -1 THEN L.ACTIVE ELSE @p_active END
      GROUP BY L.ID_LINEADENEGOCIO,
             L.NOMLINEADENEGOCIO,
             L.FECHAHORAMODIFICACION,
             L.CODUSUARIOMODIFICACION,
             L.ACTIVE,
             L.NOMCORTOLINEADENEGOCIO,
             CASE WHEN ISNULL(PRODUCTOSCONFIDUCIA.NUMERO,0) <>0  THEN 1 ELSE 0 END;

  END;
GO



IF EXISTS (
    SELECT * FROM sys.objects WHERE OBJECT_NAME(object_id) = N'SFGLINEADENEGOCIO_GetNormalizedLines'
    AND type IN (N'FN', N'IF', N'TF')
)
    DROP FUNCTION WSXML_SFG.SFGLINEADENEGOCIO_GetNormalizedLines
GO

CREATE     FUNCTION WSXML_SFG.SFGLINEADENEGOCIO_GetNormalizedLines() 
RETURNS @p_COMPLETELIST TABLE(CODLINEADENEGOCIO numeric(38,0), FIDUCIA numeric(38,0), NOMLINEADENEGOCIO varchar(500)) AS
 BEGIN
    DECLARE @tmpGTECH   WSXML_SFG.NORMALIZEDSERVICE;
    DECLARE @tmpFIDUCIA WSXML_SFG.NORMALIZEDSERVICE;
    --DECLARE @p_COMPLETELIST NORMALIZEDSERVICELIST;
   
    -- Lista ordenada de prioridades de pago para uso de distribucion
    INSERT INTO @tmpGTECH 
	SELECT ID_LINEADENEGOCIO, 0, NOMLINEADENEGOCIO FROM WSXML_SFG.LINEADENEGOCIO
    WHERE PRIORIDADPAGO >= 0
    ORDER BY ID_LINEADENEGOCIO;
    
	INSERT INTO @tmpFIDUCIA 
	SELECT ID_LINEADENEGOCIO, 1, ISNULL(NOMLINEADENEGOCIO, '') + ' - FIDUCIA' FROM WSXML_SFG.LINEADENEGOCIO
    WHERE PRIORIDADPAGOFIDUCIA >= 0
    ORDER BY ID_LINEADENEGOCIO;

    
    -- Ordenar ambas listas en nueva lista
	INSERT INTO @p_COMPLETELIST
    SELECT CODLINEADENEGOCIO, FIDUCIA, NOMLINEADENEGOCIO
    FROM (
			SELECT CODLINEADENEGOCIO, FIDUCIA, NOMLINEADENEGOCIO FROM @tmpGTECH
				UNION
			SELECT CODLINEADENEGOCIO, FIDUCIA, NOMLINEADENEGOCIO FROM @tmpFIDUCIA
		  ) T
    RETURN 
  END;
GO




IF EXISTS (
    SELECT * FROM sys.objects WHERE OBJECT_NAME(object_id) = N'SFGLINEADENEGOCIO_GetBalanceList'
    AND type IN (N'FN', N'IF', N'TF')
)
    DROP FUNCTION WSXML_SFG.SFGLINEADENEGOCIO_GetBalanceList
GO

CREATE     FUNCTION WSXML_SFG.SFGLINEADENEGOCIO_GetBalanceList() RETURNS 
 @p_BALANCEDLIST TABLE(CODLINEADENEGOCIO NUMERIC(38,0), FIDUCIA NUMERIC(38,0), SALDOACTUAL FLOAT) AS
 BEGIN
    DECLARE @tmpGTECH   WSXML_SFG.SETTLEFACTURACION;
    DECLARE @tmpFIDUCIA WSXML_SFG.SETTLEFACTURACION;
    --DECLARE @p_BALANCEDLIST WSXML_SFG.SETTLEFACTURACION;
   
    -- Lista ordenada de prioridades de pago para uso de distribucion
    INSERT INTO @tmpGTECH 
	SELECT ID_LINEADENEGOCIO, 0, PRIORIDADPAGO FROM WSXML_SFG.LINEADENEGOCIO
    ORDER BY PRIORIDADPAGO;
    INSERT INTO @tmpFIDUCIA
	SELECT ID_LINEADENEGOCIO, 1, PRIORIDADPAGOFIDUCIA  FROM WSXML_SFG.LINEADENEGOCIO
    ORDER BY PRIORIDADPAGOFIDUCIA;
  
    -- Ordenar ambas listas en nueva lista
    INSERT INTO @p_BALANCEDLIST
	SELECT CODLINEADENEGOCIO, FIDUCIA, 0 
    FROM (SELECT CODLINEADENEGOCIO, FIDUCIA, SALDOACTUAL FROM @tmpGTECH WHERE SALDOACTUAL >= 0
          UNION
          SELECT CODLINEADENEGOCIO, FIDUCIA, SALDOACTUAL FROM @tmpFIDUCIA WHERE SALDOACTUAL >= 0) T
    ORDER BY SALDOACTUAL ASC;
    RETURN 
  END;
GO