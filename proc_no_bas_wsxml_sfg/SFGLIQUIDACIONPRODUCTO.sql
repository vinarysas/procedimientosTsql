USE SFGPRODU;
--  DDL for Package Body SFGLIQUIDACIONPRODUCTO
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGLIQUIDACIONPRODUCTO */ 

  IF OBJECT_ID('WSXML_SFG.SFGLIQUIDACIONPRODUCTO_EstablecerPuntoProducto', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGLIQUIDACIONPRODUCTO_EstablecerPuntoProducto;
GO

CREATE     PROCEDURE WSXML_SFG.SFGLIQUIDACIONPRODUCTO_EstablecerPuntoProducto(@p_CODPRODUCTO NUMERIC(22,0), @p_CODPUNTODEVENTA NUMERIC(22,0), @p_ID_LIQUIDACIONPRODUCTO_out NUMERIC(22,0) OUT) AS
 BEGIN
    DECLARE @xSorteoProducto NUMERIC(22,0);
   
  SET NOCOUNT ON;
    SELECT @xSorteoProducto = ID_SORTEOPRODUCTO FROM WSXML_SFG.SORTEOPRODUCTO WHERE CODPRODUCTO = @p_CODPRODUCTO;
    SELECT @p_ID_LIQUIDACIONPRODUCTO_out = ID_LIQUIDACIONPRODUCTO FROM WSXML_SFG.LIQUIDACIONPRODUCTO WHERE CODSORTEOPRODUCTO = @xSorteoProducto;
    UPDATE WSXML_SFG.LIQUIDACIONPRODUCTO SET CODPUNTODEVENTAPRODUCTO = @p_CODPUNTODEVENTA WHERE ID_LIQUIDACIONPRODUCTO = @p_ID_LIQUIDACIONPRODUCTO_out;
	IF @@ROWCOUNT = 0
		RAISERROR('-20020 No existe informacion de liquidacion para el producto', 16, 1);
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGLIQUIDACIONPRODUCTO_ObtenerInformacionPremios', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGLIQUIDACIONPRODUCTO_ObtenerInformacionPremios;
GO

CREATE     PROCEDURE WSXML_SFG.SFGLIQUIDACIONPRODUCTO_ObtenerInformacionPremios(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                                      @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                                      @pg_CADENA                NVARCHAR(2000),
                                      @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                                     @pg_PRODUCTO              NVARCHAR(2000)) AS
 BEGIN
    DECLARE @xProductString VARCHAR(MAX) = '';
    DECLARE @xProductList   WSXML_SFG.NUMBERARRAY;
    DECLARE @sql NVARCHAR(MAX);
   
  SET NOCOUNT ON;
	INSERT INTO @xProductList 
    SELECT ID_LIQUIDACIONPRODUCTO FROM WSXML_SFG.LIQUIDACIONPRODUCTO;
    IF (SELECT COUNT(*) FROM @xProductList) > 0 BEGIN

      DECLARE ix CURSOR FOR SELECT IDVALUE FROM  @xProductList
	  OPEN ix

	  DECLARE @ix_IDVALUE NUMERIC(38,0)
	  FETCH NEXT FROM ix INTO @ix_IDVALUE

        DECLARE @xProductID   NUMERIC(22,0);
        DECLARE @xProductCode VARCHAR(4000) /* Use -meta option PRODUCTO.CODIGOGTECHPRODUCTO%TYPE */;
        DECLARE @xAgentID     NUMERIC(22,0);
        DECLARE @xAgentCode VARCHAR(4000)   /* Use -meta option PUNTODEVENTA.CODIGOGTECHPUNTODEVENTA%TYPE */;
		          
        WHILE (@@FETCH_STATUS = 0)
        BEGIN
          SELECT @xProductID = ID_PRODUCTO, @xProductCode = CODIGOGTECHPRODUCTO, @xAgentID = ID_PUNTODEVENTA, @xAgentCode = CODIGOGTECHPUNTODEVENTA
          FROM WSXML_SFG.LIQUIDACIONPRODUCTO
          INNER JOIN WSXML_SFG.SORTEOPRODUCTO ON (CODSORTEOPRODUCTO = ID_SORTEOPRODUCTO)
          INNER JOIN WSXML_SFG.PRODUCTO       ON (CODPRODUCTO       = ID_PRODUCTO)
          INNER JOIN WSXML_SFG.PUNTODEVENTA   ON (CODPUNTODEVENTAPRODUCTO = ID_PUNTODEVENTA)
          WHERE ID_LIQUIDACIONPRODUCTO = @ix_IDVALUE
          SET @xProductString = ISNULL(@xProductString, '') + ', SUM(CASE WHEN CODPRODUCTO = ' + ISNULL(@xProductID, '') + ' AND CODPUNTODEVENTA = ' + ISNULL(@xAgentID, '') + ' THEN VALORTRANSACCION ELSE 0 END) AS ' + ISNULL(@xProductCode, '') + ' - ' + ISNULL(@xAgentCode, '') + '';
     
		FETCH NEXT FROM ix INTO @ix_IDVALUE
		END;
		
		CLOSE ix;
		DEALLOCATE ix;

      SET @sql = 
        'SELECT FECHAARCHIVO' + ISNULL(@xProductString, '') + ' ' +
        'FROM (SELECT FECHAARCHIVO, CODPUNTODEVENTA, CODPRODUCTO, VALORTRANSACCION FROM ENTRADAARCHIVOCONTROL ' +
        '      INNER JOIN REGISTROFACTURACION ON (CODENTRADAARCHIVOCONTROL = ID_ENTRADAARCHIVOCONTROL) ' +
        '      WHERE REVERSADO = 0 AND TIPOARCHIVO = 2 AND FECHAARCHIVO BETWEEN TRUNC(SYSDATE - 30, ''DD'') AND TRUNC(SYSDATE, ''DD'') ' +
        '      GROUP BY FECHAARCHIVO, CODPUNTODEVENTA, CODPRODUCTO, VALORTRANSACCION) GROUP BY FECHAARCHIVO ORDER BY FECHAARCHIVO ';
      EXECUTE sp_executesql @sql;
    END 
  END;

GO


