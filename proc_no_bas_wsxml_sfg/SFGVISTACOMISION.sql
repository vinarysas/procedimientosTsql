USE SFGPRODU;
--  DDL for Package Body SFGVISTACOMISION
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGVISTACOMISION */ 

  -- Author  : Damian Del Castillo
  -- Created : 30/12/2008 02:05:09 p.m.
  -- Purpose : Calcular la comision para los productos de los puntos de venta segun la linea de negocio



  IF OBJECT_ID('WSXML_SFG.SFGVISTACOMISION_GetComision', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVISTACOMISION_GetComision;
GO

CREATE     PROCEDURE WSXML_SFG.SFGVISTACOMISION_GetComision(@p_CODLINEADENEGOCIO NUMERIC(22,0),
                        @p_CODTIPOPRODUCTO   NUMERIC(22,0),
                        @p_CODAGRUPACIONPUNTODEVENTA NUMERIC(22,0),
                        @p_CODREDPDV NUMERIC(22,0),
                        @p_page_number       INTEGER,
                        @p_batch_size        INTEGER,
                        @p_total_size INTEGER OUT) AS
 BEGIN
    DECLARE @strBIGSQLINSTR VARCHAR(MAX) = '';
    DECLARE @strMDMSQLINSTR VARCHAR(MAX) = '';
    DECLARE @strALSSQLINSTR VARCHAR(MAX) = '';
    DECLARE @strSQLINSTRUCT VARCHAR(MAX) = '';
    DECLARE @strBIGWHERECLS VARCHAR(MAX) = '';
    DECLARE @strWHERECLAUSE VARCHAR(MAX) = '';
    DECLARE @lstCOLUMNNAMES WSXML_SFG.DEFPRODUCTO;

    DECLARE @l_end_gen_row_num   INTEGER;
    DECLARE @l_start_gen_row_num INTEGER;
    DECLARE @sql NVARCHAR(MAX);
   
  SET NOCOUNT ON;
    SET @l_end_gen_row_num   = @p_page_number * @p_batch_size;
    SET @l_start_gen_row_num = @l_end_gen_row_num - (@p_batch_size-1);

    select @p_total_size = count(1) from WSXML_SFG.puntodeventa PDV
    INNER JOIN WSXML_SFG.AGRUPACIONPUNTODEVENTA AGR ON (AGR.ID_AGRUPACIONPUNTODEVENTA = PDV.CODAGRUPACIONPUNTODEVENTA)
    LEFT OUTER JOIN WSXML_SFG.PDVCATEGORIAPAGO PCP ON (PCP.CODPUNTODEVENTA = PDV.ID_PUNTODEVENTA AND PCP.CODLINEADENEGOCIO =  @p_CODLINEADENEGOCIO)
    LEFT OUTER JOIN WSXML_SFG.CATEGORIAPAGO CPG ON (CPG.ID_CATEGORIAPAGO = PCP.CODCATEGORIAPAGO)
    WHERE AGR.ID_AGRUPACIONPUNTODEVENTA = CASE WHEN  @p_CODAGRUPACIONPUNTODEVENTA   = -1 THEN AGR.ID_AGRUPACIONPUNTODEVENTA ELSE  @p_CODAGRUPACIONPUNTODEVENTA  END
    AND PDV.CODREDPDV = CASE WHEN  @p_CODREDPDV  = -1 THEN PDV.CODREDPDV ELSE  @p_CODREDPDV  END
    AND PDV.active = 1;

	INSERT INTO @lstCOLUMNNAMES
    SELECT ID_PRODUCTO, CODIGOGTECHPRODUCTO, NOMPRODUCTO, COMISIONVARIABLE
    FROM WSXML_SFG.PRODUCTO INNER JOIN WSXML_SFG.TIPOPRODUCTO ON (CODTIPOPRODUCTO = ID_TIPOPRODUCTO)
    WHERE CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
      AND CODTIPOPRODUCTO = CASE WHEN @p_CODTIPOPRODUCTO = -1 THEN CODTIPOPRODUCTO ELSE @p_CODTIPOPRODUCTO END
      ORDER BY CAST(CODIGOGTECHPRODUCTO AS NUMERIC(38,0));

    IF @@ROWCOUNT > 0 BEGIN
      SET @strSQLINSTRUCT = 'SELECT COMISIONVARIABLE, ID_PUNTODEVENTA';
      SET @strBIGSQLINSTR = 'SELECT CODIGOAGRUPACIONGTECH, NOMAGRUPACIONPUNTODEVENTA, CODIGOGTECHPUNTODEVENTA, NOMPUNTODEVENTA';
      SET @strMDMSQLINSTR = 'CODIGOAGRUPACIONGTECH, NOMAGRUPACIONPUNTODEVENTA, CODIGOGTECHPUNTODEVENTA, NOMPUNTODEVENTA';
      SET @strALSSQLINSTR = 'CODIGOAGRUPACIONGTECH, NOMAGRUPACIONPUNTODEVENTA, CODIGOGTECHPUNTODEVENTA, NOMPUNTODEVENTA';

      DECLARE ix CURSOR FOR

	  SELECT ID_PRODUCTO, CODIGOGTECHPRODUCTO, NOMPRODUCTO, APLICAVARIABLE 
	  FROM @lstCOLUMNNAMES--.First..lstCOLUMNNAMES.Last LOOP
	  OPEN ix

	  DECLARE @ix__ID_PRODUCTO NUMERIC(38,0), @ix__CODIGOGTECHPRODUCTO NVARCHAR(50), @ix__NOMPRODUCTO VARCHAR(255), @ix__APLICAVARIABLE NUMERIC(38,0)

	  FETCH NEXT FROM ix INTO @ix__ID_PRODUCTO, @ix__CODIGOGTECHPRODUCTO, @ix__NOMPRODUCTO, @ix__APLICAVARIABLE;
	  
	  WHILE @@FETCH_STATUS=0 BEGIN

        SET @strSQLINSTRUCT = ISNULL(@strSQLINSTRUCT, '') + ', CASE WHEN PRD.ID_PRODUCTO = ' + @ix__ID_PRODUCTO + ' THEN CMS.CODTIPOCOMISION ELSE NULL END AS T' + @ix__CODIGOGTECHPRODUCTO + '';
        SET @strSQLINSTRUCT = ISNULL(@strSQLINSTRUCT, '') + ', CASE WHEN PRD.ID_PRODUCTO = ' + @ix__ID_PRODUCTO + ' THEN CMS.VALOR ELSE NULL END AS V' + @ix__CODIGOGTECHPRODUCTO + '';
        SET @strSQLINSTRUCT = ISNULL(@strSQLINSTRUCT, '') + ', CASE WHEN PRD.ID_PRODUCTO = ' + @ix__ID_PRODUCTO + ' THEN CMS.ANTICIPO ELSE NULL END AS K' + @ix__CODIGOGTECHPRODUCTO + '';
        SET @strSQLINSTRUCT = ISNULL(@strSQLINSTRUCT, '') + ', CASE WHEN PRD.ID_PRODUCTO = ' + @ix__ID_PRODUCTO + ' THEN PRD.COMISIONVARIABLE ELSE NULL END AS A' + @ix__CODIGOGTECHPRODUCTO + '';

        SET @strBIGSQLINSTR = ISNULL(@strBIGSQLINSTR, '') + ', NVL2(MAX(V' + @ix__CODIGOGTECHPRODUCTO + '), CASE WHEN MAX(T' + @ix__CODIGOGTECHPRODUCTO + ') = 1 THEN TO_CHAR(MAX(V' + @ix__CODIGOGTECHPRODUCTO + ') + CASE WHEN MAX(A' + @ix__CODIGOGTECHPRODUCTO + ') = 1 THEN NVL(VARIABLEPORCENTUAL, 0) ELSE 0 END) || ''%'' || CASE WHEN MAX(K' + @ix__CODIGOGTECHPRODUCTO + ') = 1 THEN '' (Ant)'' END ELSE ''$'' || TO_CHAR(MAX(V' + @ix__CODIGOGTECHPRODUCTO + ') + CASE WHEN MAX(A' + @ix__CODIGOGTECHPRODUCTO + ') = 1 THEN NVL(VARIABLETRANSACCIONAL, 0) ELSE 0 END) || CASE WHEN MAX(K' + @ix__CODIGOGTECHPRODUCTO + ') = 1 THEN '' (Ant)'' END END, ''N/A'')';
        SET @strBIGSQLINSTR = ISNULL(@strBIGSQLINSTR, '') + '  AS PRD' + @ix__CODIGOGTECHPRODUCTO;

        SET @strMDMSQLINSTR = ISNULL(@strMDMSQLINSTR, '') + ', PRD' + @ix__CODIGOGTECHPRODUCTO;
        SET @strALSSQLINSTR = ISNULL(@strALSSQLINSTR, '') + ', PRD' + @ix__CODIGOGTECHPRODUCTO + ' AS "' + @ix__CODIGOGTECHPRODUCTO + '. ' + (CASE WHEN LEN(@ix__NOMPRODUCTO) > 22 THEN dbo.INITCAP(SUBSTRING(@ix__NOMPRODUCTO, 0, 22)) ELSE dbo.INITCAP(@ix__NOMPRODUCTO) END)
		FETCH NEXT FROM ix INTO @ix__ID_PRODUCTO, @ix__CODIGOGTECHPRODUCTO, @ix__NOMPRODUCTO, @ix__APLICAVARIABLE;
 
	  END
	  CLOSE ix;
	  DEALLOCATE ix;
    END
    ELSE
      RAISERROR('-20054 No hay productos configurados para la linea de negocio', 16, 1);

    
	SET @strWHERECLAUSE = ' FROM PUNTODEVENTA PDV ';
    SET @strWHERECLAUSE = ISNULL(@strWHERECLAUSE, '') + 'INNER JOIN WSXML_SFG.TIPOPRODUCTO TPR ON (TPR.CODLINEADENEGOCIO = ' + ISNULL(@p_CODLINEADENEGOCIO, '') + ISNULL(CASE WHEN @p_CODTIPOPRODUCTO = -1 THEN '' ELSE ' AND TPR.ID_TIPOPRODUCTO = ' + ISNULL(@p_CODTIPOPRODUCTO, '') END, '') + ') ';
    SET @strWHERECLAUSE = ISNULL(@strWHERECLAUSE, '') + 'INNER JOIN WSXML_SFG.PRODUCTO PRD ON (PRD.CODTIPOPRODUCTO = TPR.ID_TIPOPRODUCTO) ';
    SET @strWHERECLAUSE = ISNULL(@strWHERECLAUSE, '') + 'INNER JOIN WSXML_SFG.PLANTILLAPRODUCTO PLT ON (PLT.ID_PLANTILLAPRODUCTO = SFGVISTACOMISION.GetPlantillaAplicable(' + ISNULL(@p_CODLINEADENEGOCIO, '') + ', PDV.ID_PUNTODEVENTA)) ';
    SET @strWHERECLAUSE = ISNULL(@strWHERECLAUSE, '') + 'LEFT OUTER JOIN (SELECT CODPLANTILLAPRODUCTO, CODPRODUCTO, CODTIPOCOMISION, ANTICIPO, MAX(CASE WHEN CODTIPOCOMISION = 1 THEN VALORPORCENTUAL ELSE VALORTRANSACCIONAL END) AS VALOR ';
    SET @strWHERECLAUSE = ISNULL(@strWHERECLAUSE, '') + '                 FROM WSXML_SFG.PLANTILLAPRODUCTODETALLE PLD ';
    SET @strWHERECLAUSE = ISNULL(@strWHERECLAUSE, '') + '                 INNER JOIN WSXML_SFG.RANGOCOMISION RCM ON (PLD.CODRANGOCOMISION = RCM.ID_RANGOCOMISION) ';
    SET @strWHERECLAUSE = ISNULL(@strWHERECLAUSE, '') + '                 INNER JOIN WSXML_SFG.RANGOCOMISIONDETALLE RCD ON (RCD.CODRANGOCOMISION = RCM.ID_RANGOCOMISION) ';
    SET @strWHERECLAUSE = ISNULL(@strWHERECLAUSE, '') + '                 GROUP BY CODPLANTILLAPRODUCTO, CODPRODUCTO, CODTIPOCOMISION, ANTICIPO) CMS ON (CMS.CODPLANTILLAPRODUCTO = PLT.ID_PLANTILLAPRODUCTO AND CMS.CODPRODUCTO = PRD.ID_PRODUCTO) ';
    SET @strWHERECLAUSE = ISNULL(@strWHERECLAUSE, '') + 'WHERE PDV.ACTIVE = 1 ';

    SET @strBIGWHERECLS = ISNULL(@strBIGWHERECLS, '') + 'INNER JOIN WSXML_SFG.PUNTODEVENTA PDV ON (PDV.ID_PUNTODEVENTA = QRY.ID_PUNTODEVENTA) ';
    SET @strBIGWHERECLS = ISNULL(@strBIGWHERECLS, '') + 'INNER JOIN WSXML_SFG.AGRUPACIONPUNTODEVENTA AGR ON (AGR.ID_AGRUPACIONPUNTODEVENTA = PDV.CODAGRUPACIONPUNTODEVENTA) ';
    SET @strBIGWHERECLS = ISNULL(@strBIGWHERECLS, '') + 'LEFT OUTER JOIN WSXML_SFG.PDVCATEGORIAPAGO PCP ON (PCP.CODPUNTODEVENTA = PDV.ID_PUNTODEVENTA AND PCP.CODLINEADENEGOCIO = ' + ISNULL(@p_CODLINEADENEGOCIO, '') + ') ';
    SET @strBIGWHERECLS = ISNULL(@strBIGWHERECLS, '') + 'LEFT OUTER JOIN WSXML_SFG.CATEGORIAPAGO CPG ON (CPG.ID_CATEGORIAPAGO = PCP.CODCATEGORIAPAGO) ';
    SET @strBIGWHERECLS = ISNULL(@strBIGWHERECLS, '') + 'WHERE AGR.ID_AGRUPACIONPUNTODEVENTA = CASE WHEN ' + ISNULL(@p_CODAGRUPACIONPUNTODEVENTA, '')  + ' = -1 THEN AGR.ID_AGRUPACIONPUNTODEVENTA ELSE ' + ISNULL(@p_CODAGRUPACIONPUNTODEVENTA, '')  + ' END ';
    SET @strBIGWHERECLS = ISNULL(@strBIGWHERECLS, '') + 'AND PDV.CODREDPDV = CASE WHEN ' + ISNULL(@p_CODREDPDV, '')  + ' = -1 THEN PDV.CODREDPDV ELSE ' + ISNULL(@p_CODREDPDV, '')  + ' END ';
    SET @strBIGWHERECLS = ISNULL(@strBIGWHERECLS, '') + 'GROUP BY CODIGOAGRUPACIONGTECH, NOMAGRUPACIONPUNTODEVENTA, CODIGOGTECHPUNTODEVENTA, NOMPUNTODEVENTA, VARIABLEPORCENTUAL, VARIABLETRANSACCIONAL ';
    SET @strBIGWHERECLS = ISNULL(@strBIGWHERECLS, '') + 'ORDER BY AGR.CODIGOAGRUPACIONGTECH, PDV.CODIGOGTECHPUNTODEVENTA ';

    PRINT LEN(@strBIGSQLINSTR);
    SET @sql = 
    --strBIGSQLINSTR || ' FROM (' || strSQLINSTRUCT || strWHERECLAUSE || ') QRY ' || strBIGWHERECLS;
      'SELECT ' + ISNULL(@strALSSQLINSTR, '') +
      ' FROM (SELECT ' + ISNULL(@strMDMSQLINSTR, '') + ', ROW_NUMBER() OVER(ORDER BY KAZ_ROW_NUMBER) KAZ_ROW_NUMBER ' +
             ' FROM (' + ISNULL(@strBIGSQLINSTR, '') + ' FROM (' + ISNULL(@strSQLINSTRUCT, '') + ISNULL(@strWHERECLAUSE, '') + ') QRY ' + ISNULL(@strBIGWHERECLS, '') + ')' + ')' +
      'WHERE KAZ_ROW_NUMBER >= :l_start_gen_row_num ' +
      '  AND KAZ_ROW_NUMBER <= :l_end_gen_row_num ' +
      ' ';
    EXECUTE sp_executesql @sql, @l_start_gen_row_num, @l_end_gen_row_num;
  END; 
  GO


  IF OBJECT_ID('WSXML_SFG.SFGVISTACOMISION_GetComisionProducto', 'FN') IS NOT NULL
  DROP FUNCTION WSXML_SFG.SFGVISTACOMISION_GetComisionProducto;
GO

  --FUNCTION GetComisionProducto(P_LINEADENEGOCIO    NUMBER, p_CODPUNTODEVENTA NUMBER, p_CODPRODUCTO NUMBER, p_CODTIPOCOMISION_out OUT NUMBER) RETURN NUMBER  IS
  CREATE FUNCTION WSXML_SFG.SFGVISTACOMISION_GetComisionProducto(@P_LINEADENEGOCIO NUMERIC(22,0), @p_CODPUNTODEVENTA NUMERIC(22,0), @p_CODPRODUCTO NUMERIC(22,0)) RETURNS nvarchar(2000) AS
  begin RETURN 1; end
 go
 
 
  IF OBJECT_ID('WSXML_SFG.SFGVISTACOMISION_GetPlantillaAplicable', 'FN') IS NOT NULL
  DROP FUNCTION WSXML_SFG.SFGVISTACOMISION_GetPlantillaAplicable;
GO
  -- Devuelve la plantilla asociada o que coincida con las reglas para el punto de venta
  CREATE FUNCTION WSXML_SFG.SFGVISTACOMISION_GetPlantillaAplicable(@p_CODLINEADENEGOCIO NUMERIC(22,0), @p_CODPUNTODEVENTA NUMERIC(22,0)) RETURNS NUMERIC(22,0) AS
 BEGIN
    DECLARE @cPLANTILLAASIGNADA NUMERIC(22,0) = 0;
   

      SELECT @cPLANTILLAASIGNADA = CODPLANTILLAPRODUCTO FROM WSXML_SFG.PUNTODEVENTAPLANTILLA PDVP
      WHERE CODPUNTODEVENTA = @p_CODPUNTODEVENTA
        AND CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
        AND ACTIVE = 1;
    
	IF @@ROWCOUNT = 0 BEGIN
		--SFGTMPTRACE.TraceLog('OJO: No se encontro plantilla valida para el punto de venta ' + ISNULL(PUNTODEVENTA_CODIGO_F(@p_CODPUNTODEVENTA), '') + ', linea de negocio ' + ISNULL(LINEADENEGOCIO_NOMBRE_F(@p_CODLINEADENEGOCIO), ''));
		RETURN 0;
	END 
    RETURN @cPLANTILLAASIGNADA;
  
  END
GO