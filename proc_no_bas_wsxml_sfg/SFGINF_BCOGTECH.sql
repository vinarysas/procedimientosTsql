USE SFGPRODU;
--  DDL for Package Body SFGINF_BCOGTECH
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGINF_BCOGTECH */ 

  /* Obtiene valores de control para el archivo */
IF OBJECT_ID('WSXML_SFG.SFGINF_BCOGTECH_GetHeaderData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_BCOGTECH_GetHeaderData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_BCOGTECH_GetHeaderData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                          @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                          @pg_CADENA                NVARCHAR(2000),
                          @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                         @pg_PRODUCTO              NVARCHAR(2000)
                          ) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT COUNT(1)          AS REGISTROS,
             SUM(isnull(SALDOGTECH, 0))   AS TOTALSALDOGTECH
      FROM (SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(isnull(VLD.NUEVOSALDOENCONTRAGTECH, 0) -
                       isnull(VLD.NUEVOSALDOAFAVORGTECH, 0))     AS SALDOGTECH,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_IndependentReferenceNumber(VLD.NUMEROTERMINAL, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND VLD.CODLINEADENEGOCIO      = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
            GROUP BY CFP.FECHAEJECUCION, VLD.NUMEROTERMINAL

            UNION

            SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(VLD.NUEVOSALDOENCONTRAGTECH -
                       VLD.NUEVOSALDOAFAVORGTECH)     AS SALDOGTECH,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_GroupedReferenceNumber(VLD.CODIGOAGRUPACIONGTECH, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND VLD.CODLINEADENEGOCIO      = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
              -- Particularity
              AND VLD.CODTIPOPUNTODEVENTA IN (1, 2)
            GROUP BY CFP.FECHAEJECUCION, VLD.CODIGOAGRUPACIONGTECH) s
      WHERE SALDOGTECH > 0;
  END;
GO

  /* Ignorar Linea de Negocio */
 IF OBJECT_ID('WSXML_SFG.SFGINF_BCOGTECH_GetConsolidatedHeaderData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_BCOGTECH_GetConsolidatedHeaderData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_BCOGTECH_GetConsolidatedHeaderData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                                      @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                                      @pg_CADENA                NVARCHAR(2000),
                                      @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                                     @pg_PRODUCTO              NVARCHAR(2000)
                                      ) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT COUNT(1)          AS REGISTROS,
             round(SUM(isnull(SALDOGTECH, 0)),16)   AS TOTALSALDOGTECH
      FROM (SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(VLD.NUEVOSALDOENCONTRAGTECH -
                       VLD.NUEVOSALDOAFAVORGTECH)     AS SALDOGTECH,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_IndependentReferenceNumber(VLD.NUMEROTERMINAL, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND @p_CODLINEADENEGOCIO        = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
            GROUP BY CFP.FECHAEJECUCION, VLD.NUMEROTERMINAL

            UNION

            SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(VLD.NUEVOSALDOENCONTRAGTECH -
                       VLD.NUEVOSALDOAFAVORGTECH)     AS SALDOGTECH,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_GroupedReferenceNumber(VLD.CODIGOAGRUPACIONGTECH, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND @p_CODLINEADENEGOCIO        = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
              -- Particularity
              AND VLD.CODTIPOPUNTODEVENTA IN (1, 2)
            GROUP BY CFP.FECHAEJECUCION, VLD.CODIGOAGRUPACIONGTECH) s
      WHERE SALDOGTECH > 0;
  END;
  GO
  /* Valores a recaudar */
  IF OBJECT_ID('WSXML_SFG.SFGINF_BCOGTECH_GetReportData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_BCOGTECH_GetReportData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_BCOGTECH_GetReportData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                          @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                          @pg_CADENA                NVARCHAR(2000),
                          @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                         @pg_PRODUCTO              NVARCHAR(2000)
                          ) AS
  BEGIN
  SET NOCOUNT ON;
    -- Particularidad: Union entre Agrupaciones y Terminales con Saldo > 0
      SELECT isnull(SALDOGTECH, 0) as SALDOGTECH,
             REFERENCIA,
             CONVERT(DATETIME,FECHACICLO) + 5 AS FECHACORTE
      FROM (SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(isnull(VLD.NUEVOSALDOENCONTRAGTECH, 0) -
                       isnull(VLD.NUEVOSALDOAFAVORGTECH, 0))     AS SALDOGTECH,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_IndependentReferenceNumber(VLD.NUMEROTERMINAL, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND VLD.CODLINEADENEGOCIO      = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
            GROUP BY CFP.FECHAEJECUCION, VLD.NUMEROTERMINAL

            UNION

            SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(VLD.NUEVOSALDOENCONTRAGTECH -
                       VLD.NUEVOSALDOAFAVORGTECH)     AS SALDOGTECH,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_GroupedReferenceNumber(VLD.CODIGOAGRUPACIONGTECH, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND VLD.CODLINEADENEGOCIO      = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
              -- Particularity
              AND VLD.CODTIPOPUNTODEVENTA IN (1, 2)
            GROUP BY CFP.FECHAEJECUCION, VLD.CODIGOAGRUPACIONGTECH) s
      -- Particularity
      WHERE SALDOGTECH > 0
      ORDER BY CAST(REFERENCIA AS NUMERIC(38,0));
  END;
GO

  /* Ignorar Linea de Negocio */
  IF OBJECT_ID('WSXML_SFG.SFGINF_BCOGTECH_GetConsolidatedReportData', 'P') IS NOT NULL

  DROP PROCEDURE WSXML_SFG.SFGINF_BCOGTECH_GetConsolidatedReportData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_BCOGTECH_GetConsolidatedReportData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                                      @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                                      @pg_CADENA                NVARCHAR(2000),
                                      @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                                     @pg_PRODUCTO              NVARCHAR(2000)
                                      ) AS
  BEGIN
  SET NOCOUNT ON;
    -- Particularidad: Union entre Agrupaciones y Terminales con Saldo > 0
      SELECT round(isnull(SALDOGTECH, 0),19) as SALDOGTECH,
             REFERENCIA,
             CONVERT(DATETIME,FECHACICLO) + 5 AS FECHACORTE
      FROM (SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(isnull(VLD.NUEVOSALDOENCONTRAGTECH, 0) -
                       isnull(VLD.NUEVOSALDOAFAVORGTECH, 0))     AS SALDOGTECH,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_IndependentReferenceNumber(VLD.NUMEROTERMINAL, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND @p_CODLINEADENEGOCIO        = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
            GROUP BY CFP.FECHAEJECUCION, VLD.NUMEROTERMINAL

            UNION

            SELECT CFP.FECHAEJECUCION                 AS FECHACICLO,
                   SUM(VLD.NUEVOSALDOENCONTRAGTECH -
                       VLD.NUEVOSALDOAFAVORGTECH)     AS SALDOGTECH,
                   WSXML_SFG.SFGMAESTROFACTURACIONCOMPCONSI_GroupedReferenceNumber(VLD.CODIGOAGRUPACIONGTECH, CFP.FECHAEJECUCION)
                                                      AS REFERENCIA
            FROM WSXML_SFG.VW_SHOW_LDNFACTURACION VLD
            INNER JOIN WSXML_SFG.CICLOFACTURACIONPDV CFP ON (CFP.ID_CICLOFACTURACIONPDV = VLD.ID_CICLOFACTURACIONPDV)
            WHERE VLD.ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
              AND @p_CODLINEADENEGOCIO        = @p_CODLINEADENEGOCIO
              AND @pg_ALIADOESTRATEGICO       = @pg_ALIADOESTRATEGICO
              AND @pg_PRODUCTO                = @pg_PRODUCTO
              -- Filters
              AND VLD.CODAGRUPACIONPUNTODEVENTA = CASE WHEN @pg_CADENA = '-1' THEN VLD.CODAGRUPACIONPUNTODEVENTA ELSE WSXML_SFG.AGRUPACION_F(@pg_CADENA) END
              -- Particularity
              AND VLD.CODTIPOPUNTODEVENTA IN (1, 2)
            GROUP BY CFP.FECHAEJECUCION, VLD.CODIGOAGRUPACIONGTECH) s
      -- Particularity
      WHERE SALDOGTECH > 0
      ORDER BY CAST(REFERENCIA AS NUMERIC(38,0));
  END;


GO


