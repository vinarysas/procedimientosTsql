USE SFGPRODU;
--  DDL for Package Body SFGPUNTODEVENTAFACTURACION
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGPUNTODEVENTAFACTURACION */ 

  IF OBJECT_ID('WSXML_SFG.SFGPUNTODEVENTAFACTURACION_AddRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_AddRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_AddRecord(@p_CODPUNTODEVENTA              NUMERIC(22,0),
                      @p_CODFACTURACIONLINEADENEGOCIO NUMERIC(22,0),
                      @p_CODUSUARIOMODIFICACION       NUMERIC(22,0),
                      @p_ID_PDVFACTURACION_out        NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    INSERT INTO WSXML_SFG.PUNTODEVENTAFACTURACION (
                                         CODPUNTODEVENTA,
                                         CODFACTURACIONLINEADENEGOCIO,
                                         CODUSUARIOMODIFICACION)
    VALUES (
            @p_CODPUNTODEVENTA,
            @p_CODFACTURACIONLINEADENEGOCIO,
            @p_CODUSUARIOMODIFICACION);
    SET @p_ID_PDVFACTURACION_out = SCOPE_IDENTITY();
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGPUNTODEVENTAFACTURACION_UpdateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_UpdateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_UpdateRecord(@pk_ID_PDVFACTURACION           NUMERIC(22,0),
                         @p_CODPUNTODEVENTA              NUMERIC(22,0),
                         @p_CODFACTURACIONLINEADENEGOCIO NUMERIC(22,0),
                         @p_CODUSUARIOMODIFICACION       NUMERIC(22,0),
                         @p_ACTIVE                       NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.PUNTODEVENTAFACTURACION
       SET CODPUNTODEVENTA              = @p_CODPUNTODEVENTA,
           CODFACTURACIONLINEADENEGOCIO = @p_CODFACTURACIONLINEADENEGOCIO,
           CODUSUARIOMODIFICACION       = @p_CODUSUARIOMODIFICACION,
           FECHAHORAMODIFICACION        = GETDATE(),
           ACTIVE                       = @p_ACTIVE
     WHERE ID_PUNTODEVENTAFACTURACION = @pk_ID_PDVFACTURACION;

    IF @@rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @@rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGPUNTODEVENTAFACTURACION_DeactivateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_DeactivateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_DeactivateRecord(@pk_ID_PDVFACTURACION NUMERIC(22,0), @p_CODUSUARIOMODIFICACION NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.PUNTODEVENTAFACTURACION
       SET CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION,
           FECHAHORAMODIFICACION  = GETDATE(),
           ACTIVE                 = 0
     WHERE ID_PUNTODEVENTAFACTURACION = @pk_ID_PDVFACTURACION;

    IF @@rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @@rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
  END;
GO


IF OBJECT_ID('WSXML_SFG.SFGPUNTODEVENTAFACTURACION_SetFacturacionContext', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_SetFacturacionContext;
GO

CREATE     PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_SetFacturacionContext(@pk_ID_PDVFACTURACION     NUMERIC(22,0),
                                  @p_CODPUNTODEVENTA        NUMERIC(22,0),
                                  @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                                  @p_CODPERIODICIDAD        NUMERIC(22,0),
                                  @p_FECHA                  DATETIME,
                                  @p_CODUSUARIOMODIFICACION NUMERIC(22,0),
                                  @p_ID_PDVFACTURACION_out  NUMERIC(22,0) OUT) AS
 BEGIN
    DECLARE @cCODFACTURACIONLINEADENEGOCIO NUMERIC(22,0);
   
  SET NOCOUNT ON;
    SET @p_ID_PDVFACTURACION_out = 0;
    BEGIN
      SELECT @cCODFACTURACIONLINEADENEGOCIO = ID_FACTURACIONLINEADENEGOCIO
        FROM WSXML_SFG.FACTURACIONLINEADENEGOCIO
       WHERE CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
         AND CODPERIODICIDAD = @p_CODPERIODICIDAD
         AND CONVERT(DATETIME, CONVERT(DATE,FECHA)) = CONVERT(DATETIME, CONVERT(DATE,@p_FECHA));
		 /*
    EXCEPTION WHEN OTHERS THEN
      SFGFACTURACIONLINEADENEGOCIO.AddRecord(@p_CODLINEADENEGOCIO,
                                             @p_CODPERIODICIDAD,
                                             @p_FECHA,
                                             @p_CODUSUARIOMODIFICACION,
                                             @cCODFACTURACIONLINEADENEGOCIO);
         */

		 IF(@@rowcount = 0)
		  BEGIN
		     EXEC WSXML_SFG.SFGFACTURACIONLINEADENEGOCIO$AddRecord @p_CODLINEADENEGOCIO,
                                             @p_CODPERIODICIDAD,
                                             @p_FECHA,
                                             @p_CODUSUARIOMODIFICACION,
                                             @cCODFACTURACIONLINEADENEGOCIO;
          END

    END;

    IF @pk_ID_PDVFACTURACION > 0 BEGIN
        DECLARE @thCODFACTURACIONLINEADENEGOCIO NUMERIC(22,0);
      BEGIN
        SELECT @thCODFACTURACIONLINEADENEGOCIO = CODFACTURACIONLINEADENEGOCIO
          FROM WSXML_SFG.PUNTODEVENTAFACTURACION
         WHERE ID_PUNTODEVENTAFACTURACION = @pk_ID_PDVFACTURACION
           AND CODPUNTODEVENTA = @p_CODPUNTODEVENTA;
        IF @thCODFACTURACIONLINEADENEGOCIO <> @cCODFACTURACIONLINEADENEGOCIO BEGIN
        /*   DeactivateRecord(@pk_ID_PDVFACTURACION, @p_CODUSUARIOMODIFICACION);
          AddRecord(@p_CODPUNTODEVENTA,
                    @cCODFACTURACIONLINEADENEGOCIO,
                    @p_CODUSUARIOMODIFICACION,
                    @p_ID_PDVFACTURACION_out);
		*/
		  EXEC WSXML_SFG.SFGPUNTODEVENTAFACTURACION_DeactivateRecord @pk_ID_PDVFACTURACION, @p_CODUSUARIOMODIFICACION;
        END 
      /*
	  EXCEPTION WHEN OTHERS THEN
        AddRecord(@p_CODPUNTODEVENTA,
                  @cCODFACTURACIONLINEADENEGOCIO,
                  @p_CODUSUARIOMODIFICACION,
                  @p_ID_PDVFACTURACION_out);
      */
	  IF(@@rowcount = 0)
		  BEGIN
		     EXEC WSXML_SFG.SFGPUNTODEVENTAFACTURACION_AddRecord @p_CODPUNTODEVENTA,
                  @cCODFACTURACIONLINEADENEGOCIO,
                  @p_CODUSUARIOMODIFICACION,
                  @p_ID_PDVFACTURACION_out;
          END

      END;

    END
    ELSE BEGIN
      EXEC WSXML_SFG.SFGPUNTODEVENTAFACTURACION_AddRecord @p_CODPUNTODEVENTA,
                @cCODFACTURACIONLINEADENEGOCIO,
                @p_CODUSUARIOMODIFICACION,
                @p_ID_PDVFACTURACION_out;
    END 
  END;
GO


  IF OBJECT_ID('WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetRecord;
GO
CREATE     PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetRecord(@pk_ID_PDVFACTURACION NUMERIC(22,0)) AS
 BEGIN
    DECLARE @l_count INTEGER;
   
  SET NOCOUNT ON;
    SELECT @l_count = COUNT(*) FROM WSXML_SFG.PUNTODEVENTAFACTURACION
     WHERE ID_PUNTODEVENTAFACTURACION = @pk_ID_PDVFACTURACION;

    IF @l_count = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @l_count > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 

      SELECT ID_PUNTODEVENTAFACTURACION,
             CODPUNTODEVENTA,
             CODFACTURACIONLINEADENEGOCIO,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.PUNTODEVENTAFACTURACION
       WHERE ID_PUNTODEVENTAFACTURACION = @pk_ID_PDVFACTURACION;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetList', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetList;
GO
CREATE     PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetList(@p_active NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT ID_PUNTODEVENTAFACTURACION,
             CODPUNTODEVENTA,
             CODFACTURACIONLINEADENEGOCIO,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.PUNTODEVENTAFACTURACION
       WHERE ACTIVE = CASE WHEN @p_active = -1 THEN ACTIVE ELSE @p_active END;

  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetListByPuntoDeVenta', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetListByPuntoDeVenta;
GO
CREATE     PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetListByPuntoDeVenta(@p_ACTIVE NUMERIC(22,0), @p_CODPUNTODEVENTA NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT PF.ID_PUNTODEVENTAFACTURACION,
             LDN.ID_LINEADENEGOCIO,
             LDN.NOMLINEADENEGOCIO,
             FL.CODPERIODICIDAD,
             FL.FECHA
      FROM WSXML_SFG.PUNTODEVENTA PDV
      LEFT OUTER JOIN WSXML_SFG.PUNTODEVENTAFACTURACION PF
        ON (PF.CODPUNTODEVENTA = PDV.ID_PUNTODEVENTA
        AND PF.ACTIVE = 1)
      LEFT OUTER JOIN WSXML_SFG.FACTURACIONLINEADENEGOCIO FL
        ON (FL.ID_FACTURACIONLINEADENEGOCIO = PF.CODFACTURACIONLINEADENEGOCIO
        AND FL.ACTIVE = 1)
      LEFT OUTER JOIN WSXML_SFG.LINEADENEGOCIO LDN
        ON (FL.CODLINEADENEGOCIO = LDN.ID_LINEADENEGOCIO
        AND LDN.ACTIVE = 1)
      WHERE PDV.ID_PUNTODEVENTA = @p_CODPUNTODEVENTA
        AND PF.ACTIVE = CASE WHEN @p_ACTIVE = -1 THEN PF.ACTIVE ELSE @p_ACTIVE END;

  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetListPorDefecto', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetListPorDefecto;
GO
CREATE     PROCEDURE WSXML_SFG.SFGPUNTODEVENTAFACTURACION_GetListPorDefecto(@p_ACTIVE NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT 0 ID_PUNTODEVENTAFACTURACION,
             LDN.ID_LINEADENEGOCIO,
             LDN.NOMLINEADENEGOCIO,
             FL.CODPERIODICIDAD,
             FL.FECHA
      FROM WSXML_SFG.LINEADENEGOCIO LDN
      LEFT OUTER JOIN WSXML_SFG.FACTURACIONLINEADENEGOCIO FL
        ON (FL.CODLINEADENEGOCIO = LDN.ID_LINEADENEGOCIO)
      WHERE LDN.ACTIVE = 1
        AND FL.DEFECTO = 1
        AND FL.ACTIVE = CASE WHEN @p_ACTIVE = -1 THEN FL.ACTIVE ELSE @p_ACTIVE END;

  END;
GO






