USE SFGPRODU;
--  DDL for Package Body SFGINF_PARTICIPACIONVENTAS
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGINF_PARTICIPACIONVENTAS */ 

  IF OBJECT_ID('WSXML_SFG.SFGINF_PARTICIPACIONVENTAS_GetParticipacion', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_PARTICIPACIONVENTAS_GetParticipacion;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_PARTICIPACIONVENTAS_GetParticipacion(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                             @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                             @pg_CADENA                NVARCHAR(2000),
                             @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                            @pg_PRODUCTO              NVARCHAR(2000)) AS
 BEGIN
    DECLARE @sFECHACCLO DATETIME;
    DECLARE @sFECHAFRST DATETIME;
    DECLARE @sFECHALAST DATETIME;
    DECLARE @vTOTALMIXV FLOAT = 0;
   
  SET NOCOUNT ON;
    SELECT @sFECHACCLO = FECHAEJECUCION FROM WSXML_SFG.CICLOFACTURACIONPDV WHERE ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV;
    EXEC WSXML_SFG.SFG_PACKAGE_GetMonthRange @sFECHACCLO, @sFECHAFRST OUT, @sFECHALAST OUT
    -- Get total amount for % participation for service
    SELECT @vTOTALMIXV = SUM(CASE WHEN CODTIPOREGISTRO = 1 THEN NUMTRANSACCIONES
                    WHEN CODTIPOREGISTRO = 2 THEN NUMTRANSACCIONES * (-1) ELSE 0 END)
    FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
    INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
    INNER JOIN PRODUCTO            PRD ON (PRD.ID_PRODUCTO              = REG.CODPRODUCTO)
    INNER JOIN TIPOPRODUCTO        TPR ON (TPR.ID_TIPOPRODUCTO          = PRD.CODTIPOPRODUCTO)
    WHERE CTR.FECHAARCHIVO BETWEEN @sFECHAFRST AND @sFECHALAST
      AND CTR.TIPOARCHIVO       = @p_CODLINEADENEGOCIO;
    IF @vTOTALMIXV = 0 BEGIN
      RAISERROR('-20001 No se puede calcular la participacion sobre servicio porque no hay transacciones en el periodo', 16, 1);
    END 
    -- Open cursor
      SELECT AES.ID_ALIADOESTRATEGICO                       AS ID_ALIADOESTRATEGICO,
             AES.NOMALIADOESTRATEGICO                       AS NOMALIADOESTRATEGICO,
             TPR.ID_TIPOPRODUCTO                            AS ID_TIPOPRODUCTO,
             TPR.NOMTIPOPRODUCTO                            AS NOMTIPOPRODUCTO,
             CASE WHEN AES.ID_ALIADOESTRATEGICO = WSXML_SFG.ALIADOFROMNAME_F('CITIBANK')
                  THEN 'CITIBANK'
                  ELSE CONVERT(VARCHAR, AGP.NOMAGRUPACIONPRODUCTO) END AS NOMAGRUPACIONPRODUCTO,
             SUM(NumIngresos - NumAnulaciones)              AS NUMTRANSACCIONES,
             ISNULL((SUM(NumIngresos - NumAnulaciones) * 100 / @vTOTALMIXV), '') + ' %' AS PRTVTRANSACCIONES,
             SUM(IngresosBrutosNoRedondeo)                  AS INGRESOSBRUTOS,
             SUM(Comision)                                  AS COMISION,
             SUM(RevenueTotal)                              AS REVENUETOTAL
      FROM WSXML_SFG.VW_REVENUE_DIARIO PRF
      INNER JOIN WSXML_SFG.PRODUCTO           PRD ON (PRD.ID_PRODUCTO           = PRF.CODPRODUCTO)
      INNER JOIN WSXML_SFG.TIPOPRODUCTO       TPR ON (TPR.ID_TIPOPRODUCTO       = PRD.CODTIPOPRODUCTO)
      INNER JOIN WSXML_SFG.AGRUPACIONPRODUCTO AGP ON (AGP.ID_AGRUPACIONPRODUCTO = PRD.CODAGRUPACIONPRODUCTO)
      INNER JOIN WSXML_SFG.ALIADOESTRATEGICO  AES ON (AES.ID_ALIADOESTRATEGICO  = PRD.CODALIADOESTRATEGICO)
      WHERE PRF.FECHAARCHIVO BETWEEN @sFECHAFRST AND @sFECHALAST
        AND PRF.TIPOARCHIVO = @p_CODLINEADENEGOCIO
      GROUP BY AES.ID_ALIADOESTRATEGICO,
               AES.NOMALIADOESTRATEGICO,
               TPR.ID_TIPOPRODUCTO,
               TPR.NOMTIPOPRODUCTO,
               CASE WHEN AES.ID_ALIADOESTRATEGICO = WSXML_SFG.ALIADOFROMNAME_F('CITIBANK')
                    THEN 'CITIBANK'
                    ELSE CONVERT(VARCHAR, AGP.NOMAGRUPACIONPRODUCTO) END
      ORDER BY AES.ID_ALIADOESTRATEGICO, TPR.ID_TIPOPRODUCTO;
  END;

GO

