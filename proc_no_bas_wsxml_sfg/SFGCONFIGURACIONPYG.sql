USE SFGPRODU
--  DDL for Package Body SFGCONFIGURACIONPYG
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGCONFIGURACIONPYG */ 

  IF OBJECT_ID('WSXML_SFG.SFGCONFIGURACIONPYG_SetConfiguracionCorporativa', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONFIGURACIONPYG_SetConfiguracionCorporativa;
GO

CREATE     PROCEDURE WSXML_SFG.SFGCONFIGURACIONPYG_SetConfiguracionCorporativa(@p_CODSERVICIO                 NUMERIC(22,0),
                                        @p_CODTIPOCONTRATOPRODUCTO     NUMERIC(22,0),
                                        @p_CODTIPOFIGURAPYGINGRESOCORP NUMERIC(22,0),
                                        @p_CODTIPOFIGURAPYGEGRESOCORP  NUMERIC(22,0),
                                        @p_CODUSUARIOMODIFICACION      NUMERIC(22,0),
                                        @p_ID_CONFIGURACIONPYG_out     NUMERIC(22,0) OUT) AS
BEGIN
	SET NOCOUNT ON;
	
    SELECT @p_ID_CONFIGURACIONPYG_out = ID_CONFIGURACIONPYG 
	FROM WSXML_SFG.CONFIGURACIONPYG 
	WHERE CODSERVICIO = @p_CODSERVICIO 
		AND CODTIPOCONTRATOPRODUCTO = @p_CODTIPOCONTRATOPRODUCTO;
   
	IF @@ROWCOUNT = 0 
	BEGIN
		INSERT INTO WSXML_SFG.CONFIGURACIONPYG (
									  CODSERVICIO,
									  CODTIPOCONTRATOPRODUCTO,
									  CODTIPOFIGURAPYGINGRESOCORP,
									  CODTIPOFIGURAPYGEGRESOCORP,
									  CODUSUARIOMODIFICACION)
		VALUES (
				@p_CODSERVICIO,
				@p_CODTIPOCONTRATOPRODUCTO,
				@p_CODTIPOFIGURAPYGINGRESOCORP,
				@p_CODTIPOFIGURAPYGEGRESOCORP,
				@p_CODUSUARIOMODIFICACION);
		SET @p_ID_CONFIGURACIONPYG_out = SCOPE_IDENTITY();
	END ELSE BEGIN
		UPDATE WSXML_SFG.CONFIGURACIONPYG SET CODTIPOFIGURAPYGINGRESOCORP = @p_CODTIPOFIGURAPYGINGRESOCORP,
			CODTIPOFIGURAPYGEGRESOCORP  = @p_CODTIPOFIGURAPYGEGRESOCORP,
			FECHAHORAMODIFICACION       = GETDATE(),
			CODUSUARIOMODIFICACION      = @p_CODUSUARIOMODIFICACION
		WHERE ID_CONFIGURACIONPYG = @p_ID_CONFIGURACIONPYG_out;
	END
END;
GO

IF OBJECT_ID('WSXML_SFG.SFGCONFIGURACIONPYG_SetAppendConfiguracionLocal', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONFIGURACIONPYG_SetAppendConfiguracionLocal;
GO

CREATE     PROCEDURE WSXML_SFG.SFGCONFIGURACIONPYG_SetAppendConfiguracionLocal(@p_CODSERVICIO                  NUMERIC(22,0),
                                        @p_CODTIPOCONTRATOPRODUCTO      NUMERIC(22,0),
                                        @p_CODTIPOCONTRATOPDV           NUMERIC(22,0),
                                        @p_CODTIPOFIGURAPYGINGRESO      NUMERIC(22,0),
                                        @p_CODTIPOFIGURAPYGEGRESO       NUMERIC(22,0),
                                        @p_CODUSUARIOMODIFICACION       NUMERIC(22,0),
                                        @p_ID_CONFIGURACIONPYGLOCAL_out NUMERIC(22,0) OUT) AS
 BEGIN
    DECLARE @cCODCONFIGURACIONPYG NUMERIC(22,0);
   
  SET NOCOUNT ON;
    SELECT @cCODCONFIGURACIONPYG = ID_CONFIGURACIONPYG FROM WSXML_SFG.CONFIGURACIONPYG WHERE CODSERVICIO = @p_CODSERVICIO AND CODTIPOCONTRATOPRODUCTO = @p_CODTIPOCONTRATOPRODUCTO;
	IF @@ROWCOUNT = 0 BEGIN
		RAISERROR('-20090 No es posible asignar una configuracion local si no existe una configuracion corporativa', 16, 1);
		RETURN 0;
	END
    BEGIN
      SELECT @p_ID_CONFIGURACIONPYGLOCAL_out = ID_CONFIGURACIONPYGLOCAL 
	  FROM WSXML_SFG.CONFIGURACIONPYGLOCAL 
	  WHERE CODCONFIGURACIONPYG = @cCODCONFIGURACIONPYG 
		AND CODTIPOCONTRATOPDV = @p_CODTIPOCONTRATOPDV;
      
	  IF @@ROWCOUNT = 0
	  BEGIN
		  INSERT INTO WSXML_SFG.CONFIGURACIONPYGLOCAL (
											 CODCONFIGURACIONPYG,
											 CODTIPOCONTRATOPDV,
											 CODTIPOFIGURAPYGINGRESO,
											 CODTIPOFIGURAPYGEGRESO,
											 CODUSUARIOMODIFICACION)
		  VALUES (
				  @cCODCONFIGURACIONPYG,
				  @p_CODTIPOCONTRATOPDV,
				  @p_CODTIPOFIGURAPYGINGRESO,
				  @p_CODTIPOFIGURAPYGEGRESO,
				  @p_CODUSUARIOMODIFICACION);
		  SET @p_ID_CONFIGURACIONPYGLOCAL_out = SCOPE_IDENTITY();
	  END ELSE BEGIN
		UPDATE WSXML_SFG.CONFIGURACIONPYGLOCAL SET CODTIPOFIGURAPYGINGRESO = @p_CODTIPOFIGURAPYGINGRESO,
                                       CODTIPOFIGURAPYGEGRESO  = @p_CODTIPOFIGURAPYGEGRESO,
                                       FECHAHORAMODIFICACION   = GETDATE(),
                                       CODUSUARIOMODIFICACION  = @p_CODUSUARIOMODIFICACION
		WHERE ID_CONFIGURACIONPYGLOCAL = @p_ID_CONFIGURACIONPYGLOCAL_out;
	  END
    END;


	
END;
GO

IF OBJECT_ID('WSXML_SFG.SFGCONFIGURACIONPYG_GetConfiguracionRegistro', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONFIGURACIONPYG_GetConfiguracionRegistro;
GO

CREATE     PROCEDURE WSXML_SFG.SFGCONFIGURACIONPYG_GetConfiguracionRegistro(
									 @configuracionpyglist        WSXML_SFG.CONFIGPYGREGISTRY READONLY,
                                     @p_CODSERVICIO               NUMERIC(22,0),
                                     @p_CODTIPOCONTRATOPRODUCTO   NUMERIC(22,0),
                                     @p_CODTIPOCONTRATOPDV        NUMERIC(22,0),
                                     @p_CONFIGURACIONINGRESOCORP  NUMERIC(22,0) OUT,
                                     @p_CONFIGURACIONEGRESOCORP   NUMERIC(22,0) OUT,
                                     @p_CONFIGURACIONINGRESOLOCAL NUMERIC(22,0) OUT,
                                     @p_CONFIGURACIONEGRESOLOCAL  NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    SELECT @p_CONFIGURACIONINGRESOCORP = CONFINGRESOCORPORATIVO, @p_CONFIGURACIONEGRESOCORP = CONFEGRESOCORPORATIVO, @p_CONFIGURACIONINGRESOLOCAL = CONFINGRESOLOCAL, @p_CONFIGURACIONEGRESOLOCAL = CONFEGRESOLOCAL
      FROM @configuracionpyglist
     WHERE CODSERVICIO             = @p_CODSERVICIO
       AND CODTIPOCONTRATOPRODUCTO = @p_CODTIPOCONTRATOPRODUCTO
       AND CODTIPOCONTRATOPDV      = @p_CODTIPOCONTRATOPDV;
	
	IF @@ROWCOUNT = 0
		RAISERROR('-20080 No existe configuracion de ingresos y egresos corporativos para los parametros ingresados', 16, 1);
  END;
GO


IF EXISTS (
    SELECT * FROM sys.objects WHERE OBJECT_NAME(object_id) = N'SFGCONFIGURACIONPYG_GetConfiguracionCache'
    AND type IN (N'FN', N'IF', N'TF')
)
    DROP FUNCTION WSXML_SFG.SFGCONFIGURACIONPYG_GetConfiguracionCache
GO

CREATE     FUNCTION WSXML_SFG.SFGCONFIGURACIONPYG_GetConfiguracionCache() 
	RETURNS @configuracionpyglist TABLE (
	CODSERVICIO NUMERIC(38,0),
	CODTIPOCONTRATOPRODUCTO NUMERIC(38,0),
	CODTIPOCONTRATOPDV NUMERIC(38,0),
	CONFINGRESOCORPORATIVO NUMERIC(38,0),
	CONFEGRESOCORPORATIVO NUMERIC(38,0),
	CONFINGRESOLOCAL NUMERIC(38,0),
	CONFEGRESOLOCAL NUMERIC(38,0)
	) AS
 BEGIN
    
    INSERT INTO @configuracionpyglist
    SELECT CODSERVICIO, 
		CODTIPOCONTRATOPRODUCTO, 
		ID_TIPOCONTRATOPDV, 
		CODTIPOFIGURAPYGINGRESOCORP, 
		CODTIPOFIGURAPYGEGRESOCORP, 
		ISNULL(CODTIPOFIGURAPYGINGRESO, 0), 
		ISNULL(CODTIPOFIGURAPYGEGRESO, 0)
    FROM WSXML_SFG.CONFIGURACIONPYG CNF
    INNER JOIN WSXML_SFG.TIPOCONTRATOPDV TCP ON (1 = 1)
    LEFT OUTER JOIN WSXML_SFG.CONFIGURACIONPYGLOCAL CNL ON (CNL.CODCONFIGURACIONPYG = CNF.ID_CONFIGURACIONPYG
                                              AND CNL.CODTIPOCONTRATOPDV  = TCP.ID_TIPOCONTRATOPDV);
    RETURN
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGCONFIGURACIONPYG_GetDescuentoRegistro', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGCONFIGURACIONPYG_GetDescuentoRegistro;
GO

CREATE     PROCEDURE WSXML_SFG.SFGCONFIGURACIONPYG_GetDescuentoRegistro(
								 @configuraciondescuento    WSXML_SFG.CONFIGPYGDISCOUNT READONLY,
                                 @p_CODSERVICIO             NUMERIC(22,0),
                                 @p_CODTIPOCONTRATOPRODUCTO NUMERIC(22,0),
                                 @p_CODTIPOCONTRATOPDV      NUMERIC(22,0),
                                 @p_CODCOSTOCALCULADO       NUMERIC(22,0),
                                 @p_DESCUENTOINGRESOLOCAL   INT OUT,
                                 @p_DESCUENTOEGRESOLOCAL    INT OUT) AS
  BEGIN
  SET NOCOUNT ON;
    SELECT @p_DESCUENTOINGRESOLOCAL = CONFINGRESOLOCAL, @p_DESCUENTOEGRESOLOCAL = CONFEGRESOLOCAL
    FROM @configuraciondescuento
    WHERE CODSERVICIO = @p_CODSERVICIO
		AND CODTIPOCONTRATOPRODUCTO = @p_CODTIPOCONTRATOPRODUCTO
		AND CODTIPOCONTRATOPDV = @p_CODTIPOCONTRATOPDV
		AND CODCOSTOCALCULADO = @p_CODCOSTOCALCULADO;

	IF @@ROWCOUNT = 0
		RAISERROR('-20080 No existe configuracion de descuentos para la combinacion', 16, 1);
  END;
GO

IF EXISTS (
    SELECT * FROM sys.objects WHERE OBJECT_NAME(object_id) = N'SFGCONFIGURACIONPYG_GetDescuentoCache'
    AND type IN (N'FN', N'IF', N'TF')
)
    DROP FUNCTION WSXML_SFG.SFGCONFIGURACIONPYG_GetDescuentoCache
GO


CREATE     FUNCTION WSXML_SFG.SFGCONFIGURACIONPYG_GetDescuentoCache() 
RETURNS @configuraciondescuento TABLE(
    CODSERVICIO             NUMERIC(38,0),
    CODTIPOCONTRATOPRODUCTO NUMERIC(38,0),
    CODTIPOCONTRATOPDV      NUMERIC(38,0),
    CODCOSTOCALCULADO       NUMERIC(38,0),
    DESCUENTOINGRESOLOCAL   NUMERIC(38,0),
    DESCUENTOEGRESOLOCAL    NUMERIC(38,0)
) AS
 BEGIN
   
   
    INSERT INTO @configuraciondescuento
    SELECT CNF.CODSERVICIO, CODTIPOCONTRATOPRODUCTO, ID_TIPOCONTRATOPDV, ID_COSTOCALCULADO, ISNULL(CPC.DESCUENTOINGRESOLOCAL, 0), ISNULL(CPC.DESCUENTOEGRESOLOCAL, 0)
    FROM WSXML_SFG.CONFIGURACIONPYG CNF
		INNER JOIN WSXML_SFG.TIPOCONTRATOPDV TCP ON (1 = 1)
		INNER JOIN WSXML_SFG.COSTOCALCULADO  CST ON (1 = 1)
		LEFT OUTER JOIN WSXML_SFG.CONFIGURACIONPYGLOCAL      CNL ON (CNL.CODCONFIGURACIONPYG      = CNF.ID_CONFIGURACIONPYG
													   AND CNL.CODTIPOCONTRATOPDV       = TCP.ID_TIPOCONTRATOPDV)
		LEFT OUTER JOIN WSXML_SFG.CONFIGURACIONPYGLOCALCOSTO CPC ON (CPC.CODCONFIGURACIONPYGLOCAL = CNL.ID_CONFIGURACIONPYGLOCAL
													   AND CPC.CODCOSTOCALCULADO        = CST.ID_COSTOCALCULADO);
    RETURN
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGCONFIGURACIONPYG_TranslateFigure', 'FN') IS NOT NULL
  DROP FUNCTION WSXML_SFG.SFGCONFIGURACIONPYG_TranslateFigure;
GO

CREATE     FUNCTION WSXML_SFG.SFGCONFIGURACIONPYG_TranslateFigure(
						   @p_CODTIPOFIGURAPYG      NUMERIC(22,0),
                           @p_CODTIPOCONTRATOPDV    NUMERIC(22,0),
                           @p_CANTIDADVENTA         NUMERIC(22,0),
                           @p_VALORVENTA            FLOAT,
                           @p_VALORINGRESOPDV       FLOAT,
                           @p_VALORIVAINGRESOPDV    FLOAT,
                           @p_REVENUECALCULADO      FLOAT,
                           @p_VALORCOMISIONESTANDAR FLOAT,
                           @p_INGRESOCORPORATIVO    FLOAT,
                           @p_EGRESOCORPORATIVO     FLOAT,
                           @p_INGRESOLOCAL          FLOAT,
                           @p_EGRESOLOCAL           FLOAT,
                           @p_VENTASSINAJUSTES      FLOAT,
                           @p_DESCUENTOS            FLOAT) RETURNS FLOAT AS
 BEGIN
    DECLARE @p_VALORFIGURA_out FLOAT = 0;
    DECLARE @xIDENTIFICADOR    NUMERIC(22,0) = ROUND(@p_CODTIPOFIGURAPYG, 0);
	DECLARE @msg VARCHAR(2000)
	
	
	DECLARE @p_ADMINISTRACION SMALLINT = 1 ,@p_ARRIENDO SMALLINT = 2,@p_COLABORACION SMALLINT = 3, @p_CONCESION SMALLINT = 5
	--EXEC  WSXML_SFG.SFGTIPOCONTRATOPDV_CONSTANT  @p_ADMINISTRACION OUT, @p_ARRIENDO  OUT, @p_COLABORACION  OUT, @p_CONCESION   OUT
   
    IF @xIDENTIFICADOR = 1 BEGIN     -- 1. Revenue Bruto
      SET @p_VALORFIGURA_out = @p_REVENUECALCULADO;
    END
    ELSE IF @xIDENTIFICADOR = 2 BEGIN  -- 2. Venta Total
      SET @p_VALORFIGURA_out = @p_VALORVENTA;
    END
    ELSE IF @xIDENTIFICADOR = 3 BEGIN  -- 3. Venta Menos Ingreso PDV
      SET @p_VALORFIGURA_out = @p_VALORVENTA - @p_VALORINGRESOPDV;
    END
    ELSE IF @xIDENTIFICADOR = 4 BEGIN  -- 4. Venta Menos Revenue
      SET @p_VALORFIGURA_out = @p_VALORVENTA - @p_REVENUECALCULADO;
    END
    ELSE IF @xIDENTIFICADOR = 5 BEGIN  -- 5. Revenue Menos Ingreso PDV
      SET @p_VALORFIGURA_out = @p_REVENUECALCULADO - @p_VALORINGRESOPDV;
    END
    ELSE IF @xIDENTIFICADOR = 6 BEGIN  -- 6. Cantidad Venta
      SET @p_VALORFIGURA_out = @p_CANTIDADVENTA;
    END
    ELSE IF @xIDENTIFICADOR = 7 BEGIN  -- 7. Ingreso Corporativo
      SET @p_VALORFIGURA_out = @p_INGRESOCORPORATIVO;
    END
    ELSE IF @xIDENTIFICADOR = 8 BEGIN  -- 8. Egreso Corporativo
      SET @p_VALORFIGURA_out = @p_EGRESOCORPORATIVO;
    END
    ELSE IF @xIDENTIFICADOR = 9 BEGIN  -- 9. Ingreso Local
      SET @p_VALORFIGURA_out = @p_INGRESOLOCAL;
    END
    ELSE IF @xIDENTIFICADOR = 10 BEGIN -- 10. Egreso Local
      SET @p_VALORFIGURA_out = @p_EGRESOLOCAL;
    END
    ELSE IF @xIDENTIFICADOR = 11 BEGIN -- 11. Ingreso PDV
      SET @p_VALORFIGURA_out = @p_VALORINGRESOPDV;
    END
    ELSE IF @xIDENTIFICADOR = 12 BEGIN -- 12. Cero
      SET @p_VALORFIGURA_out = 0;
    END
    ELSE IF @xIDENTIFICADOR = 13 BEGIN -- 13. Revenue Bruto Mas Ingreso PDV
      SET @p_VALORFIGURA_out = @p_REVENUECALCULADO + @p_VALORINGRESOPDV;
    END
    ELSE IF @xIDENTIFICADOR = 14 BEGIN -- 14. Venta Menos Revenue Menos Ingreso PDV
      SET @p_VALORFIGURA_out = @p_VALORVENTA - @p_REVENUECALCULADO - @p_VALORINGRESOPDV;
    END
    ELSE IF @xIDENTIFICADOR = 15 BEGIN -- 15. Comision Estandar POS
      SET @p_VALORFIGURA_out = @p_VALORCOMISIONESTANDAR;
    END
    ELSE IF @xIDENTIFICADOR = 16 BEGIN -- 16. IVA Ingreso Administracion
      SET @p_VALORFIGURA_out = CASE WHEN @p_CODTIPOCONTRATOPDV = @p_ADMINISTRACION THEN @p_VALORIVAINGRESOPDV ELSE 0 END;
    END
    ELSE IF @xIDENTIFICADOR= 17  BEGIN --17. Ventas sin ajustes
      SET @p_VALORFIGURA_out = @p_VENTASSINAJUSTES;
    END
    ELSE IF @xIDENTIFICADOR= 18  BEGIN--Revenue Local Mas Ingreso PDV Colaboracion
      SET @p_VALORFIGURA_out =  @p_INGRESOLOCAL+ (CASE WHEN @p_CODTIPOCONTRATOPDV = @p_COLABORACION THEN @p_VALORINGRESOPDV ELSE 0 END);
    END
    ELSE IF @xIDENTIFICADOR= 22  BEGIN--Descuentos
      SET @p_VALORFIGURA_out = @p_DESCUENTOS;
    END
    ELSE BEGIN
		SET @msg = 'P does not know of id ' + CONVERT(VARCHAR,@xIDENTIFICADOR)
		--EXEC WSXML_SFG.SFGTMPTRACE_TraceLog @msg
		SET @p_VALORFIGURA_out = 0;
    END 
    RETURN @p_VALORFIGURA_out;
  END;

GO


