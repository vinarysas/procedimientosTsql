USE SFGPRODU;
--  DDL for Package Body SFGINF_IMPORTES
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGINF_IMPORTES */ 

  IF OBJECT_ID('WSXML_SFG.SFGINF_IMPORTES_GetJuegosReportData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_IMPORTES_GetJuegosReportData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_IMPORTES_GetJuegosReportData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                                @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                                @pg_CADENA                NVARCHAR(2000),
                                @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                               @pg_PRODUCTO              NVARCHAR(2000)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT WSXML_SFG.SFG_PACKAGE_GETWEEKDAYNAME(CTR.FECHAARCHIVO) AS DIA,
             WSXML_SFG.SFG_PACKAGE_GETNUMEROCDC(CTR.FECHAARCHIVO) AS CDC,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN REG.NUMTRANSACCIONES ELSE 0 END), 6) AS NUMINGRESOS,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN REG.VALORTRANSACCION ELSE 0 END), 6) AS INGRESOS,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN REG.NUMTRANSACCIONES ELSE 0 END), 6) AS NUMANULACIONES,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN REG.VALORTRANSACCION ELSE 0 END), 6) AS ANULACIONES,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN REG.VALORTRANSACCION ELSE 0 END) -
                   SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN REG.VALORTRANSACCION ELSE 0 END), 6) AS INGRESOSVALIDOS,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 4 THEN REG.VALORTRANSACCION ELSE 0 END), 6) AS PREMIOSPAGADOS,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 4 THEN REG.RETENCIONPREMIO ELSE 0 END), 6)  AS RETENCIONPREMIOS
      FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
      INNER JOIN WSXML_SFG.REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
      WHERE CTR.CODCICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
        AND @p_CODLINEADENEGOCIO  = @p_CODLINEADENEGOCIO
        AND @pg_CADENA            = @pg_CADENA
        AND @pg_ALIADOESTRATEGICO = @pg_ALIADOESTRATEGICO
        AND @pg_PRODUCTO          = @pg_PRODUCTO
        AND CTR.TIPOARCHIVO = 2
      GROUP BY CTR.FECHAARCHIVO
      ORDER BY CTR.FECHAARCHIVO;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGINF_IMPORTES_GetCSReportData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_IMPORTES_GetCSReportData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_IMPORTES_GetCSReportData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                            @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                            @pg_CADENA                NVARCHAR(2000),
                            @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                           @pg_PRODUCTO              NVARCHAR(2000)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT WSXML_SFG.SFG_PACKAGE_GETWEEKDAYNAME(CTR.FECHAARCHIVO) AS DIA,
             WSXML_SFG.SFG_PACKAGE_GETNUMEROCDC(CTR.FECHAARCHIVO) AS CDC,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN REG.NUMTRANSACCIONES ELSE 0 END), 6) AS NUMINGRESOS,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN REG.VALORTRANSACCION ELSE 0 END), 6) AS INGRESOS,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN REG.NUMTRANSACCIONES ELSE 0 END), 6) AS NUMANULACIONES,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN REG.VALORTRANSACCION ELSE 0 END), 6) AS ANULACIONES,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN REG.VALORTRANSACCION ELSE 0 END) -
                   SUM(CASE WHEN REG.CODTIPOREGISTRO = 2 THEN REG.VALORTRANSACCION ELSE 0 END), 6) AS INGRESOSVALIDOS,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 4 THEN REG.VALORTRANSACCION ELSE 0 END), 6) AS PREMIOSPAGADOS,
             ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 4 THEN REG.RETENCIONPREMIO ELSE 0 END), 6)  AS RETENCIONPREMIOS
      FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
      INNER JOIN WSXML_SFG.REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
      WHERE CTR.CODCICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
        AND @p_CODLINEADENEGOCIO  = @p_CODLINEADENEGOCIO
        AND @pg_CADENA            = @pg_CADENA
        AND @pg_ALIADOESTRATEGICO = @pg_ALIADOESTRATEGICO
        AND @pg_PRODUCTO          = @pg_PRODUCTO
        AND CTR.TIPOARCHIVO = 1
      GROUP BY CTR.FECHAARCHIVO
      ORDER BY CTR.FECHAARCHIVO;
  END;

GO

