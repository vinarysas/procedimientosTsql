USE SFGPRODU;
--  DDL for Package Body SFGPDVCATEGORIAPAGO
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGPDVCATEGORIAPAGO */ 

  IF OBJECT_ID('WSXML_SFG.SFGPDVCATEGORIAPAGO_AddRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPDVCATEGORIAPAGO_AddRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGPDVCATEGORIAPAGO_AddRecord(@p_CODCATEGORIAPAGO        NUMERIC(22,0),
                      @p_CODPUNTODEVENTA         NUMERIC(22,0),
                      @p_CODLINEADENEGOCIO       NUMERIC(22,0),
                      @p_CODUSUARIOMODIFICACION  NUMERIC(22,0),
                      @p_ID_PDVCATEGORIAPAGO_out NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    INSERT INTO WSXML_SFG.PDVCATEGORIAPAGO (
                                  CODPUNTODEVENTA,
                                  CODLINEADENEGOCIO,
                                  CODCATEGORIAPAGO,
                                  CODUSUARIOMODIFICACION)
    VALUES (
            @p_CODPUNTODEVENTA,
            @p_CODLINEADENEGOCIO,
            @p_CODCATEGORIAPAGO,
            @p_CODUSUARIOMODIFICACION);
    SET @p_ID_PDVCATEGORIAPAGO_out = SCOPE_IDENTITY();
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGPDVCATEGORIAPAGO_UpdateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPDVCATEGORIAPAGO_UpdateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGPDVCATEGORIAPAGO_UpdateRecord(@pk_ID_PDVCATEGORIAPAGO    NUMERIC(22,0),
                         @p_CODCATEGORIAPAGO        NUMERIC(22,0),
                         @p_CODPUNTOVENTA           NUMERIC(38,0),
                         @p_CODUSUARIOMODIFICACION  NUMERIC(22,0),
                         @p_ACTIVE                  NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;

    update WSXML_SFG.pdvcategoriapago
     set codpuntodeventa = @p_CODPUNTOVENTA,
         codusuariomodificacion = @p_CODUSUARIOMODIFICACION,
         fechahoramodificacion = GETDATE(),
         active = @p_ACTIVE,
         codcategoriapago = @p_CODCATEGORIAPAGO
    where id_pdvcategoriapago = @pk_ID_PDVCATEGORIAPAGO;


    IF @@rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @@rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 

  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGPDVCATEGORIAPAGO_DeactivateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPDVCATEGORIAPAGO_DeactivateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGPDVCATEGORIAPAGO_DeactivateRecord(@pk_ID_PDVCATEGORIAPAGO NUMERIC(22,0), @p_CODUSUARIOMODIFICACION NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.PDVCATEGORIAPAGO SET CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION,
                                FECHAHORAMODIFICACION  = GETDATE(),
                                ACTIVE                 = 0
    WHERE ID_PDVCATEGORIAPAGO = @pk_ID_PDVCATEGORIAPAGO;

  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGPDVCATEGORIAPAGO_GetRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPDVCATEGORIAPAGO_GetRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGPDVCATEGORIAPAGO_GetRecord(@p_CODPUNTOVENTA NUMERIC(22,0)
                      ) AS
   BEGIN
   SET NOCOUNT ON;



      SELECT PC.ID_PDVCATEGORIAPAGO,
             CC.VARIABLEPORCENTUAL,
             CC.VARIABLETRANSACCIONAL,
             CC.NOMCATEGORIAPAGO
      FROM WSXML_SFG.PDVCATEGORIAPAGO PC
      INNER JOIN CATEGORIAPAGO CC ON PC.CODCATEGORIAPAGO = CC.ID_CATEGORIAPAGO
      WHERE PC.CODPUNTODEVENTA = @p_CODPUNTOVENTA
      AND PC.ACTIVE = 1;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGPDVCATEGORIAPAGO_LoadDifferentialTransRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGPDVCATEGORIAPAGO_LoadDifferentialTransRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGPDVCATEGORIAPAGO_LoadDifferentialTransRecord(@p_COMISIONGENERICA        FLOAT,
                                        @p_CODIGOGTECHPUNTODEVENTA NUMERIC(22,0),
                                        @p_CODLINEADENEGOCIO       NUMERIC(22,0),
                                        @p_CODUSUARIOMODIFICACION  NUMERIC(22,0),
                                        @p_ID_PDVCATEGORIAPAGO_out NUMERIC(22,0) OUT) AS
 BEGIN
    DECLARE @cBASETRANSDEFAULT  FLOAT = 200;
    DECLARE @cCODPUNTODEVENTA   NUMERIC(22,0) = 0;
    DECLARE @cCODLINEADENEGOCIO NUMERIC(22,0) = @p_CODLINEADENEGOCIO;
    DECLARE @cCODCATEGORIAPAGO  NUMERIC(22,0);
   
  SET NOCOUNT ON;
    -- Verificacion de llave
    SELECT @cCODPUNTODEVENTA = ID_PUNTODEVENTA FROM WSXML_SFG.PUNTODEVENTA
    WHERE CODIGOGTECHPUNTODEVENTA = @p_CODIGOGTECHPUNTODEVENTA;

	DECLARE @existingID        NUMERIC(22,0) = 0;
    DECLARE @existingCOMISSION NUMERIC(22,0) = 0;

    IF @cCODPUNTODEVENTA > 0 AND @p_COMISIONGENERICA<>0
      -- Busqueda de comision
      BEGIN
        SELECT @cCODCATEGORIAPAGO = ID_CATEGORIAPAGO FROM WSXML_SFG.CATEGORIAPAGO
        WHERE BASETRANSACCIONAL + VARIABLETRANSACCIONAL = @p_COMISIONGENERICA;

		IF @@ROWCOUNT  = 0 BEGIN
			DECLARE @thisMODIFIER FLOAT = @p_COMISIONGENERICA - @cBASETRANSDEFAULT;
			BEGIN
				DECLARE @NOMCATEGORIAPAGO VARCHAR(50) = 'Auto: ' + ISNULL(CONVERT(VARCHAR,@p_COMISIONGENERICA), '')
				INSERT INTO WSXML_SFG.CATEGORIAPAGO (
                                     NOMCATEGORIAPAGO,
                                     DIASHABILESPAGOGTECH,
                                     DIASHABILESPAGOFIDUCIA,
                                     VARIABLEPORCENTUAL,
                                     VARIABLETRANSACCIONAL,
                                     ORDEN,
                                     BASEPORCENTUAL,
                                     BASETRANSACCIONAL)
				VALUES (
									@NOMCATEGORIAPAGO,
									0, 
									0, 
									0, 
									@thisMODIFIER, 
									0, 
									0, 
									@cBASETRANSDEFAULT
					);
				SET @cCODCATEGORIAPAGO = SCOPE_IDENTITY();
			END;

		END

		IF @@ROWCOUNT  > 1 BEGIN
			EXEC WSXML_SFG.SFGTMPTRACE_TraceLog 'Multiple matches for differential transactional comission'
			SELECT @cCODCATEGORIAPAGO = ID_CATEGORIAPAGO FROM WSXML_SFG.CATEGORIAPAGO
			WHERE BASETRANSACCIONAL + VARIABLETRANSACCIONAL = @p_COMISIONGENERICA
          --AND;
		END
       



      -- Vinculacion
		
		BEGIN
			BEGIN
				  SELECT @existingID = ID_PDVCATEGORIAPAGO, @existingCOMISSION = CODCATEGORIAPAGO FROM WSXML_SFG.PDVCATEGORIAPAGO
				  WHERE CODPUNTODEVENTA   = @cCODPUNTODEVENTA
					AND CODLINEADENEGOCIO = @cCODLINEADENEGOCIO
					AND ACTIVE = 1;
				IF @@ROWCOUNT  = 0 BEGIN
					SET @existingID        = 0;
					SET @existingCOMISSION = 0;
				END
				
				  
			END;


		   IF @existingID > 0 AND @existingCOMISSION <> @cCODCATEGORIAPAGO BEGIN
			  EXEC WSXML_SFG.SFGPDVCATEGORIAPAGO_DeactivateRecord @existingID, @p_CODUSUARIOMODIFICACION
			  EXEC WSXML_SFG.SFGPDVCATEGORIAPAGO_AddRecord @cCODCATEGORIAPAGO, @cCODPUNTODEVENTA, @cCODLINEADENEGOCIO, @p_CODUSUARIOMODIFICACION, @p_ID_PDVCATEGORIAPAGO_out OUT
			END
			ELSE IF @existingID > 0 AND @existingCOMISSION = @cCODCATEGORIAPAGO BEGIN
			  SET @p_ID_PDVCATEGORIAPAGO_out = @existingID;
			END
			ELSE IF @existingID = 0 BEGIN
			  EXEC WSXML_SFG.SFGPDVCATEGORIAPAGO_AddRecord @cCODCATEGORIAPAGO, @cCODPUNTODEVENTA, @cCODLINEADENEGOCIO, @p_CODUSUARIOMODIFICACION, @p_ID_PDVCATEGORIAPAGO_out OUT
			END 
		END

	END;

	ELSE IF @cCODPUNTODEVENTA > 0 AND @p_COMISIONGENERICA=0 BEGIN --Si la comision es cero entonces solo buscamos si tiene alguna comision activa y la desactivamos
      -- Buscamos si tiene comision activa y la desactivamos...
       
		BEGIN
			BEGIN
			  SELECT @existingID = ID_PDVCATEGORIAPAGO, @existingCOMISSION = CODCATEGORIAPAGO FROM WSXML_SFG.PDVCATEGORIAPAGO
			  WHERE CODPUNTODEVENTA   = @cCODPUNTODEVENTA
				AND CODLINEADENEGOCIO = @cCODLINEADENEGOCIO
				AND ACTIVE = 1;
				IF @@ROWCOUNT  = 0 BEGIN
       
				  SET @existingID        = 0;
				  SET @existingCOMISSION = 0;
				END
			END;


			SET @p_ID_PDVCATEGORIAPAGO_out=0;

			IF @existingID > 0 BEGIN
			  EXEC WSXML_SFG.SFGPDVCATEGORIAPAGO_DeactivateRecord @existingID, @p_CODUSUARIOMODIFICACION
			END 

		END;

    END 

	IF @@ROWCOUNT  = 0 BEGIN
		DECLARE @msg VARCHAR(2000) = '-20000 El punto de venta ' + ISNULL(CONVERT(VARCHAR,@p_CODIGOGTECHPUNTODEVENTA), '') + ' no existe';
		RAISERROR(@msg, 16, 1);
	END
  END;
GO





