USE SFGPRODU;
--  DDL for Package Body SFGDETALLEFACTURACIONIMPUESTO
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO */ 

  IF OBJECT_ID('WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_AddRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_AddRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_AddRecord(@p_CODMAESTROFACTURACIONPDV   NUMERIC(22,0),
                      @p_CODDETALLEFACTURACIONPDV   NUMERIC(22,0),
                      @p_CODIMPUESTO                NUMERIC(22,0),
                      @p_CODPRODUCTOIMPUESTO        NUMERIC(22,0),
                      @p_VALORIMPUESTO              FLOAT,
                      @p_CODUSUARIOMODIFICACION     NUMERIC(22,0),
                      @p_ID_DETALLEFACTIMPUESTO_out NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    INSERT INTO WSXML_SFG.DETALLEFACTURACIONIMPUESTO (
                                            CODMAESTROFACTURACIONPDV,
                                            CODDETALLEFACTURACIONPDV,
                                            CODIMPUESTO,
                                            CODPRODUCTOIMPUESTO,
                                            VALORIMPUESTO,
                                            CODUSUARIOMODIFICACION)
    VALUES (
            @p_CODMAESTROFACTURACIONPDV,
            @p_CODDETALLEFACTURACIONPDV,
            @p_CODIMPUESTO,
            @p_CODPRODUCTOIMPUESTO,
            @p_VALORIMPUESTO,
            @p_CODUSUARIOMODIFICACION);
    SET @p_ID_DETALLEFACTIMPUESTO_out = SCOPE_IDENTITY();
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_CrearImpuesto', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_CrearImpuesto;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_CrearImpuesto(@p_CODMAESTROFACTURACIONPDV   NUMERIC(22,0),
                          @p_CODDETALLEFACTURACIONPDV   NUMERIC(22,0),
                          @p_CODIMPUESTO                NUMERIC(22,0),
                          @p_CODPRODUCTOIMPUESTO        NUMERIC(22,0),
                          @p_VALORIMPUESTO              FLOAT,
                          @p_CODUSUARIOMODIFICACION     NUMERIC(22,0),
                          @p_ID_DETALLEFACTIMPUESTO_out NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    -- Identificador de impueso existente
    SELECT @p_ID_DETALLEFACTIMPUESTO_out = ID_DETALLEFACTURACIONIMPUESTO FROM WSXML_SFG.DETALLEFACTURACIONIMPUESTO
     WHERE CODMAESTROFACTURACIONPDV = @p_CODMAESTROFACTURACIONPDV
       AND CODDETALLEFACTURACIONPDV = @p_CODDETALLEFACTURACIONPDV
       AND CODIMPUESTO              = @p_CODIMPUESTO
       AND CODPRODUCTOIMPUESTO      = @p_CODPRODUCTOIMPUESTO
       AND ACTIVE = 1;
    -- Sumar impuesto
    UPDATE WSXML_SFG.DETALLEFACTURACIONIMPUESTO SET VALORIMPUESTO = VALORIMPUESTO + @p_VALORIMPUESTO
    WHERE ID_DETALLEFACTURACIONIMPUESTO = @p_ID_DETALLEFACTIMPUESTO_out;
--  EXCEPTION WHEN NO_DATA_FOUND THEN
    IF(@@rowcount = 0)
	  BEGIN
	   EXEC SFGDETALLEFACTURACIONIMPUESTO_AddRecord @p_CODMAESTROFACTURACIONPDV,
                                            @p_CODDETALLEFACTURACIONPDV,
                                            @p_CODIMPUESTO,
                                            @p_CODPRODUCTOIMPUESTO,
                                            @p_VALORIMPUESTO,
                                            @p_CODUSUARIOMODIFICACION,
                                            @p_ID_DETALLEFACTIMPUESTO_out;
      END
  
  
    
  END;
GO

  /*PROCEDURE AnularImpuesto(p_CODMAESTROFACTURACIONPDV   NUMBER,
                           p_CODDETALLEFACTURACIONPDV   NUMBER,
                           p_CODIMPUESTO                NUMBER,
                           p_CODPRODUCTOIMPUESTO        NUMBER,
                           p_VALORIMPUESTO              FLOAT,
                           p_CODUSUARIOMODIFICACION     NUMBER,
                           p_ID_DETALLEFACTIMPUESTO_out OUT NUMBER) IS
    l_count NUMBER;
  BEGIN
    SELECT COUNT(1) INTO l_count FROM DETALLEFACTURACIONIMPUESTO
    WHERE CODMAESTROFACTURACIONPDV = p_CODMAESTROFACTURACIONPDV
      AND CODDETALLEFACTURACIONPDV = p_CODDETALLEFACTURACIONPDV
      AND CODIMPUESTO              = p_CODIMPUESTO
      AND CODPRODUCTOIMPUESTO      = p_CODPRODUCTOIMPUESTO
      AND ACTIVE = 1;

    IF l_count > 0 THEN
      SELECT ID_DETALLEFACTURACIONIMPUESTO INTO p_ID_DETALLEFACTIMPUESTO_out
        FROM DETALLEFACTURACIONIMPUESTO
       WHERE CODMAESTROFACTURACIONPDV = p_CODMAESTROFACTURACIONPDV
         AND CODDETALLEFACTURACIONPDV = p_CODDETALLEFACTURACIONPDV
         AND CODIMPUESTO              = p_CODIMPUESTO
         AND CODPRODUCTOIMPUESTO      = p_CODPRODUCTOIMPUESTO
         AND ACTIVE = 1;

       IF p_ID_DETALLEFACTIMPUESTO_out > 0 THEN
         UPDATE DETALLEFACTURACIONIMPUESTO
            SET VALORIMPUESTO = VALORIMPUESTO - p_VALORIMPUESTO
          WHERE ID_DETALLEFACTURACIONIMPUESTO = p_ID_DETALLEFACTIMPUESTO_out;
       END IF;
    ELSIF l_count = 0 THEN
      SFGTMPTRACE.TraceLog('Cancelling IMPUESTO with no record');
      AddRecord(p_CODMAESTROFACTURACIONPDV,
                p_CODDETALLEFACTURACIONPDV,
                p_CODIMPUESTO,
                p_CODPRODUCTOIMPUESTO,
                (0 - p_VALORIMPUESTO),
                p_CODUSUARIOMODIFICACION,
                p_ID_DETALLEFACTIMPUESTO_out);
    END IF;
  END;
GO*/

  IF OBJECT_ID('WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_UpdateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_UpdateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_UpdateRecord(@pk_ID_DETALLEFACTIMPUESTO  NUMERIC(22,0),
                         @p_CODMAESTROFACTURACIONPDV NUMERIC(22,0),
                         @p_CODDETALLEFACTURACIONPDV NUMERIC(22,0),
                         @p_CODPRODUCTOIMPUESTO      NUMERIC(22,0),
                         @p_VALORIMPUESTO            FLOAT,
                         @p_CODUSUARIOMODIFICACION   NUMERIC(22,0),
                         @p_ACTIVE                   NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.DETALLEFACTURACIONIMPUESTO
       SET CODMAESTROFACTURACIONPDV = @p_CODMAESTROFACTURACIONPDV,
           CODDETALLEFACTURACIONPDV = @p_CODDETALLEFACTURACIONPDV,
           CODPRODUCTOIMPUESTO      = @p_CODPRODUCTOIMPUESTO,
           VALORIMPUESTO            = @p_VALORIMPUESTO,
           CODUSUARIOMODIFICACION   = @p_CODUSUARIOMODIFICACION,
           ACTIVE                   = @p_ACTIVE
     WHERE ID_DETALLEFACTURACIONIMPUESTO = @pk_ID_DETALLEFACTIMPUESTO;

    IF @@rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @@rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_GetRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_GetRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_GetRecord(@pk_ID_DETALLEFACTIMPUESTO NUMERIC(22,0)
                                                                           ) AS
 BEGIN
    DECLARE @l_count INTEGER;
   
  SET NOCOUNT ON;
    SELECT @l_count = COUNT(*) FROM WSXML_SFG.DETALLEFACTURACIONIMPUESTO
     WHERE ID_DETALLEFACTURACIONIMPUESTO = @pk_ID_DETALLEFACTIMPUESTO;

    IF @l_count = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @l_count > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 

	
      SELECT ID_DETALLEFACTURACIONIMPUESTO,
             CODMAESTROFACTURACIONPDV,
             CODDETALLEFACTURACIONPDV,
             CODPRODUCTOIMPUESTO,
             VALORIMPUESTO,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.DETALLEFACTURACIONIMPUESTO
       WHERE ID_DETALLEFACTURACIONIMPUESTO = @pk_ID_DETALLEFACTIMPUESTO;
	   
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_GetList', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_GetList;
GO

CREATE     PROCEDURE WSXML_SFG.SFGDETALLEFACTURACIONIMPUESTO_GetList(@p_active NUMERIC(22,0)
                                                                         ) AS
  BEGIN
  SET NOCOUNT ON;
   
      SELECT ID_DETALLEFACTURACIONIMPUESTO,
             CODMAESTROFACTURACIONPDV,
             CODDETALLEFACTURACIONPDV,
             CODPRODUCTOIMPUESTO,
             VALORIMPUESTO,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.DETALLEFACTURACIONIMPUESTO
       WHERE ACTIVE = CASE WHEN @p_active = -1 THEN ACTIVE ELSE @p_active END;
	   
  END;
GO





