USE SFGPRODU;
--  DDL for Package Body SFGINF_AJUSTESFACTURACION
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGINF_AJUSTESFACTURACION */ 

  IF OBJECT_ID('WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetAnnulmentSummary', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetAnnulmentSummary;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetAnnulmentSummary(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                                @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                                @pg_CADENA                NVARCHAR(2000),
                                @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                               @pg_PRODUCTO              NVARCHAR(2000)
                               ) AS
  
  GO

  IF OBJECT_ID('WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetMonthlySummary', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetMonthlySummary;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetMonthlySummary(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                              @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                              @pg_CADENA                NVARCHAR(2000),
                              @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                             @pg_PRODUCTO              NVARCHAR(2000)
                             ) AS
 
  GO

  IF OBJECT_ID('WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetAnnulmentDetails', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetAnnulmentDetails;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetAnnulmentDetails(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                                @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                                @pg_CADENA                NVARCHAR(2000),
                                @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                               @pg_PRODUCTO              NVARCHAR(2000)
                               ) AS
  GO



  IF OBJECT_ID('WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetMonthlyDetails', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetMonthlyDetails;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetMonthlyDetails(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                              @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                              @pg_CADENA                NVARCHAR(2000),
                              @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                              @pg_PRODUCTO              NVARCHAR(2000)) AS
 BEGIN
    DECLARE @sFECHACCLO DATETIME;
    DECLARE @sFECHAFRST DATETIME;
    DECLARE @sFECHALAST DATETIME;
   
  SET NOCOUNT ON;

  DECLARE @p_ANULACIONTRANSACCION INT , @p_CAMBIOPRODUCTO INT, @p_MODIFICAREGLASPUNTO INT, @p_MODIFICAREGLASALIADO INT, @p_MANUAL INT
  EXEC WSXML_SFG.SFGAJUSTEFACTURACION_CONSTANT
		@p_ANULACIONTRANSACCION OUTPUT, @p_CAMBIOPRODUCTO OUTPUT, @p_MODIFICAREGLASPUNTO OUTPUT, @p_MODIFICAREGLASALIADO OUTPUT, @p_MANUAL OUTPUT


    SELECT @sFECHACCLO = FECHAEJECUCION FROM WSXML_SFG.CICLOFACTURACIONPDV WHERE ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV;
    EXEC WSXML_SFG.SFG_PACKAGE_GetMonthRange @sFECHACCLO, @sFECHAFRST OUT, @sFECHALAST OUT
      SELECT AJS.ID_AJUSTEFACTURACION    AS ID,
             AJS.DESCRIPCIONAJUSTE       AS DESCRIPCIONAJUSTE,
             OCT.FECHAARCHIVO            AS FECHAARCHIVOORIGEN,
             PDV.CODIGOGTECHPUNTODEVENTA AS CODIGOGTECHPUNTODEVENTA,
             LDN.NOMLINEADENEGOCIO       AS NOMLINEADENEGOCIO,
             PRD.CODIGOGTECHPRODUCTO     AS CODIGOGTECHPRODUCTO,
             PRD.NOMPRODUCTO             AS NOMPRODUCTO,
             DCT.FECHAARCHIVO            AS FECHAARCHIVODESTINO,
             AJS.CANTIDADAJUSTE          AS CANTIDADAJUSTE,
             AJS.VALORAJUSTE             AS VALORAJUSTE,
             ROUND(AJS.VALORVENTABRUTANOREDONDEADO, 6) AS VALORAJUSTEBRUTO,
             ROUND(AJS.VALORCOMISION, 6)               AS COMISION,
             ROUND(AJS.VALORCOMISIONNETA, 6)           AS COMISIONNETA,
             ROUND(AJS.REVENUETOTAL, 6)                AS REVENUETOTAL,
             ROUND(ISNULL(AFC.COSTO01, 0), 6)             AS COSTOICA,
             ROUND(ISNULL(AFC.COSTO02, 0), 6)             AS COSTOIC,
             ROUND(ISNULL(AFC.COSTO03, 0), 6)             AS COSTOICAIC,
             ROUND(ISNULL(AFC.COSTO04, 0), 6)             AS COSTOETESA,
             ROUND(ISNULL(AFC.COSTO05, 0), 6)             AS COSTOMERCADEOVENTA,
             ROUND(ISNULL(AFC.COSTO06, 0), 6)             AS COSTOMERCADEOREVENUE,
             ROUND(ISNULL(AFC.COSTO07, 0), 6)             AS COSTOBADDEBT,
             ROUND(ISNULL(AFC.COSTO08, 0), 6)             AS COSTOIVANODESCONTABLE
      FROM WSXML_SFG.AJUSTEFACTURACION AJS
      INNER JOIN WSXML_SFG.ENTRADAARCHIVOCONTROL OCT ON (OCT.ID_ENTRADAARCHIVOCONTROL = AJS.CODENTRADAARCHIVOORIGEN)
      INNER JOIN WSXML_SFG.REGISTROFACTURACION   ORG ON (ORG.ID_REGISTROFACTURACION   = AJS.CODREGISTROFACTORIGEN)
      INNER JOIN WSXML_SFG.ENTRADAARCHIVOCONTROL DCT ON (DCT.ID_ENTRADAARCHIVOCONTROL = AJS.CODENTRADAARCHIVODESTINO)
      INNER JOIN WSXML_SFG.REGISTROFACTURACION   DRG ON (DRG.ID_REGISTROFACTURACION   = AJS.CODREGISTROFACTDESTINO)
      INNER JOIN WSXML_SFG.PUNTODEVENTA          PDV ON (PDV.ID_PUNTODEVENTA          = ORG.CODPUNTODEVENTA)
      INNER JOIN WSXML_SFG.PRODUCTO              PRD ON (PRD.ID_PRODUCTO              = ORG.CODPRODUCTO)
      INNER JOIN WSXML_SFG.TIPOPRODUCTO          TPR ON (TPR.ID_TIPOPRODUCTO          = PRD.CODTIPOPRODUCTO)
      INNER JOIN WSXML_SFG.LINEADENEGOCIO        LDN ON (LDN.ID_LINEADENEGOCIO        = TPR.CODLINEADENEGOCIO)
      LEFT OUTER JOIN (SELECT CODAJUSTEFACTURACION,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 41 OR CODCOSTOCALCULADO = 42 THEN VALORCOSTO ELSE 0 END) AS COSTO01,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 43 THEN VALORCOSTO ELSE 0 END) AS COSTO02,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 44 THEN VALORCOSTO ELSE 0 END) AS COSTO03,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 45 OR CODCOSTOCALCULADO = 46 THEN VALORCOSTO ELSE 0 END) AS COSTO04,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 47 THEN VALORCOSTO ELSE 0 END) AS COSTO05,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 48 THEN VALORCOSTO ELSE 0 END) AS COSTO06,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 49 OR CODCOSTOCALCULADO = 50 THEN VALORCOSTO ELSE 0 END) AS COSTO07,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 51 THEN VALORCOSTO ELSE 0 END) AS COSTO08
                       FROM WSXML_SFG.AJUSTEFACTCOSTOCALCULADO GROUP BY CODAJUSTEFACTURACION) AFC ON (CODAJUSTEFACTURACION = ID_AJUSTEFACTURACION)
      WHERE DCT.REVERSADO = 0 AND DCT.FECHAARCHIVO BETWEEN @sFECHAFRST AND @sFECHALAST
        AND AJS.CODTIPOAJUSTEFACTURACION = @p_ANULACIONTRANSACCION;
  END;
GO


  IF OBJECT_ID('WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetComparisonAdjustmentMonthly', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetComparisonAdjustmentMonthly;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_AJUSTESFACTURACION_GetComparisonAdjustmentMonthly(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                                           @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                                           @pg_CADENA                NVARCHAR(2000),
                                           @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                                           @pg_PRODUCTO              NVARCHAR(2000)) AS
 BEGIN
    DECLARE @sFECHACCLO DATETIME;
    DECLARE @sFECHAFRST DATETIME;
    DECLARE @sFECHALAST DATETIME;
   
  SET NOCOUNT ON;
    SELECT @sFECHACCLO = FECHAEJECUCION FROM WSXML_SFG.CICLOFACTURACIONPDV WHERE ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV;
    EXEC WSXML_SFG.SFG_PACKAGE_GetMonthRange @sFECHACCLO, @sFECHAFRST OUT, @sFECHALAST OUT
      SELECT ID_TIPOPRODUCTO                      AS ID_TIPOPRODUCTO,
             NOMTIPOPRODUCTO                      AS NOMTIPOPRODUCTO,
             ID_AGRUPACIONPRODUCTO                AS ID_AGRUPACIONPRODUCTO,
             NOMAGRUPACIONPRODUCTO                AS NOMAGRUPACIONPRODUCTO,
             ID_PRODUCTO                          AS ID_PRODUCTO,
             CODIGOGTECHPRODUCTO                  AS CODIGOGTECHPRODUCTO,
             NOMPRODUCTO                          AS NOMPRODUCTO,
             ROUND(SUM(CASE WHEN CODTIPOREGISTRO IN (1, 3) THEN NUMTRANSACCIONES - ISNULL(CANTIDADAJUSTE, 0)
                            WHEN CODTIPOREGISTRO = 2       THEN (NUMTRANSACCIONES - ISNULL(CANTIDADAJUSTE, 0)) * (-1) ELSE 0 END), 4)                AS NUMTRANSACCIONESSYS,
             ROUND(SUM(CASE WHEN CODTIPOREGISTRO IN (1, 3) THEN ISNULL(CANTIDADAJUSTE, 0)
                            WHEN CODTIPOREGISTRO = 2       THEN ISNULL(CANTIDADAJUSTE, 0) * (-1) ELSE 0 END), 4)                                     AS NUMTRANSACCIONESAJS,
             ROUND(SUM(CASE WHEN CODTIPOREGISTRO IN (1, 3) THEN NUMTRANSACCIONES
                            WHEN CODTIPOREGISTRO = 2       THEN NUMTRANSACCIONES * (-1) ELSE 0 END), 4)                                           AS NUMTRANSACCIONES,
             
             ROUND(SUM(CASE WHEN CODTIPOREGISTRO IN (1, 3) THEN VALORTRANSACCION - ISNULL(VALORAJUSTE, 0)
                            WHEN CODTIPOREGISTRO = 2       THEN (VALORTRANSACCION - ISNULL(VALORAJUSTE, 0)) * (-1) ELSE 0 END), 4)                   AS VALORTRANSACCIONSYS,
             ROUND(SUM(CASE WHEN CODTIPOREGISTRO IN (1, 3) THEN ISNULL(VALORAJUSTE, 0)
                            WHEN CODTIPOREGISTRO = 2       THEN ISNULL(VALORAJUSTE, 0) * (-1) ELSE 0 END), 4)                                        AS VALORTRANSACCIONAJS,
             ROUND(SUM(CASE WHEN CODTIPOREGISTRO IN (1, 3) THEN VALORTRANSACCION
                            WHEN CODTIPOREGISTRO = 2       THEN VALORTRANSACCION * (-1) ELSE 0 END), 4)                                           AS VALORTRANSACCION,
             
             ROUND(SUM(CASE WHEN CODTIPOREGISTRO IN (1, 3) THEN VALORVENTABRUTANOREDONDEADO - ISNULL(VALORAJUSTEBRUTONR, 0)
                            WHEN CODTIPOREGISTRO = 2       THEN (VALORVENTABRUTANOREDONDEADO - ISNULL(VALORAJUSTEBRUTONR, 0)) * (-1) ELSE 0 END), 4) AS VALORVENTABRUTASYS,
             ROUND(SUM(CASE WHEN CODTIPOREGISTRO IN (1, 3) THEN ISNULL(VALORAJUSTEBRUTONR, 0)
                            WHEN CODTIPOREGISTRO = 2       THEN ISNULL(VALORAJUSTEBRUTONR, 0) * (-1) ELSE 0 END), 4)                                 AS VALORVENTABRUTAAJS,
                              
             ROUND(SUM(CASE WHEN CODTIPOREGISTRO IN (1, 3) THEN VALORVENTABRUTANOREDONDEADO
                            WHEN CODTIPOREGISTRO = 2       THEN VALORVENTABRUTANOREDONDEADO * (-1) ELSE 0 END), 4)                                AS VALORVENTABRUTA,
             
             ROUND(SUM(CASE WHEN CODTIPOREGISTRO IN (1, 3) THEN isnull(VALORDESCUENTOS, 0)
                            WHEN CODTIPOREGISTRO = 2       THEN isnull(VALORDESCUENTOS, 0) * (-1) ELSE 0 END), 4)                                           AS DESCUENTOS  
      FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
      INNER JOIN WSXML_SFG.REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
      INNER JOIN WSXML_SFG.PRODUCTO            PRD ON (PRD.ID_PRODUCTO              = REG.CODPRODUCTO)
      INNER JOIN WSXML_SFG.TIPOPRODUCTO        TPR ON (TPR.ID_TIPOPRODUCTO          = PRD.CODTIPOPRODUCTO)
      INNER JOIN WSXML_SFG.AGRUPACIONPRODUCTO  AGP ON (AGP.ID_AGRUPACIONPRODUCTO    = PRD.CODAGRUPACIONPRODUCTO)
      LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO,
                              SUM(CANTIDADAJUSTE)              AS CANTIDADAJUSTE,
                              SUM(VALORAJUSTE)                 AS VALORAJUSTE,
                              SUM(VALORVENTABRUTANOREDONDEADO) AS VALORAJUSTEBRUTONR
                       FROM WSXML_SFG.AJUSTEFACTURACION
                       WHERE CODTIPOAJUSTEFACTURACION = 1
                       GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO  = CTR.ID_ENTRADAARCHIVOCONTROL
                                                                                      AND AFC.CODREGISTROFACTDESTINO    = REG.ID_REGISTROFACTURACION)
      WHERE CTR.REVERSADO = 0
        AND CTR.FECHAARCHIVO BETWEEN @sFECHAFRST AND @sFECHALAST
        AND TPR.CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
      GROUP BY ID_TIPOPRODUCTO, NOMTIPOPRODUCTO, ID_AGRUPACIONPRODUCTO, NOMAGRUPACIONPRODUCTO, ID_PRODUCTO, CODIGOGTECHPRODUCTO, NOMPRODUCTO
      ORDER BY ID_TIPOPRODUCTO, ID_AGRUPACIONPRODUCTO, CAST(CODIGOGTECHPRODUCTO AS NUMERIC(38,0));
  END;
GO



