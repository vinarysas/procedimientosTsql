USE SFGPRODU;
--  DDL for Package Body SFGINF_REVNXCONTRATOPDV
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGINF_REVNXCONTRATOPDV */ 

  IF OBJECT_ID('WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetMonthlyDiscInfo', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetMonthlyDiscInfo;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetMonthlyDiscInfo(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                               @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                               @pg_CADENA                NVARCHAR(2000),
                               @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                              @pg_PRODUCTO              NVARCHAR(2000)
                               ) AS
 BEGIN
    DECLARE @sFECHACCLO DATETIME;
    DECLARE @sFECHAFRST DATETIME;
    DECLARE @sFECHALAST DATETIME;
   
  SET NOCOUNT ON;
    SELECT @sFECHACCLO = FECHAEJECUCION FROM WSXML_SFG.CICLOFACTURACIONPDV WHERE ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV;
    --SFG_PACKAGE.GetMonthRange(@sFECHACCLO, @sFECHAFRST, @sFECHALAST);
      SELECT AES.NOMBRERAZONSOCIAL                  AS ALIADOESTRATEGICO,
             AES.NUMEROIDENTIFICACION               AS IDENTIFICACION,
             AGP.NOMAGRUPACIONPRODUCTO              AS PRODUCTO,
             PRD.NOMPRODUCTO                        AS SUBPRODUCTO,
             RED.NOMREDPDV                          AS RED,
             isnull(PRF.TIPO_DIFERENCIAL, '') as TIPO_DIFERENCIAL,
             CTR.NOMTIPOCONTRATOPDV                 AS TIPOCONTRATOPDV,
             SUM(NumIngresos - NumAnulaciones)      AS NUMINGRESOS,
             SUM(IngresosBrutos)                    AS INGRESOSBRUTOS,
             SUM(isnull(PRF.Descuentos, 0))                    AS DESCUENTOS,
             ISNULL(SUM(IvaProducto),0)                       AS IVAPRODUCTO,
             SUM(Comision)                          AS INGRESOPDV,
             SUM(RevenueTotal)                      AS REVENUETOTAL,
             SUM(IngresoCorporativo)                AS REVENUECORPORATIVO,
             SUM(CASE WHEN PRF.CODTIPOCONTRATOPDV IN (1, 2) THEN IngresoLocal ELSE 0 END) AS REVENUELOCALADMINISTRACION,
             SUM(CASE WHEN PRF.CODTIPOCONTRATOPDV = 3       THEN IngresoLocal ELSE 0 END) AS REVENUELOCALCOLABORACION,
             SUM(EgresoLocal)                               AS COSTODEVENTA,
             SUM(CostoICA)                                  AS ICA,
             SUM(CostoEtesa)                                AS COMETESA,
             SUM(CostoIC)                                   AS INTERCOMPANY,
             SUM(CostoICAIC)                                AS ICAIC,
             SUM(CostoBadDebt)                              AS BADDEBT,
             SUM(CostoMercadeoVenta + CostoMercadeoRevenue) AS MERCADEO,
             SUM(CostoIvaNoDescontable)                     AS IVANODESCONTABLE,
             SUM(CostoIC108)                                AS INTERCOMPANY108,
             SUM(CostoICAIC108)                             AS ICAIC108
      FROM WSXML_SFG.VW_PREFACTURACION_REVENUE PRF
      INNER JOIN PRODUCTO               PRD ON (PRD.ID_PRODUCTO           = PRF.CODPRODUCTO)
      INNER JOIN ALIADOESTRATEGICO      AES ON (AES.ID_ALIADOESTRATEGICO  = PRD.CODALIADOESTRATEGICO)
      INNER JOIN AGRUPACIONPRODUCTO     AGP ON (AGP.ID_AGRUPACIONPRODUCTO = PRD.CODAGRUPACIONPRODUCTO)
      INNER JOIN LINEADENEGOCIO         LDN ON (LDN.ID_LINEADENEGOCIO     = PRF.CODLINEADENEGOCIO)
      INNER JOIN REDPDV                 RED ON (RED.ID_REDPDV             = PRF.CODREDPDV)
      INNER JOIN TIPOCONTRATOPDV        CTR ON (CTR.ID_TIPOCONTRATOPDV    = PRF.CODTIPOCONTRATOPDV)
      WHERE PRF.FECHAARCHIVO BETWEEN @sFECHAFRST AND @sFECHALAST
        AND PRF.CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
      GROUP BY LDN.ID_LINEADENEGOCIO, AES.NOMBRERAZONSOCIAL, AES.NUMEROIDENTIFICACION, AGP.NOMAGRUPACIONPRODUCTO, PRD.NOMPRODUCTO, RED.NOMREDPDV, CTR.NOMTIPOCONTRATOPDV,isnull(PRF.TIPO_DIFERENCIAL, '')
      ORDER BY AES.NOMBRERAZONSOCIAL, AES.NUMEROIDENTIFICACION, AGP.NOMAGRUPACIONPRODUCTO, RED.NOMREDPDV, CTR.NOMTIPOCONTRATOPDV;
  END;
  GO
      IF OBJECT_ID('WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetMonthlyHeaders', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetMonthlyHeaders;
GO

CREATE             PROCEDURE WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetMonthlyHeaders(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0)
                              ) AS
 
  GO


  IF OBJECT_ID('WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetOpeningData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetOpeningData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetOpeningData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                           @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                           @pg_CADENA                NVARCHAR(2000),
                           @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                          @pg_PRODUCTO              NVARCHAR(2000)
                           ) AS
 BEGIN
    DECLARE @sFECHACCLO DATETIME;
    DECLARE @sFECHAFRST DATETIME;
    DECLARE @sFECHALAST DATETIME;
   
  SET NOCOUNT ON;
    SELECT @sFECHACCLO = FECHAEJECUCION FROM WSXML_SFG.CICLOFACTURACIONPDV WHERE ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV;
    --SFG_PACKAGE.GetMonthRange(@sFECHACCLO, @sFECHAFRST, @sFECHALAST);
      SELECT       ALIADOESTRATEGICO.NOMBRERAZONSOCIAL                  AS ALIADOESTRATEGICO,
                   ALIADOESTRATEGICO.NUMEROIDENTIFICACION               AS IDENTIFICACION,
                   AGRUPACIONPRODUCTO.NOMAGRUPACIONPRODUCTO             AS PRODUCTO,
                   PRODUCTO.NOMPRODUCTO                                 AS SUBPRODUCTO,
                   REDPDV.NOMREDPDV                                     AS RED,
                   ISNULL(REGISTROREVENUECOMDIF.NOMBRECORTO, ' ')           AS TIPO_DIFERENCIAL,
                   TIPOCONTRATOPDV.NOMTIPOCONTRATOPDV                   AS TIPOCONTRATOPDV,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROFACTURACION.NUMTRANSACCIONES
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN REGISTROFACTURACION.NUMTRANSACCIONES *-1  ELSE 0 END ),6)    AS NUMINGRESOS,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROFACTURACION.VALORVENTABRUTA
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN REGISTROFACTURACION.VALORVENTABRUTA *-1  ELSE 0 END )  ,6)   AS INGRESOSBRUTOS,
                              
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN isnull(REGISTROFACTURACION.VALORDESCUENTOS, 0)
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN isnull(REGISTROFACTURACION.VALORDESCUENTOS, 0) *-1  ELSE 0 END )  ,6)   AS DESCUENTOS,         
                              
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) 
                                  AND REGISTROFACTURACION.COMISIONANTICIPO = 0 THEN REGISTROFACTURACION.VALORCOMISION 
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 
                                 AND REGISTROFACTURACION.COMISIONANTICIPO = 0 THEN REGISTROFACTURACION.VALORCOMISION*-1 ELSE 0 END)  ,6)   AS INGRESOPDV,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROREVENUE.REVENUETOTAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2  THEN REGISTROREVENUE.REVENUETOTAL *-1     ELSE 0 END )  ,6)      AS REVENUETOTAL,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROREVENUE.INGRESOCORPORATIVO
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2   THEN REGISTROREVENUE.INGRESOCORPORATIVO *-1 ELSE 0 END ) ,6)    AS REVENUECORPORATIVO, 
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) 
                                  AND REGISTROFACTURACION.CODTIPOCONTRATOPDV IN (1,2) THEN REGISTROREVENUE.INGRESOLOCAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2      
                                 AND REGISTROFACTURACION.CODTIPOCONTRATOPDV IN (1,2) THEN REGISTROREVENUE.INGRESOLOCAL *-1 ELSE 0 END ) ,6) AS REVENUELOCALADMINISTRACION,           
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) 
                                  AND REGISTROFACTURACION.CODTIPOCONTRATOPDV =3 THEN REGISTROREVENUE.INGRESOLOCAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2      
                                 AND REGISTROFACTURACION.CODTIPOCONTRATOPDV =3 THEN REGISTROREVENUE.INGRESOLOCAL *-1       ELSE 0 END ) ,6) AS REVENUELOCALCOLABORACION,            
                  ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROREVENUE.EGRESOLOCAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2      THEN REGISTROREVENUE.EGRESOLOCAL *-1         ELSE 0 END ) ,6) AS COSTODEVENTA,        
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3)      THEN RCT.COSTO01 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2  THEN RCT.COSTO01 ELSE 0 END), 10), 0)                    AS ICA,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO04 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2       THEN RCT.COSTO04 ELSE 0 END), 10), 0)               AS COMETESA,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO02 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO02 ELSE 0 END), 10), 0)                     AS INTERCOMPANY,                                                            
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO03 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO03 ELSE 0 END), 10), 0)                     AS ICAIC,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO07 ELSE 0 END) -
                             SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO07 ELSE 0 END), 10), 0)                    AS BADDEBT,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) 
                                     THEN ISNULL(RCT.COSTO05,0)+ISNULL(RCT.COSTO06,0) ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 
                                     THEN ISNULL(RCT.COSTO05,0)+ISNULL(RCT.COSTO06,0) ELSE 0 END), 10), 0)                                        AS MERCADEO, 
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO08 ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO08 ELSE 0 END), 10), 0)                          AS IVANODESCONTABLE,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO09 ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO09 ELSE 0 END), 10), 0)                          AS INTERCOMPANY108,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO10 ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO10 ELSE 0 END), 10), 0)                          AS ICAIC108
      FROM WSXML_SFG.REGISTROREVENUE
      INNER JOIN REGISTROFACTURACION ON REGISTROREVENUE.CODREGISTROFACTURACION = REGISTROFACTURACION.ID_REGISTROFACTURACION
      INNER JOIN ENTRADAARCHIVOCONTROL ON REGISTROFACTURACION.CODENTRADAARCHIVOCONTROL = ENTRADAARCHIVOCONTROL.ID_ENTRADAARCHIVOCONTROL
      INNER JOIN PRODUCTO ON REGISTROFACTURACION.CODPRODUCTO = PRODUCTO.ID_PRODUCTO 
      INNER JOIN AGRUPACIONPRODUCTO ON PRODUCTO.CODAGRUPACIONPRODUCTO = AGRUPACIONPRODUCTO.ID_AGRUPACIONPRODUCTO
      INNER JOIN TIPOPRODUCTO ON PRODUCTO.CODTIPOPRODUCTO = TIPOPRODUCTO.ID_TIPOPRODUCTO 
      INNER JOIN LINEADENEGOCIO ON TIPOPRODUCTO.CODLINEADENEGOCIO = LINEADENEGOCIO.ID_LINEADENEGOCIO
      INNER JOIN REDPDV ON REGISTROFACTURACION.CODREDPDV = REDPDV.ID_REDPDV
      INNER JOIN TIPOCONTRATOPDV ON REGISTROFACTURACION.CODTIPOCONTRATOPDV = TIPOCONTRATOPDV.ID_TIPOCONTRATOPDV
      INNER JOIN ALIADOESTRATEGICO ON PRODUCTO.CODALIADOESTRATEGICO= ALIADOESTRATEGICO.ID_ALIADOESTRATEGICO
      LEFT OUTER JOIN REGISTROREVENUECOMDIF       ON REGISTROREVENUECOMDIF.CODREGISTROREVENUE = REGISTROREVENUE.ID_REGISTROREVENUE
      LEFT OUTER JOIN (SELECT CODREGISTROREVENUE,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 41 OR CODCOSTOCALCULADO = 42 THEN VALORCOSTO ELSE 0 END) AS COSTO01,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 43 THEN VALORCOSTO ELSE 0 END) AS COSTO02,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 44 THEN VALORCOSTO ELSE 0 END) AS COSTO03,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 45 OR CODCOSTOCALCULADO = 46 THEN VALORCOSTO ELSE 0 END) AS COSTO04,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 47 THEN VALORCOSTO ELSE 0 END) AS COSTO05,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 48 THEN VALORCOSTO ELSE 0 END) AS COSTO06,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 49 OR CODCOSTOCALCULADO = 50 THEN VALORCOSTO ELSE 0 END) AS COSTO07,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 51 OR CODCOSTOCALCULADO = 54 THEN VALORCOSTO ELSE 0 END) AS COSTO08,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 52 THEN VALORCOSTO ELSE 0 END) AS COSTO09,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 53 THEN VALORCOSTO ELSE 0 END) AS COSTO10
                       FROM WSXML_SFG.REGISTROREVCOSTOCALCULADO
                       GROUP BY CODREGISTROREVENUE) RCT ON (RCT.CODREGISTROREVENUE = REGISTROREVENUE.ID_REGISTROREVENUE)
      WHERE ENTRADAARCHIVOCONTROL.FECHAARCHIVO BETWEEN @sFECHAFRST AND @sFECHACCLO
        AND TIPOPRODUCTO.CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
      GROUP BY  ALIADOESTRATEGICO.NOMBRERAZONSOCIAL,ALIADOESTRATEGICO.NUMEROIDENTIFICACION,AGRUPACIONPRODUCTO.NOMAGRUPACIONPRODUCTO,PRODUCTO.NOMPRODUCTO,REDPDV.NOMREDPDV,isnull(REGISTROREVENUECOMDIF.NOMBRECORTO, ' '),TIPOCONTRATOPDV.NOMTIPOCONTRATOPDV
      ORDER BY ALIADOESTRATEGICO.NOMBRERAZONSOCIAL, ALIADOESTRATEGICO.NUMEROIDENTIFICACION, AGRUPACIONPRODUCTO.NOMAGRUPACIONPRODUCTO, REDPDV.NOMREDPDV, TIPOCONTRATOPDV.NOMTIPOCONTRATOPDV;
  END;
  GO

  IF OBJECT_ID('WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetClosureData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetClosureData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetClosureData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                           @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                           @pg_CADENA                NVARCHAR(2000),
                           @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                          @pg_PRODUCTO              NVARCHAR(2000)
                           ) AS
 BEGIN
    DECLARE @sFECHACCLO DATETIME;
    DECLARE @sFECHAFRST DATETIME;
    DECLARE @sFECHALAST DATETIME;
   
  SET NOCOUNT ON;
    SELECT @sFECHACCLO = FECHAEJECUCION FROM WSXML_SFG.CICLOFACTURACIONPDV WHERE ID_CICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV;
    --SFG_PACKAGE.GetMonthRange(@sFECHACCLO, @sFECHAFRST, @sFECHALAST);
     SELECT       ALIADOESTRATEGICO.NOMBRERAZONSOCIAL                  AS ALIADOESTRATEGICO,
                   ALIADOESTRATEGICO.NUMEROIDENTIFICACION               AS IDENTIFICACION,
                   AGRUPACIONPRODUCTO.NOMAGRUPACIONPRODUCTO             AS PRODUCTO,
                   PRODUCTO.NOMPRODUCTO                                 AS SUBPRODUCTO,
                   REDPDV.NOMREDPDV                                     AS RED,
                   isnull(REGISTROREVENUECOMDIF.NOMBRECORTO, ' ')           AS TIPO_DIFERENCIAL,
                   TIPOCONTRATOPDV.NOMTIPOCONTRATOPDV                   AS TIPOCONTRATOPDV,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROFACTURACION.NUMTRANSACCIONES
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN REGISTROFACTURACION.NUMTRANSACCIONES *-1  ELSE 0 END ),6)    AS NUMINGRESOS,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROFACTURACION.VALORVENTABRUTA
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN REGISTROFACTURACION.VALORVENTABRUTA *-1  ELSE 0 END )  ,6)   AS INGRESOSBRUTOS,
                              
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROFACTURACION.VALORDESCUENTOS
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN isnull(REGISTROFACTURACION.VALORDESCUENTOS, 0) *-1  ELSE 0 END )  ,6)   AS DESCUENTOS,
     
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) 
                                  AND REGISTROFACTURACION.COMISIONANTICIPO = 0 THEN REGISTROFACTURACION.VALORCOMISION 
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 
                                 AND REGISTROFACTURACION.COMISIONANTICIPO = 0 THEN REGISTROFACTURACION.VALORCOMISION*-1 ELSE 0 END)  ,6)   AS INGRESOPDV,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROREVENUE.REVENUETOTAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2  THEN REGISTROREVENUE.REVENUETOTAL *-1     ELSE 0 END )  ,6)      AS REVENUETOTAL,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROREVENUE.INGRESOCORPORATIVO
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2   THEN REGISTROREVENUE.INGRESOCORPORATIVO *-1 ELSE 0 END ) ,6)    AS REVENUECORPORATIVO, 
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) 
                                  AND REGISTROFACTURACION.CODTIPOCONTRATOPDV IN (1,2) THEN REGISTROREVENUE.INGRESOLOCAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2      
                                 AND REGISTROFACTURACION.CODTIPOCONTRATOPDV IN (1,2) THEN REGISTROREVENUE.INGRESOLOCAL *-1 ELSE 0 END ) ,6) AS REVENUELOCALADMINISTRACION,           
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) 
                                  AND REGISTROFACTURACION.CODTIPOCONTRATOPDV =3 THEN REGISTROREVENUE.INGRESOLOCAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2      
                                 AND REGISTROFACTURACION.CODTIPOCONTRATOPDV =3 THEN REGISTROREVENUE.INGRESOLOCAL *-1       ELSE 0 END ) ,6) AS REVENUELOCALCOLABORACION,            
                  ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROREVENUE.EGRESOLOCAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2      THEN REGISTROREVENUE.EGRESOLOCAL *-1         ELSE 0 END ) ,6) AS COSTODEVENTA,        
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3)      THEN RCT.COSTO01 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2  THEN RCT.COSTO01 ELSE 0 END), 6), 0)                    AS ICA,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO04 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2       THEN RCT.COSTO04 ELSE 0 END), 6), 0)               AS COMETESA,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO02 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO02 ELSE 0 END), 6), 0)                     AS INTERCOMPANY,                                                            
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO03 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO03 ELSE 0 END), 6), 0)                     AS ICAIC,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO07 ELSE 0 END) -
                             SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO07 ELSE 0 END), 6), 0)                    AS BADDEBT,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) 
                                     THEN ISNULL(RCT.COSTO05,0)+ISNULL(RCT.COSTO06,0) ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 
                                     THEN ISNULL(RCT.COSTO05,0)+ISNULL(RCT.COSTO06,0) ELSE 0 END), 6), 0)                                        AS MERCADEO, 
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO08 ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO08 ELSE 0 END), 6), 0)                          AS IVANODESCONTABLE,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO09 ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO09 ELSE 0 END), 6), 0)                          AS INTERCOMPANY108,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO10 ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO10 ELSE 0 END), 6), 0)                          AS ICAIC108
      FROM WSXML_SFG.REGISTROREVENUE
      INNER JOIN REGISTROFACTURACION ON REGISTROREVENUE.CODREGISTROFACTURACION = REGISTROFACTURACION.ID_REGISTROFACTURACION
      INNER JOIN ENTRADAARCHIVOCONTROL ON REGISTROFACTURACION.CODENTRADAARCHIVOCONTROL = ENTRADAARCHIVOCONTROL.ID_ENTRADAARCHIVOCONTROL
      INNER JOIN PRODUCTO ON REGISTROFACTURACION.CODPRODUCTO = PRODUCTO.ID_PRODUCTO 
      INNER JOIN AGRUPACIONPRODUCTO ON PRODUCTO.CODAGRUPACIONPRODUCTO = AGRUPACIONPRODUCTO.ID_AGRUPACIONPRODUCTO
      INNER JOIN TIPOPRODUCTO ON PRODUCTO.CODTIPOPRODUCTO = TIPOPRODUCTO.ID_TIPOPRODUCTO 
      INNER JOIN LINEADENEGOCIO ON TIPOPRODUCTO.CODLINEADENEGOCIO = LINEADENEGOCIO.ID_LINEADENEGOCIO
      INNER JOIN REDPDV ON REGISTROFACTURACION.CODREDPDV = REDPDV.ID_REDPDV
      INNER JOIN TIPOCONTRATOPDV ON REGISTROFACTURACION.CODTIPOCONTRATOPDV = TIPOCONTRATOPDV.ID_TIPOCONTRATOPDV
      INNER JOIN ALIADOESTRATEGICO ON PRODUCTO.CODALIADOESTRATEGICO= ALIADOESTRATEGICO.ID_ALIADOESTRATEGICO
      LEFT OUTER JOIN REGISTROREVENUECOMDIF       ON REGISTROREVENUECOMDIF.CODREGISTROREVENUE = REGISTROREVENUE.ID_REGISTROREVENUE
      LEFT OUTER JOIN (SELECT CODREGISTROREVENUE,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 41 OR CODCOSTOCALCULADO = 42 THEN VALORCOSTO ELSE 0 END) AS COSTO01,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 43 THEN VALORCOSTO ELSE 0 END) AS COSTO02,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 44 THEN VALORCOSTO ELSE 0 END) AS COSTO03,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 45 OR CODCOSTOCALCULADO = 46 THEN VALORCOSTO ELSE 0 END) AS COSTO04,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 47 THEN VALORCOSTO ELSE 0 END) AS COSTO05,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 48 THEN VALORCOSTO ELSE 0 END) AS COSTO06,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 49 OR CODCOSTOCALCULADO = 50 THEN VALORCOSTO ELSE 0 END) AS COSTO07,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 51 OR CODCOSTOCALCULADO = 54 THEN VALORCOSTO ELSE 0 END) AS COSTO08,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 52 THEN VALORCOSTO ELSE 0 END) AS COSTO09,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 53 THEN VALORCOSTO ELSE 0 END) AS COSTO10
                       FROM WSXML_SFG.REGISTROREVCOSTOCALCULADO
                       GROUP BY CODREGISTROREVENUE) RCT ON (RCT.CODREGISTROREVENUE = REGISTROREVENUE.ID_REGISTROREVENUE)
      WHERE ENTRADAARCHIVOCONTROL.FECHAARCHIVO BETWEEN @sFECHACCLO + 1 AND @sFECHALAST
        AND TIPOPRODUCTO.CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
      GROUP BY  ALIADOESTRATEGICO.NOMBRERAZONSOCIAL,ALIADOESTRATEGICO.NUMEROIDENTIFICACION,AGRUPACIONPRODUCTO.NOMAGRUPACIONPRODUCTO,PRODUCTO.NOMPRODUCTO,REDPDV.NOMREDPDV,isnull(REGISTROREVENUECOMDIF.NOMBRECORTO, ' '),TIPOCONTRATOPDV.NOMTIPOCONTRATOPDV
      ORDER BY ALIADOESTRATEGICO.NOMBRERAZONSOCIAL, ALIADOESTRATEGICO.NUMEROIDENTIFICACION, AGRUPACIONPRODUCTO.NOMAGRUPACIONPRODUCTO, REDPDV.NOMREDPDV, TIPOCONTRATOPDV.NOMTIPOCONTRATOPDV;
  END;
  GO

  IF OBJECT_ID('WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetWeeklyData', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetWeeklyData;
GO

CREATE     PROCEDURE WSXML_SFG.SFGINF_REVNXCONTRATOPDV_GetWeeklyData(@p_CODCICLOFACTURACIONPDV NUMERIC(22,0),
                          @p_CODLINEADENEGOCIO      NUMERIC(22,0),
                          @pg_CADENA                NVARCHAR(2000),
                          @pg_ALIADOESTRATEGICO     NVARCHAR(2000),
                         @pg_PRODUCTO              NVARCHAR(2000)
                          ) AS
  BEGIN
  SET NOCOUNT ON;
        SELECT     ALIADOESTRATEGICO.NOMBRERAZONSOCIAL                  AS ALIADOESTRATEGICO,
                   ALIADOESTRATEGICO.NUMEROIDENTIFICACION               AS IDENTIFICACION,
                   AGRUPACIONPRODUCTO.NOMAGRUPACIONPRODUCTO             AS PRODUCTO,
                   PRODUCTO.NOMPRODUCTO                                 AS SUBPRODUCTO,
                   REDPDV.NOMREDPDV                                     AS RED,
                   isnull(REGISTROREVENUECOMDIF.NOMBRECORTO, ' ')           AS TIPO_DIFERENCIAL,
                   TIPOCONTRATOPDV.NOMTIPOCONTRATOPDV                   AS TIPOCONTRATOPDV,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROFACTURACION.NUMTRANSACCIONES
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN REGISTROFACTURACION.NUMTRANSACCIONES *-1  ELSE 0 END ),6)    AS NUMINGRESOS,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROFACTURACION.VALORVENTABRUTA
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN REGISTROFACTURACION.VALORVENTABRUTA *-1  ELSE 0 END )  ,6)   AS INGRESOSBRUTOS,
                              
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN isnull(REGISTROFACTURACION.VALORDESCUENTOS, 0)
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN isnull(REGISTROFACTURACION.VALORDESCUENTOS, 0) *-1  ELSE 0 END )  ,6)   AS DESCUENTOS,         
                            
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) 
                                  AND REGISTROFACTURACION.COMISIONANTICIPO = 0 THEN REGISTROFACTURACION.VALORCOMISION 
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 
                                 AND REGISTROFACTURACION.COMISIONANTICIPO = 0 THEN REGISTROFACTURACION.VALORCOMISION*-1 ELSE 0 END)  ,6)   AS INGRESOPDV,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROREVENUE.REVENUETOTAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2  THEN REGISTROREVENUE.REVENUETOTAL *-1     ELSE 0 END )  ,6)      AS REVENUETOTAL,
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROREVENUE.INGRESOCORPORATIVO
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2   THEN REGISTROREVENUE.INGRESOCORPORATIVO *-1 ELSE 0 END ) ,6)    AS REVENUECORPORATIVO, 
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) 
                                  AND REGISTROFACTURACION.CODTIPOCONTRATOPDV IN (1,2) THEN REGISTROREVENUE.INGRESOLOCAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2      
                                 AND REGISTROFACTURACION.CODTIPOCONTRATOPDV IN (1,2) THEN REGISTROREVENUE.INGRESOLOCAL *-1 ELSE 0 END ) ,6) AS REVENUELOCALADMINISTRACION,           
                   ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) 
                                  AND REGISTROFACTURACION.CODTIPOCONTRATOPDV =3 THEN REGISTROREVENUE.INGRESOLOCAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2      
                                 AND REGISTROFACTURACION.CODTIPOCONTRATOPDV =3 THEN REGISTROREVENUE.INGRESOLOCAL *-1       ELSE 0 END ) ,6) AS REVENUELOCALCOLABORACION,            
                  ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1,3) THEN REGISTROREVENUE.EGRESOLOCAL
                            WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2      THEN REGISTROREVENUE.EGRESOLOCAL *-1         ELSE 0 END ) ,6) AS COSTODEVENTA,        
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3)      THEN RCT.COSTO01 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2  THEN RCT.COSTO01 ELSE 0 END), 10), 0)                    AS ICA,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO04 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2       THEN RCT.COSTO04 ELSE 0 END), 10), 0)               AS COMETESA,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO02 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO02 ELSE 0 END), 10), 0)                     AS INTERCOMPANY,                                                            
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO03 ELSE 0 END) -
                            SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO03 ELSE 0 END), 10), 0)                     AS ICAIC,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO07 ELSE 0 END) -
                             SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO07 ELSE 0 END), 10), 0)                    AS BADDEBT,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) 
                                     THEN ISNULL(RCT.COSTO05,0)+ISNULL(RCT.COSTO06,0) ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 
                                     THEN ISNULL(RCT.COSTO05,0)+ISNULL(RCT.COSTO06,0) ELSE 0 END), 10), 0)                                        AS MERCADEO, 
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO08 ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO08 ELSE 0 END), 10), 0)                          AS IVANODESCONTABLE,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO09 ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO09 ELSE 0 END), 10), 0)                          AS INTERCOMPANY108,
                  ISNULL(ROUND(SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO IN (1, 3) THEN RCT.COSTO10 ELSE 0 END) -
                       SUM(CASE WHEN REGISTROFACTURACION.CODTIPOREGISTRO = 2 THEN RCT.COSTO10 ELSE 0 END), 10), 0)                          AS ICAIC108
      FROM WSXML_SFG.REGISTROREVENUE
      INNER JOIN REGISTROFACTURACION ON REGISTROREVENUE.CODREGISTROFACTURACION = REGISTROFACTURACION.ID_REGISTROFACTURACION
      INNER JOIN ENTRADAARCHIVOCONTROL ON REGISTROFACTURACION.CODENTRADAARCHIVOCONTROL = ENTRADAARCHIVOCONTROL.ID_ENTRADAARCHIVOCONTROL
      INNER JOIN PRODUCTO ON REGISTROFACTURACION.CODPRODUCTO = PRODUCTO.ID_PRODUCTO 
      INNER JOIN AGRUPACIONPRODUCTO ON PRODUCTO.CODAGRUPACIONPRODUCTO = AGRUPACIONPRODUCTO.ID_AGRUPACIONPRODUCTO
      INNER JOIN TIPOPRODUCTO ON PRODUCTO.CODTIPOPRODUCTO = TIPOPRODUCTO.ID_TIPOPRODUCTO 
      INNER JOIN LINEADENEGOCIO ON TIPOPRODUCTO.CODLINEADENEGOCIO = LINEADENEGOCIO.ID_LINEADENEGOCIO
      INNER JOIN REDPDV ON REGISTROFACTURACION.CODREDPDV = REDPDV.ID_REDPDV
      INNER JOIN TIPOCONTRATOPDV ON REGISTROFACTURACION.CODTIPOCONTRATOPDV = TIPOCONTRATOPDV.ID_TIPOCONTRATOPDV
      INNER JOIN ALIADOESTRATEGICO ON PRODUCTO.CODALIADOESTRATEGICO= ALIADOESTRATEGICO.ID_ALIADOESTRATEGICO
      LEFT OUTER JOIN REGISTROREVENUECOMDIF       ON REGISTROREVENUECOMDIF.CODREGISTROREVENUE = REGISTROREVENUE.ID_REGISTROREVENUE
      LEFT OUTER JOIN (SELECT CODREGISTROREVENUE,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 41 OR CODCOSTOCALCULADO = 42 THEN VALORCOSTO ELSE 0 END) AS COSTO01,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 43 THEN VALORCOSTO ELSE 0 END) AS COSTO02,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 44 THEN VALORCOSTO ELSE 0 END) AS COSTO03,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 45 OR CODCOSTOCALCULADO = 46 THEN VALORCOSTO ELSE 0 END) AS COSTO04,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 47 THEN VALORCOSTO ELSE 0 END) AS COSTO05,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 48 THEN VALORCOSTO ELSE 0 END) AS COSTO06,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 49 OR CODCOSTOCALCULADO = 50 THEN VALORCOSTO ELSE 0 END) AS COSTO07,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 51 OR CODCOSTOCALCULADO = 54 THEN VALORCOSTO ELSE 0 END) AS COSTO08,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 52 THEN VALORCOSTO ELSE 0 END) AS COSTO09,
                              SUM(CASE WHEN CODCOSTOCALCULADO = 53 THEN VALORCOSTO ELSE 0 END) AS COSTO10
                       FROM WSXML_SFG.REGISTROREVCOSTOCALCULADO
                       GROUP BY CODREGISTROREVENUE) RCT ON (RCT.CODREGISTROREVENUE = REGISTROREVENUE.ID_REGISTROREVENUE)
      WHERE ENTRADAARCHIVOCONTROL.CODCICLOFACTURACIONPDV = @p_CODCICLOFACTURACIONPDV
        AND TIPOPRODUCTO.CODLINEADENEGOCIO = @p_CODLINEADENEGOCIO
      GROUP BY  ALIADOESTRATEGICO.NOMBRERAZONSOCIAL,ALIADOESTRATEGICO.NUMEROIDENTIFICACION,AGRUPACIONPRODUCTO.NOMAGRUPACIONPRODUCTO,PRODUCTO.NOMPRODUCTO,REDPDV.NOMREDPDV,isnull(REGISTROREVENUECOMDIF.NOMBRECORTO, ' '),TIPOCONTRATOPDV.NOMTIPOCONTRATOPDV
      ORDER BY ALIADOESTRATEGICO.NOMBRERAZONSOCIAL, ALIADOESTRATEGICO.NUMEROIDENTIFICACION, AGRUPACIONPRODUCTO.NOMAGRUPACIONPRODUCTO, REDPDV.NOMREDPDV, TIPOCONTRATOPDV.NOMTIPOCONTRATOPDV;
  END;

GO


