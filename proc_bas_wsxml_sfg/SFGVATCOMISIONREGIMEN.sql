USE SFGPRODU;
--  DDL for Package Body SFGVATCOMISIONREGIMEN
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGVATCOMISIONREGIMEN */ 

  IF OBJECT_ID('WSXML_SFG.SFGVATCOMISIONREGIMEN_AddRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVATCOMISIONREGIMEN_AddRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGVATCOMISIONREGIMEN_AddRecord(@p_CODREGIMEN                NUMERIC(22,0),
                      @p_VALORVAT                  FLOAT,
                      @p_CODUSUARIOMODIFICACION    NUMERIC(22,0),
                      @p_ID_VATCOMISIONREGIMEN_out NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    INSERT INTO WSXML_SFG.VATCOMISIONREGIMEN (
                                    CODREGIMEN,
                                    VALORVAT,
                                    CODUSUARIOMODIFICACION)
    VALUES (
            @p_CODREGIMEN,
            @p_VALORVAT,
            @p_CODUSUARIOMODIFICACION);
    SET @p_ID_VATCOMISIONREGIMEN_out = SCOPE_IDENTITY();
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGVATCOMISIONREGIMEN_UpdateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVATCOMISIONREGIMEN_UpdateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGVATCOMISIONREGIMEN_UpdateRecord(@pk_ID_VATCOMISIONREGIMEN NUMERIC(22,0),
                         @p_CODREGIMEN             NUMERIC(22,0),
                         @p_VALORVAT               FLOAT,
                         @p_CODUSUARIOMODIFICACION NUMERIC(22,0),
                         @p_ACTIVE                 NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.VATCOMISIONREGIMEN
       SET CODREGIMEN             = @p_CODREGIMEN,
           VALORVAT               = @p_VALORVAT,
           CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION,
           FECHAHORAMODIFICACION  = GETDATE(),
           ACTIVE                 = @p_ACTIVE
     WHERE ID_VATCOMISIONREGIMEN = @pk_ID_VATCOMISIONREGIMEN;

    IF @@rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @@rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGVATCOMISIONREGIMEN_GetRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVATCOMISIONREGIMEN_GetRecord;
GO
CREATE     PROCEDURE WSXML_SFG.SFGVATCOMISIONREGIMEN_GetRecord(@pk_ID_VATCOMISIONREGIMEN NUMERIC(22,0)) AS
 BEGIN
    DECLARE @l_count INTEGER;
   
  SET NOCOUNT ON;
    SELECT @l_count = COUNT(*) FROM WSXML_SFG.VATCOMISIONREGIMEN WHERE ID_VATCOMISIONREGIMEN = @pk_ID_VATCOMISIONREGIMEN;
    IF @l_count = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @l_count > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 

      SELECT ID_VATCOMISIONREGIMEN,
             CODREGIMEN,
             VALORVAT,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.VATCOMISIONREGIMEN
       WHERE ID_VATCOMISIONREGIMEN = @pk_ID_VATCOMISIONREGIMEN;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGVATCOMISIONREGIMEN_GetList', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVATCOMISIONREGIMEN_GetList;
GO
CREATE     PROCEDURE WSXML_SFG.SFGVATCOMISIONREGIMEN_GetList(@p_active NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT ID_VATCOMISIONREGIMEN,
             CODREGIMEN,
             VALORVAT,
             FECHAHORAMODIFICACION,
             CODUSUARIOMODIFICACION,
             ACTIVE
        FROM WSXML_SFG.VATCOMISIONREGIMEN
       WHERE ACTIVE = CASE WHEN @p_active = -1 THEN ACTIVE ELSE @p_active END;
  END;
GO
  
IF EXISTS (
    SELECT * FROM sys.objects WHERE OBJECT_NAME(object_id) = N'SFGVATCOMISIONREGIMEN_GetVatValue'
    AND type IN (N'FN', N'IF', N'TF')
)
    DROP FUNCTION WSXML_SFG.SFGVATCOMISIONREGIMEN_GetVatValue
GO

CREATE     FUNCTION WSXML_SFG.SFGVATCOMISIONREGIMEN_GetVatValue(@p_CODPUNTODEVENTA NUMERIC(22,0), @p_CODPRODUCTO NUMERIC(22,0)) RETURNS FLOAT AS
 BEGIN
    DECLARE @p_VALORVAT_out FLOAT = 0;
   
 

    SELECT @p_VALORVAT_out = CASE WHEN TCE.ID_TRIBUTARIOCIUDADEXCEPCION > 0 THEN 0 ELSE VCR.VALORVAT END
    FROM WSXML_SFG.PUNTODEVENTA PDV
    INNER JOIN WSXML_SFG.RAZONSOCIAL        RZ  ON (PDV.CODRAZONSOCIAL = RZ.ID_RAZONSOCIAL)
    INNER JOIN WSXML_SFG.PRODUCTO           PRD ON (PRD.ID_PRODUCTO = @p_CODPRODUCTO)
    INNER JOIN WSXML_SFG.TIPOPRODUCTO       TPR ON (PRD.CODTIPOPRODUCTO = TPR.ID_TIPOPRODUCTO)
    INNER JOIN WSXML_SFG.LINEADENEGOCIO     LDN ON (TPR.CODLINEADENEGOCIO = LDN.ID_LINEADENEGOCIO)
    INNER JOIN WSXML_SFG.RAZONSOCIALCONTRATO RZC ON (RZC.CODRAZONSOCIAL = RZ.ID_RAZONSOCIAL AND 
                                          RZC.CODSERVICIO = LDN.CODSERVICIO)
    INNER JOIN WSXML_SFG.VATCOMISIONREGIMEN VCR ON (VCR.CODCOMPANIA = PRD.CODCOMPANIA
                                      AND VCR.CODREGIMEN  = PDV.CODREGIMEN
                                      AND VCR.CODTIPOCONTRATOPDV = RZC.CODTIPOCONTRATOPDV
                                      AND VCR.ACTIVE      = 1)
    LEFT OUTER JOIN WSXML_SFG.TRIBUTARIOCIUDADEXCEPCION TCE ON (TCE.CODCIUDAD = PDV.CODCIUDAD)
    WHERE PDV.ID_PUNTODEVENTA = @p_CODPUNTODEVENTA;
  
  
  
/*    SELECT CASE WHEN TCE.ID_TRIBUTARIOCIUDADEXCEPCION > 0 THEN 0 ELSE VCR.VALORVAT END AS VALORVAT
    INTO p_VALORVAT_out 
    FROM PUNTODEVENTA PDV
    INNER JOIN RAZONSOCIAL        RZ  ON (PDV.CODRAZONSOCIAL = RZ.ID_RAZONSOCIAL)
    INNER JOIN PRODUCTO           PRD ON (PRD.ID_PRODUCTO = p_CODPRODUCTO)
    INNER JOIN VATCOMISIONREGIMEN VCR ON (VCR.CODCOMPANIA = PRD.CODCOMPANIA
                                      AND VCR.CODREGIMEN  = PDV.CODREGIMEN
                                      AND VCR.ACTIVE      = 1)
    LEFT OUTER JOIN TRIBUTARIOCIUDADEXCEPCION TCE ON (TCE.CODCIUDAD = PDV.CODCIUDAD)
    WHERE PDV.ID_PUNTODEVENTA = p_CODPUNTODEVENTA;*/
	IF @@ROWCOUNT = 0 BEGIN
		EXEC WSXML_SFG.SFGTMPTRACE_TraceLog_1 'Could not get VAT', 'VATCOMISIONREGIMEN_GetValue'
		RETURN 0;
	END

	IF @@ROWCOUNT >1 BEGIN
		EXEC WSXML_SFG.SFGTMPTRACE_TraceLog_1 'TOO MANY ROWS - Could not get VAT', 'VATCOMISIONREGIMEN_GetValue'
		RETURN 0;
	END
  
    

		--EXEC WSXML_SFG.SFGTMPTRACE_TraceLog_1 'Could not get VAT', 'VATCOMISIONREGIMEN_GetValue'
		--RETURN 16;


	RETURN @p_VALORVAT_out;
  END;
GO






