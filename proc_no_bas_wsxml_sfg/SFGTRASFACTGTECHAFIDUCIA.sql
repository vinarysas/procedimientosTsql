USE SFGPRODU;
--  DDL for Package Body SFGTRASFACTGTECHAFIDUCIA
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGTRASFACTGTECHAFIDUCIA */ 
   IF OBJECT_ID('WSXML_SFG.SFGTRASFACTGTECHAFIDUCIA_GetFactxProductoEntreDias', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGTRASFACTGTECHAFIDUCIA_GetFactxProductoEntreDias;
GO

CREATE       PROCEDURE WSXML_SFG.SFGTRASFACTGTECHAFIDUCIA_GetFactxProductoEntreDias( @p_CodProducto NUMERIC(22,0),
                                        @p_FechaInicio DATETIME,
                                       @p_FechaFin DATETIME) AS
   BEGIN
   SET NOCOUNT ON;
        SELECT  CODPUNTODEVENTA,SUM(p.VALORAPAGARGTECH) AS GTECH,SUM(p.VALORAPAGARFIDUCIA) AS FIDUCIA
        FROM WSXML_SFG.VW_PREFACTURACION_DIARIA P
        WHERE P.FECHAARCHIVO BETWEEN @p_FechaInicio AND @p_FechaFin
        AND P.CODPRODUCTO = @p_CodProducto
        GROUP BY CODPUNTODEVENTA
        ORDER BY CODPUNTODEVENTA;
   END;
GO

   IF OBJECT_ID('WSXML_SFG.SFGTRASFACTGTECHAFIDUCIA_TrasladarValor', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGTRASFACTGTECHAFIDUCIA_TrasladarValor;
GO

CREATE       PROCEDURE WSXML_SFG.SFGTRASFACTGTECHAFIDUCIA_TrasladarValor(  @p_CodPuntoDeVenta NUMERIC(22,0),
                              @p_CodCicloFacturacionPDV NUMERIC(22,0),
                              @p_CodProducto NUMERIC(22,0),
                              @p_Valor NUMERIC(22,0)
                            ) AS
   BEGIN
   SET NOCOUNT ON;
        DECLARE @xID_MAESTROFACTURACIONPDV NUMERIC(22,0)=0;
        DECLARE @xID_DETALLEFACTURACIONPDV NUMERIC(22,0)=0;
        DECLARE @xCodLineaDeNegocio NUMERIC(22,0);
        DECLARE @cSALDOGTECH FLOAT;
        DECLARE @cSALDOFIDUCIA FLOAT;
        DECLARE @cSALDODETGTECH FLOAT;
        DECLARE @cSALDODETFIDUCIA FLOAT;
	 BEGIN TRANSACTION
     BEGIN
         --Obtener id_LineaDeNegocio

         SELECT @xCodLineaDeNegocio = TIPOPRODUCTO.CODLINEADENEGOCIO
         FROM WSXML_SFG.PRODUCTO
         INNER JOIN WSXML_SFG.TIPOPRODUCTO ON PRODUCTO.CODTIPOPRODUCTO = TIPOPRODUCTO.ID_TIPOPRODUCTO
         WHERE PRODUCTO.ID_PRODUCTO = @p_CodProducto;

         --Obtener id_MaestroFacturacionPDV
         SELECT @xID_MAESTROFACTURACIONPDV = ID_MAESTROFACTURACIONPDV,
                @cSALDOGTECH = NUEVOSALDOENCONTRAGTECH + (NUEVOSALDOAFAVORGTECH * -1),
                @cSALDOFIDUCIA = NUEVOSALDOENCONTRAFIDUCIA + (NUEVOSALDOAFAVORFIDUCIA * -1)
                 FROM WSXML_SFG.MAESTROFACTURACIONPDV M
         WHERE M.CODPUNTODEVENTA = @p_CodPuntoDeVenta
         AND M.CODCICLOFACTURACIONPDV = @p_CodCicloFacturacionPDV
         AND M.CODLINEADENEGOCIO = @xCodLineaDeNegocio;

         SET @cSALDOFIDUCIA = @cSALDOFIDUCIA - @p_Valor;
         SET @cSALDOGTECH = @cSALDOGTECH + @p_Valor;

         --Actualizar MaestroFacturacionPDV
         IF @xID_MAESTROFACTURACIONPDV >0 BEGIN
            UPDATE WSXML_SFG.MAESTROFACTURACIONPDV SET
                   NUEVOSALDOENCONTRAGTECH = CASE WHEN @cSALDOGTECH >0 THEN @cSALDOGTECH ELSE 0 END,
                   NUEVOSALDOAFAVORGTECH = CASE WHEN @cSALDOGTECH <0 THEN ABS(@cSALDOGTECH) ELSE 0 END,
                   NUEVOSALDOENCONTRAFIDUCIA = CASE WHEN @cSALDOFIDUCIA >0 THEN @cSALDOFIDUCIA ELSE 0 END,
                   NUEVOSALDOAFAVORFIDUCIA =  CASE WHEN @cSALDOFIDUCIA <0 THEN ABS(@cSALDOFIDUCIA) ELSE 0 END
            WHERE ID_MAESTROFACTURACIONPDV = @xID_MAESTROFACTURACIONPDV;
         END 

         --Obtener id_DetalleFacturacionPDV

         SELECT @xID_DETALLEFACTURACIONPDV = ID_DETALLEFACTURACIONPDV,
                @cSALDODETGTECH = NUEVOSALDOENCONTRAGTECH + (NUEVOSALDOAFAVORGTECH * -1),
                @cSALDODETFIDUCIA = NUEVOSALDOENCONTRAFIDUCIA + (NUEVOSALDOAFAVORFIDUCIA * -1)
                 FROM WSXML_SFG.DETALLEFACTURACIONPDV
         WHERE CODMAESTROFACTURACIONPDV = @xID_MAESTROFACTURACIONPDV AND
         CODPRODUCTO = @p_CodProducto;


         SET @cSALDODETFIDUCIA = @cSALDODETFIDUCIA - @p_Valor;
         SET @cSALDODETGTECH = @cSALDODETGTECH + @p_Valor;

         --Actualizar DetalleFacturacionPDV
         IF @xID_DETALLEFACTURACIONPDV>0 BEGIN
            UPDATE WSXML_SFG.DetalleFacturacionPDV SET
                      NUEVOSALDOENCONTRAGTECH = CASE WHEN @cSALDODETGTECH>0 THEN @cSALDODETGTECH ELSE 0 END,
                      NUEVOSALDOAFAVORGTECH = CASE WHEN @cSALDODETGTECH<0 THEN ABS(@cSALDODETGTECH) ELSE 0 END,
                      NUEVOSALDOENCONTRAFIDUCIA = CASE WHEN @cSALDODETFIDUCIA>0 THEN @cSALDODETFIDUCIA ELSE 0 END,
                      NUEVOSALDOAFAVORFIDUCIA = CASE WHEN @cSALDODETFIDUCIA<0 THEN ABS(@cSALDODETFIDUCIA) ELSE 0 END
            WHERE ID_DETALLEFACTURACIONPDV = @xID_DETALLEFACTURACIONPDV;
         END 
     END;
     COMMIT;
   END;

GO
