USE SFGPRODU;
--  DDL for Package Body SFGVENTASTOTALES
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGVENTASTOTALES */ 

  IF OBJECT_ID('WSXML_SFG.SFGVENTASTOTALES_GetSalesByProductByRanks', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetSalesByProductByRanks;
GO

CREATE     PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetSalesByProductByRanks( @p_ID_PRODUCTO NUMERIC(22,0),
                                       @p_DATEFROM    DATETIME,
                                       @p_DATETO      DATETIME,
                                       @p_SALES       FLOAT OUT) AS
 BEGIN
    DECLARE @xServicio NUMERIC(22,0);
   
  SET NOCOUNT ON;
    -- Servicio
    SELECT @xServicio = CODSERVICIO FROM WSXML_SFG.LINEADENEGOCIO, WSXML_SFG.TIPOPRODUCTO, WSXML_SFG.PRODUCTO
    WHERE CODLINEADENEGOCIO = ID_LINEADENEGOCIO AND CODTIPOPRODUCTO = ID_TIPOPRODUCTO AND ID_PRODUCTO = @p_ID_PRODUCTO;
    -- Valor
    IF @xServicio = 2 BEGIN  -- Si es juegos entonces se toma la venta bruta .. si no el valor de la transaccion

        SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0))
                              WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0)) * (-1) ELSE 0 END), 2)
        FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
        INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
        LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(VALORAJUSTE) AS VALORAJUSTE
                         FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                         GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
        WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
          AND REG.CODPRODUCTO = @p_ID_PRODUCTO;

         SET @p_SALES=ISNULL(@p_SALES,0);

    END
    ELSE BEGIN

        SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0))
                              WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0)) * (-1) ELSE 0 END), 2)
        FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
        INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
        LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(AJUSTEFACTURACION.VALORAJUSTE) AS VALORAJUSTE
                         FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                         GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
        WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
          AND REG.CODPRODUCTO = @p_ID_PRODUCTO;

         SET @p_SALES=ISNULL(@p_SALES,0);

    END 
  END;
  GO

  IF OBJECT_ID('WSXML_SFG.SFGVENTASTOTALES_GetSalesByProductTypeByRanks', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetSalesByProductTypeByRanks;
GO

CREATE     PROCEDURE  WSXML_SFG.SFGVENTASTOTALES_GetSalesByProductTypeByRanks(  @p_ID_TIPOPRODUCTO NUMERIC(22,0),
                                             @p_DATEFROM    DATETIME,
                                             @p_DATETO      DATETIME,
                                             @p_SALES       FLOAT OUT) AS
 BEGIN
    DECLARE @xServicio NUMERIC(22,0);
   
  SET NOCOUNT ON;
    -- Servicio
    SELECT @xServicio = CODSERVICIO FROM WSXML_SFG.LINEADENEGOCIO, WSXML_SFG.TIPOPRODUCTO
    WHERE CODLINEADENEGOCIO = ID_LINEADENEGOCIO AND ID_TIPOPRODUCTO = @p_ID_TIPOPRODUCTO;
    -- Valor

    IF @xServicio = 2 BEGIN -- Si es juegos entonces se toma la venta bruta .. si no el valor de la transaccion
        SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0))
                              WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0)) * (-1) ELSE 0 END), 2)
        FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
        INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
        INNER JOIN PRODUCTO            PRD ON (PRD.ID_PRODUCTO              = REG.CODPRODUCTO)
        LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(VALORAJUSTE) AS VALORAJUSTE
                         FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                         GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
        WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
          AND PRD.CODTIPOPRODUCTO = @p_ID_TIPOPRODUCTO;

           SET @p_SALES=ISNULL(@p_SALES,0);
     END
     ELSE BEGIN
        SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0))
                              WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0)) * (-1) ELSE 0 END), 2)
        FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
        INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
        INNER JOIN PRODUCTO            PRD ON (PRD.ID_PRODUCTO              = REG.CODPRODUCTO)
        LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(VALORAJUSTE) AS VALORAJUSTE
                         FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                         GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
        WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
          AND PRD.CODTIPOPRODUCTO = @p_ID_TIPOPRODUCTO;

           SET @p_SALES=ISNULL(@p_SALES,0);
     END 

  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByProductByRanks', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByProductByRanks;
GO

CREATE     PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByProductByRanks( @p_ID_PRODUCTO NUMERIC(22,0),
                                       @p_DATEFROM    DATETIME,
                                       @p_DATETO      DATETIME,
                                       @p_SALES       FLOAT OUT) AS
 BEGIN
    DECLARE @xServicio NUMERIC(22,0);
   
  SET NOCOUNT ON;
    -- Servicio
    SELECT @xServicio = CODSERVICIO FROM WSXML_SFG.LINEADENEGOCIO, WSXML_SFG.TIPOPRODUCTO, WSXML_SFG.PRODUCTO
    WHERE CODLINEADENEGOCIO = ID_LINEADENEGOCIO AND CODTIPOPRODUCTO = ID_TIPOPRODUCTO AND ID_PRODUCTO = @p_ID_PRODUCTO;
    -- Valor
    SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.NUMTRANSACCIONES - ISNULL(AFC.CANTIDADAJUSTE, 0))
                          WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.NUMTRANSACCIONES - ISNULL(AFC.CANTIDADAJUSTE, 0)) * (-1) ELSE 0 END), 2)
    FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
    INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
    LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(CANTIDADAJUSTE) AS CANTIDADAJUSTE
                     FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                     GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
    WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
      AND REG.CODPRODUCTO = @p_ID_PRODUCTO;

       SET @p_SALES=ISNULL(@p_SALES,0);
  END;
  GO

  IF OBJECT_ID('WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByProductTypeByRanks', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByProductTypeByRanks;
GO

CREATE     PROCEDURE  WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByProductTypeByRanks(  @p_ID_TIPOPRODUCTO NUMERIC(22,0),
                                             @p_DATEFROM    DATETIME,
                                             @p_DATETO      DATETIME,
                                             @p_SALES       FLOAT OUT) AS
 BEGIN
    DECLARE @xServicio NUMERIC(22,0);
   
  SET NOCOUNT ON;
    -- Servicio
    SELECT @xServicio = CODSERVICIO FROM WSXML_SFG.LINEADENEGOCIO, WSXML_SFG.TIPOPRODUCTO
    WHERE CODLINEADENEGOCIO = ID_LINEADENEGOCIO AND ID_TIPOPRODUCTO = @p_ID_TIPOPRODUCTO;
    -- Valor
    SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.NUMTRANSACCIONES - ISNULL(AFC.CANTIDADAJUSTE, 0))
                          WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.NUMTRANSACCIONES - ISNULL(AFC.CANTIDADAJUSTE, 0)) * (-1) ELSE 0 END), 2)
    FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
    INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
    INNER JOIN PRODUCTO            PRD ON (PRD.ID_PRODUCTO              = REG.CODPRODUCTO)
    LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(CANTIDADAJUSTE) AS CANTIDADAJUSTE
                     FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                     GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
    WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
      AND PRD.CODTIPOPRODUCTO = @p_ID_TIPOPRODUCTO;

       SET @p_SALES=ISNULL(@p_SALES,0);
  END;
  GO

  IF OBJECT_ID('WSXML_SFG.SFGVENTASTOTALES_GetSalesByProductByRanksByNet', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetSalesByProductByRanksByNet;
GO

CREATE     PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetSalesByProductByRanksByNet(     @p_ID_PRODUCTO NUMERIC(22,0),
                                               @p_ID_REDPDV   NUMERIC(22,0),
                                               @p_DATEFROM    DATETIME,
                                               @p_DATETO      DATETIME,
                                               @p_SALES       FLOAT OUT) AS
 BEGIN
    DECLARE @xServicio NUMERIC(22,0);
   
  SET NOCOUNT ON;
    -- Servicio
    SELECT @xServicio = CODSERVICIO FROM WSXML_SFG.LINEADENEGOCIO, WSXML_SFG.TIPOPRODUCTO, WSXML_SFG.PRODUCTO
    WHERE CODLINEADENEGOCIO = ID_LINEADENEGOCIO AND CODTIPOPRODUCTO = ID_TIPOPRODUCTO AND ID_PRODUCTO = @p_ID_PRODUCTO;
    -- Valor
    IF @xServicio = 2 BEGIN  -- Si es juegos entonces se toma la venta bruta .. si no el valor de la transaccion

        SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0))
                              WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0)) * (-1) ELSE 0 END), 2)
        FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
        INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
        LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(VALORAJUSTE) AS VALORAJUSTE
                         FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                         GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
        WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
          AND REG.CODPRODUCTO = @p_ID_PRODUCTO
          AND REG.CODREDPDV= @p_ID_REDPDV;

         SET @p_SALES=ISNULL(@p_SALES,0);

    END
    ELSE BEGIN

        SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0))
                              WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0)) * (-1) ELSE 0 END), 2)
        FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
        INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
        LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(AJUSTEFACTURACION.VALORAJUSTE) AS VALORAJUSTE
                         FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                         GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
        WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
          AND REG.CODPRODUCTO = @p_ID_PRODUCTO
          AND REG.CODREDPDV= @p_ID_REDPDV;

         SET @p_SALES=ISNULL(@p_SALES,0);

    END 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGVENTASTOTALES_GetSalesByPrdTypeByRanksByNet', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetSalesByPrdTypeByRanksByNet;
GO

CREATE     PROCEDURE  WSXML_SFG.SFGVENTASTOTALES_GetSalesByPrdTypeByRanksByNet(  @p_ID_TIPOPRODUCTO NUMERIC(22,0),
                                             @p_ID_REDPDV       NUMERIC(22,0),
                                             @p_DATEFROM        DATETIME,
                                             @p_DATETO          DATETIME,
                                             @p_SALES           FLOAT OUT) AS
 BEGIN
    DECLARE @xServicio NUMERIC(22,0);
   
  SET NOCOUNT ON;
    -- Servicio
    SELECT @xServicio = CODSERVICIO FROM WSXML_SFG.LINEADENEGOCIO, WSXML_SFG.TIPOPRODUCTO
    WHERE CODLINEADENEGOCIO = ID_LINEADENEGOCIO AND ID_TIPOPRODUCTO = @p_ID_TIPOPRODUCTO;
    -- Valor

    IF @xServicio = 2 BEGIN -- Si es juegos entonces se toma la venta bruta .. si no el valor de la transaccion
        SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0))
                              WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0)) * (-1) ELSE 0 END), 2)
        FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
        INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
        INNER JOIN PRODUCTO            PRD ON (PRD.ID_PRODUCTO              = REG.CODPRODUCTO)
        LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(VALORAJUSTE) AS VALORAJUSTE
                         FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                         GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
        WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
          AND PRD.CODTIPOPRODUCTO = @p_ID_TIPOPRODUCTO
          AND REG.CODREDPDV= @p_ID_REDPDV;

           SET @p_SALES=ISNULL(@p_SALES,0);
     END
     ELSE BEGIN
        SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0))
                              WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.VALORTRANSACCION - ISNULL(AFC.VALORAJUSTE, 0)) * (-1) ELSE 0 END), 2)
        FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
        INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
        INNER JOIN PRODUCTO            PRD ON (PRD.ID_PRODUCTO              = REG.CODPRODUCTO)
        LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(VALORAJUSTE) AS VALORAJUSTE
                         FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                         GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
        WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
          AND PRD.CODTIPOPRODUCTO = @p_ID_TIPOPRODUCTO
          AND REG.CODREDPDV= @p_ID_REDPDV;

           SET @p_SALES=ISNULL(@p_SALES,0);
     END 

  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByProductByRanksByNet', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByProductByRanksByNet;
GO

CREATE     PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByProductByRanksByNet( @p_ID_PRODUCTO NUMERIC(22,0),
                                            @p_ID_REDPDV   NUMERIC(22,0),
                                            @p_DATEFROM    DATETIME,
                                            @p_DATETO      DATETIME,
                                            @p_SALES       FLOAT OUT) AS
 BEGIN
    DECLARE @xServicio NUMERIC(22,0);
   
  SET NOCOUNT ON;
    -- Servicio
    SELECT @xServicio = CODSERVICIO FROM WSXML_SFG.LINEADENEGOCIO, WSXML_SFG.TIPOPRODUCTO, WSXML_SFG.PRODUCTO
    WHERE CODLINEADENEGOCIO = ID_LINEADENEGOCIO AND CODTIPOPRODUCTO = ID_TIPOPRODUCTO AND ID_PRODUCTO = @p_ID_PRODUCTO;
    -- Valor
    SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.NUMTRANSACCIONES - ISNULL(AFC.CANTIDADAJUSTE, 0))
                          WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.NUMTRANSACCIONES - ISNULL(AFC.CANTIDADAJUSTE, 0)) * (-1) ELSE 0 END), 2)
    FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
    INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
    LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(CANTIDADAJUSTE) AS CANTIDADAJUSTE
                     FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                     GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
    WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
      AND REG.CODPRODUCTO = @p_ID_PRODUCTO
      AND REG.CODREDPDV= @p_ID_REDPDV;

       SET @p_SALES=ISNULL(@p_SALES,0);
  END;
  GO

  IF OBJECT_ID('WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByPrdTypeByRanksByNet', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByPrdTypeByRanksByNet;
GO

CREATE     PROCEDURE  WSXML_SFG.SFGVENTASTOTALES_GetNumTrxByPrdTypeByRanksByNet(  @p_ID_TIPOPRODUCTO NUMERIC(22,0),
                                              @p_ID_REDPDV       NUMERIC(22,0),
                                              @p_DATEFROM        DATETIME,
                                              @p_DATETO          DATETIME,
                                              @p_SALES           FLOAT OUT) AS
 BEGIN
    DECLARE @xServicio NUMERIC(22,0);
   
  SET NOCOUNT ON;
    -- Servicio
    SELECT @xServicio = CODSERVICIO FROM WSXML_SFG.LINEADENEGOCIO, WSXML_SFG.TIPOPRODUCTO
    WHERE CODLINEADENEGOCIO = ID_LINEADENEGOCIO AND ID_TIPOPRODUCTO = @p_ID_TIPOPRODUCTO;
    -- Valor
    SELECT @p_SALES = ROUND(SUM(CASE WHEN REG.CODTIPOREGISTRO = 1 THEN (REG.NUMTRANSACCIONES - ISNULL(AFC.CANTIDADAJUSTE, 0))
                          WHEN REG.CODTIPOREGISTRO = 2 THEN (REG.NUMTRANSACCIONES - ISNULL(AFC.CANTIDADAJUSTE, 0)) * (-1) ELSE 0 END), 2)
    FROM WSXML_SFG.ENTRADAARCHIVOCONTROL CTR
    INNER JOIN REGISTROFACTURACION REG ON (REG.CODENTRADAARCHIVOCONTROL = CTR.ID_ENTRADAARCHIVOCONTROL)
    INNER JOIN PRODUCTO            PRD ON (PRD.ID_PRODUCTO              = REG.CODPRODUCTO)
    LEFT OUTER JOIN (SELECT CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO, SUM(CANTIDADAJUSTE) AS CANTIDADAJUSTE
                     FROM WSXML_SFG.AJUSTEFACTURACION WHERE CODTIPOAJUSTEFACTURACION = 1
                     GROUP BY CODENTRADAARCHIVODESTINO, CODREGISTROFACTDESTINO) AFC ON (AFC.CODENTRADAARCHIVODESTINO = REG.CODENTRADAARCHIVOCONTROL AND AFC.CODREGISTROFACTDESTINO = REG.ID_REGISTROFACTURACION)
    WHERE CTR.REVERSADO = 0 AND CTR.TIPOARCHIVO = @xServicio AND CTR.FECHAARCHIVO BETWEEN CONVERT(DATETIME, CONVERT(DATE,@p_DATEFROM)) AND CONVERT(DATETIME, CONVERT(DATE,@p_DATETO))
      AND PRD.CODTIPOPRODUCTO = @p_ID_TIPOPRODUCTO
      AND REG.CODREDPDV= @p_ID_REDPDV;

       SET @p_SALES=ISNULL(@p_SALES,0);
  END;

GO



