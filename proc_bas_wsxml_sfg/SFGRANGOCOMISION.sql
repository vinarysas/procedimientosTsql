USE SFGPRODU;
--  DDL for Package Body SFGRANGOCOMISION
--------------------------------------------------------

  /* PACKAGE BODY WSXML_SFG.SFGRANGOCOMISION */ 

  -- Creates a new record in the RANGOCOMISION table
  IF OBJECT_ID('WSXML_SFG.SFGRANGOCOMISION_AddRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGRANGOCOMISION_AddRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGRANGOCOMISION_AddRecord(@p_NOMRANGOCOMISION       NVARCHAR(2000),
                      @p_CODTIPOCOMISION        NUMERIC(22,0),
                      @p_CODTIPORANGO           NUMERIC(22,0),
                      @p_CODUSUARIOMODIFICACION NUMERIC(22,0),
                      @p_ID_RANGOCOMISION_out   NUMERIC(22,0) OUT) AS
  BEGIN
  SET NOCOUNT ON;
    INSERT INTO WSXML_SFG.RANGOCOMISION (
                               NOMRANGOCOMISION,
                               CODTIPOCOMISION,
                               CODTIPORANGO,
                               CODUSUARIOMODIFICACION)
    VALUES (
            @p_NOMRANGOCOMISION,
            @p_CODTIPOCOMISION,
            CASE WHEN @p_CODTIPORANGO < 0 THEN NULL ELSE @p_CODTIPORANGO END,
            @p_CODUSUARIOMODIFICACION);
    SET @p_ID_RANGOCOMISION_out = SCOPE_IDENTITY();
  END;
GO

  -- Updates a record in the RANGOCOMISION table.
  IF OBJECT_ID('WSXML_SFG.SFGRANGOCOMISION_UpdateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGRANGOCOMISION_UpdateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGRANGOCOMISION_UpdateRecord(@pk_ID_RANGOCOMISION      NUMERIC(22,0),
                         @p_NOMRANGOCOMISION       NVARCHAR(2000),
                         @p_CODTIPOCOMISION        NUMERIC(22,0),
                         @p_CODUSUARIOMODIFICACION NUMERIC(22,0),
                         @p_FECHAHORAMODIFICACION  DATETIME,
                         @p_ACTIVE                 NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.RANGOCOMISION
       SET NOMRANGOCOMISION       = @p_NOMRANGOCOMISION,
           CODTIPOCOMISION        = @p_CODTIPOCOMISION,
           CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION,
           FECHAHORAMODIFICACION  = @p_FECHAHORAMODIFICACION,
           ACTIVE                 = @p_ACTIVE
     WHERE ID_RANGOCOMISION = @pk_ID_RANGOCOMISION;

	DECLARE @rowcount NUMERIC(22,0) = @@ROWCOUNT;

    IF @rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGRANGOCOMISION_DeactivateRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGRANGOCOMISION_DeactivateRecord;
GO

CREATE     PROCEDURE WSXML_SFG.SFGRANGOCOMISION_DeactivateRecord(@pk_ID_RANGOCOMISION      NUMERIC(22,0),
                             @p_CODUSUARIOMODIFICACION NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
    UPDATE WSXML_SFG.RANGOCOMISION
       SET CODUSUARIOMODIFICACION = @p_CODUSUARIOMODIFICACION,
           FECHAHORAMODIFICACION  = GETDATE(),
           ACTIVE                 = 0
     WHERE ID_RANGOCOMISION       = @pk_ID_RANGOCOMISION;

	DECLARE @rowcount NUMERIC(22,0) = @@ROWCOUNT;
    IF @rowcount = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @rowcount > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGRANGOCOMISION_GetRecord', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGRANGOCOMISION_GetRecord;
GO
CREATE     PROCEDURE WSXML_SFG.SFGRANGOCOMISION_GetRecord(@pk_ID_RANGOCOMISION NUMERIC(22,0)) AS
 BEGIN
    DECLARE @l_count INTEGER;
   
  SET NOCOUNT ON;
    SELECT @l_count = count(*) FROM WSXML_SFG.RANGOCOMISION
    WHERE ID_RANGOCOMISION = @pk_ID_RANGOCOMISION;

    IF @l_count = 0 BEGIN
      RAISERROR('-20054 The record no longer exists.', 16, 1);
    END 
    IF @l_count > 1 BEGIN
      RAISERROR('-20053 Duplicate object instances.', 16, 1);
    END 

      SELECT R.ID_RANGOCOMISION,
             R.NOMRANGOCOMISION,
             R.CODTIPOCOMISION,
             C.NOMTIPOCOMISION,
             R.CODTIPORANGO,
             T.NOMTIPORANGO,
             R.FECHAHORAMODIFICACION,
             R.CODUSUARIOMODIFICACION,
             R.ACTIVE
        FROM WSXML_SFG.RANGOCOMISION R
       LEFT OUTER JOIN TIPOCOMISION C
         ON (C.ID_TIPOCOMISION = R.CODTIPOCOMISION)
       LEFT OUTER JOIN TIPORANGO T
         ON (T.ID_TIPORANGO = R.CODTIPORANGO)
       WHERE R.ID_RANGOCOMISION = @pk_ID_RANGOCOMISION;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGRANGOCOMISION_GetList', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGRANGOCOMISION_GetList;
GO
CREATE     PROCEDURE WSXML_SFG.SFGRANGOCOMISION_GetList(@p_active NUMERIC(22,0)) AS

  BEGIN
  SET NOCOUNT ON;
      SELECT R.ID_RANGOCOMISION,
             R.NOMRANGOCOMISION,
             R.CODTIPOCOMISION,
             C.NOMTIPOCOMISION,
             R.CODTIPORANGO,
             T.NOMTIPORANGO,
             MIN(CASE WHEN CODTIPOCOMISION = 1 THEN VALORPORCENTUAL ELSE VALORTRANSACCIONAL END) MINVALOR,
             R.FECHAHORAMODIFICACION,
             R.CODUSUARIOMODIFICACION,
             R.ACTIVE
        FROM WSXML_SFG.RANGOCOMISION R
       LEFT OUTER JOIN TIPOCOMISION C
         ON (C.ID_TIPOCOMISION = R.CODTIPOCOMISION)
       LEFT OUTER JOIN TIPORANGO T
         ON (T.ID_TIPORANGO = R.CODTIPORANGO)
       LEFT OUTER JOIN RANGOCOMISIONDETALLE D
         ON (D.CODRANGOCOMISION = R.ID_RANGOCOMISION)
       WHERE R.ACTIVE = CASE WHEN @p_active = -1 THEN R.ACTIVE ELSE @p_active END
       GROUP BY R.ID_RANGOCOMISION,
             R.NOMRANGOCOMISION,
             R.CODTIPOCOMISION,
             C.NOMTIPOCOMISION,
             R.CODTIPORANGO,
             T.NOMTIPORANGO,
             R.FECHAHORAMODIFICACION,
             R.CODUSUARIOMODIFICACION,
             R.ACTIVE;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGRANGOCOMISION_GetListByCodTipoComision', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGRANGOCOMISION_GetListByCodTipoComision;
GO
CREATE     PROCEDURE WSXML_SFG.SFGRANGOCOMISION_GetListByCodTipoComision(@p_active NUMERIC(22,0), @p_codTipoComision NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT ID_RANGOCOMISION,
             NOMRANGOCOMISION
        FROM WSXML_SFG.RANGOCOMISION
       WHERE ACTIVE = CASE WHEN @p_active = -1 THEN ACTIVE ELSE @p_active END
         AND CODTIPOCOMISION = CASE WHEN @p_codTipoComision = -1  THEN CODTIPOCOMISION ELSE @p_codTipoComision END
       ORDER BY NOMRANGOCOMISION;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGRANGOCOMISION_GetListByCodTipoRango', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGRANGOCOMISION_GetListByCodTipoRango;
GO
CREATE     PROCEDURE WSXML_SFG.SFGRANGOCOMISION_GetListByCodTipoRango(@p_active NUMERIC(22,0), @p_codTipoRango NUMERIC(22,0)) AS
  BEGIN
  SET NOCOUNT ON;
      SELECT ID_RANGOCOMISION,
             NOMRANGOCOMISION
        FROM WSXML_SFG.RANGOCOMISION
       WHERE ACTIVE = CASE WHEN @p_active = -1 THEN ACTIVE ELSE @p_active END
         AND CODTIPORANGO = CASE WHEN @p_codTipoRango = -1  THEN CODTIPOCOMISION ELSE @p_codTipoRango END
       ORDER BY NOMRANGOCOMISION;
  END;
GO

IF OBJECT_ID('WSXML_SFG.SFGRANGOCOMISION_GetActualCommision', 'P') IS NOT NULL
  DROP PROCEDURE WSXML_SFG.SFGRANGOCOMISION_GetActualCommision;
GO

CREATE     PROCEDURE WSXML_SFG.SFGRANGOCOMISION_GetActualCommision(@pk_ID_RANGOCOMISION NUMERIC(22,0),
                               @p_page_number       INTEGER,
                               @p_batch_size        INTEGER,
							   @p_total_size		INTEGER OUT) AS
  BEGIN
  SET NOCOUNT ON;
    SET @p_total_size = 1;
    SELECT WSXML_SFG.SFGRANGOCOMISION_GetCommissionName(@pk_ID_RANGOCOMISION) AS COMMISSIONNAME;
  END;
GO


  IF OBJECT_ID('WSXML_SFG.SFGRANGOCOMISION_GetCommissionName', 'FN') IS NOT NULL
  DROP FUNCTION WSXML_SFG.SFGRANGOCOMISION_GetCommissionName;
GO

CREATE     FUNCTION WSXML_SFG.SFGRANGOCOMISION_GetCommissionName(@pk_ID_RANGOCOMISION NUMERIC(22,0)) RETURNS NVARCHAR(2000) AS
 BEGIN
    DECLARE @cCOMMISSIONNAME          NVARCHAR(100) = '';
    DECLARE @cCODTIPOCOMISION         NUMERIC(22,0);
    DECLARE @cCODTIPORANGO            NUMERIC(22,0);
    DECLARE @cANTICIPO                NUMERIC(22,0);
    DECLARE @cINCENTIVOCOMISIONGLOBAL NUMERIC(22,0);
    DECLARE @cCOUNTRANGOTIEMPO        NUMERIC(22,0);
    --DECLARE @COMMISSIONINCONSISTENCY EXCEPTION;
	DECLARE @msgTracert VARCHAR(2000);
   
    SELECT @cCODTIPOCOMISION = CODTIPOCOMISION, @cCODTIPORANGO = CODTIPORANGO, @cANTICIPO = ANTICIPO, @cINCENTIVOCOMISIONGLOBAL = CODINCENTIVOCOMISIONGLOBAL
    FROM WSXML_SFG.RANGOCOMISION WHERE ID_RANGOCOMISION = @pk_ID_RANGOCOMISION;
    
	IF @@ROWCOUNT = 0 BEGIN
		SET @msgTracert = 'Invalid reference to commission structure ' + ISNULL(CONVERT(VARCHAR,@pk_ID_RANGOCOMISION), '');
		EXEC WSXML_SFG.SFGTMPTRACE_TraceLog @msgTracert
		--RAISE NO_DATA_FOUND;
		RETURN @cCOMMISSIONNAME;
	END

    SELECT @cCOUNTRANGOTIEMPO = COUNT(1) FROM WSXML_SFG.COMISIONRANGOTIEMPO WHERE CODRANGOCOMISION = @pk_ID_RANGOCOMISION;
        
    IF @cCODTIPOCOMISION IN (1, 2, 3) BEGIN
      -- Ignore ranks and get single value
        DECLARE @cVALORPORCENTUAL    FLOAT = 0;
        DECLARE @cVALORTRANSACCIONAL FLOAT = 0;
        DECLARE @cINCENTIVO          FLOAT = 0;
		BEGIN
			SELECT @cVALORPORCENTUAL = VALORPORCENTUAL, @cVALORTRANSACCIONAL = VALORTRANSACCIONAL, @cINCENTIVO = INCENTIVO FROM WSXML_SFG.RANGOCOMISIONDETALLE
			WHERE CODRANGOCOMISION = @pk_ID_RANGOCOMISION;

			DECLARE @rowcount NUMERIC(22,0) = @@ROWCOUNT;
			IF @ROWCOUNT = 0 BEGIN
				SET @msgTracert = 'Single commission value inconsistency, no subrecord for ' + CONVERT(VARCHAR,@pk_ID_RANGOCOMISION);
				EXEC WSXML_SFG.SFGTMPTRACE_TraceLog @msgTracert
				--RAISE @COMMISSIONINCONSISTENCY;
			END
			
			IF @ROWCOUNT > 1 BEGIN
				SET @msgTracert = 'Single commission value inconsistency, too many subrecords for ' + CONVERT(VARCHAR,@pk_ID_RANGOCOMISION);
				EXEC WSXML_SFG.SFGTMPTRACE_TraceLog @msgTracert
				--RAISE @COMMISSIONINCONSISTENCY;
			END

			IF @cCODTIPOCOMISION = 1 BEGIN    -- Porcentual
			  SELECT @cCOMMISSIONNAME = ISNULL(RTRIM(LTRIM(FORMAT(@cVALORPORCENTUAL, '#,##0.000'))), '') + '%';
			END
			ELSE IF @cCODTIPOCOMISION = 2 BEGIN -- Transaccional
			  SELECT @cCOMMISSIONNAME = '$ ' + ISNULL(RTRIM(LTRIM(FORMAT(@cVALORTRANSACCIONAL, '#,##0.000'))), '')
			END
			ELSE IF @cCODTIPOCOMISION = 3 BEGIN -- Mixto
			  SELECT @cCOMMISSIONNAME =  ISNULL(RTRIM(LTRIM(FORMAT(@cVALORPORCENTUAL, '#,##0.000'))), '') + '%' + ' - ' + '$ ' + ISNULL(RTRIM(LTRIM(FORMAT(@cVALORTRANSACCIONAL, '#,##0.000'))), '');
			END 
			--IF cINCENTIVO <> 0 THEN
			  --IF cINCENTIVO > 0 THEN
				--cCOMMISSIONNAME := cCOMMISSIONNAME || ' (+$' || TRIM(TO_CHAR(cINCENTIVO, '999999999999999990.99')) || ')';
			  --ELSE
				--cCOMMISSIONNAME := cCOMMISSIONNAME || ' (-$' || TRIM(TO_CHAR(cINCENTIVO, '999999999999999990.99')) || ')';
			  --END IF;
			--END IF;
			IF @cANTICIPO = 1 BEGIN
			  SET @cCOMMISSIONNAME = ISNULL(@cCOMMISSIONNAME, '') + ' (Ant.)';
			END 
			
			

        
    
		END
    END ELSE BEGIN
      -- Get minimum and maximum rank values: Rangos Nv 8 - $347.06 ~ $2447.35 (Incentivos)
        DECLARE @cminVALORPORCENTUA FLOAT = 0;
        DECLARE @cmaxVALORPORCENTUA FLOAT = 0;
        DECLARE @cminVALORTRANSCCNL FLOAT = 0;
        DECLARE @cmaxVALORTRANSCCNL FLOAT = 0;
        DECLARE @clvlCOUNT          NUMERIC(22,0) = 0;
        DECLARE @cflgINCNT          NUMERIC(22,0) = 0;
      BEGIN
        SELECT @cminVALORPORCENTUA = MN.VALORPORCENTUAL, @cminVALORTRANSCCNL = MN.VALORTRANSACCIONAL,
               @cmaxVALORPORCENTUA = MX.VALORPORCENTUAL, @cmaxVALORTRANSCCNL = MX.VALORTRANSACCIONAL,
               @clvlCOUNT = GN.CONTEO, @cflgINCNT = GN.INCENTIVO
                   FROM (SELECT MIN(RANGOINICIAL) AS MNMRK,
                       MAX(RANGOINICIAL) AS MXMRK,
                       COUNT(1)          AS CONTEO,
                       SUM(CASE WHEN INCENTIVO <> 0 THEN 1 ELSE 0 END) AS INCENTIVO
                  FROM WSXML_SFG.RANGOCOMISIONDETALLE
                 WHERE CODRANGOCOMISION = @pk_ID_RANGOCOMISION) GN
        INNER JOIN WSXML_SFG.RANGOCOMISIONDETALLE MN ON (MN.CODRANGOCOMISION = @pk_ID_RANGOCOMISION AND MN.RANGOINICIAL = GN.MNMRK)
        INNER JOIN WSXML_SFG.RANGOCOMISIONDETALLE MX ON (MX.CODRANGOCOMISION = @pk_ID_RANGOCOMISION AND MX.RANGOINICIAL = GN.MXMRK);
        SET @cCOMMISSIONNAME = 'Rangos Nv' + CONVERT(VARCHAR,@clvlCOUNT) + ' - ';
        IF @cCODTIPOCOMISION = 4 BEGIN    -- Rangos Porcentual
          SET @cCOMMISSIONNAME = ISNULL(@cCOMMISSIONNAME, '') +
                             ISNULL(RTRIM(LTRIM(FORMAT(@cminVALORPORCENTUA, '#,##0.000'))), '') + '%' + ' ~ ' +
                             ISNULL(RTRIM(LTRIM(FORMAT(@cmaxVALORPORCENTUA,'#,##0.000'))), '') + '%';
        END
        ELSE IF @cCODTIPOCOMISION = 5 BEGIN -- Rangos Transaccional
          SET @cCOMMISSIONNAME = ISNULL(@cCOMMISSIONNAME, '') +
                             '$ ' + ISNULL(RTRIM(LTRIM(FORMAT(@cminVALORTRANSCCNL, '#,##0.000'))), '') + ' ~ ' +
                             '$ ' + ISNULL(RTRIM(LTRIM(FORMAT(@cmaxVALORTRANSCCNL, '#,##0.000'))), '');
        END
        ELSE IF @cCODTIPOCOMISION = 6 BEGIN -- Rangos Mixto
          SET @cCOMMISSIONNAME = 'Rangos Mixto Nv' + CONVERT(VARCHAR,@clvlCOUNT) + ' - ';
            DECLARE @txtMINRANK NVARCHAR(500);
            DECLARE @txtMAXRANK NVARCHAR(500);
          BEGIN
            IF @cminVALORTRANSCCNL = 0 BEGIN
              SET @txtMINRANK = ISNULL(RTRIM(LTRIM(FORMAT(@cminVALORPORCENTUA, '#,##0.000'))), '') + '%';
            END
            ELSE IF @cminVALORPORCENTUA = 0 BEGIN
              SET @txtMINRANK = '$ ' + ISNULL(RTRIM(LTRIM(FORMAT(@cminVALORTRANSCCNL, '#,##0.000'))), '');
            END
            ELSE BEGIN
              SET @txtMINRANK = ISNULL(RTRIM(LTRIM(FORMAT(@cminVALORPORCENTUA, '#,##0.000'))), '') + '%/$ ' + ISNULL(RTRIM(LTRIM(FORMAT(@cminVALORTRANSCCNL, '#,##0.000'))), '');
            END 
            IF @cmaxVALORTRANSCCNL = 0 BEGIN
              SET @txtMAXRANK = ISNULL(RTRIM(LTRIM(FORMAT(@cmaxVALORPORCENTUA, '#,##0.000'))), '') + '%';
            END
            ELSE IF @cmaxVALORPORCENTUA = 0 BEGIN
              SET @txtMAXRANK = '$ ' + ISNULL(RTRIM(LTRIM(FORMAT(@cmaxVALORTRANSCCNL, '#,##0.000'))), '');
            END
            ELSE BEGIN
              SET @txtMAXRANK = ISNULL(RTRIM(LTRIM(FORMAT(@cmaxVALORPORCENTUA, '#,##0.000'))), '') + '%/$ ' + ISNULL(RTRIM(LTRIM(FORMAT(@cmaxVALORTRANSCCNL, '#,##0.000'))), '');
            END 
            SET @cCOMMISSIONNAME = ISNULL(@cCOMMISSIONNAME, '') + ISNULL(@txtMINRANK, '') + ' ~ ' + ISNULL(@txtMAXRANK, '');
          END;

        END 
        IF @cflgINCNT > 0 BEGIN
          SET @cCOMMISSIONNAME = ISNULL(@cCOMMISSIONNAME, '') + '(Incnt.)';
        END 
      END;

    END 
    IF @cINCENTIVOCOMISIONGLOBAL IS NOT NULL BEGIN
        DECLARE @cVALORFIJO       FLOAT = 0;
        DECLARE @cNOMPERIODICIDAD VARCHAR(4000) /* Use -meta option PERIORICIDAD.NOMPERIODICIDAD%TYPE */;
      BEGIN
        SELECT @cVALORFIJO = VALORFIJO, @cNOMPERIODICIDAD = NOMPERIODICIDAD FROM WSXML_SFG.INCENTIVOCOMISIONGLOBAL INNER JOIN WSXML_SFG.PERIORICIDAD ON (CODPERIODICIDAD = ID_PERIORICIDAD) WHERE ID_INCENTIVOCOMISIONGLOBAL = @cINCENTIVOCOMISIONGLOBAL;
        SET @cCOMMISSIONNAME = ISNULL(@cCOMMISSIONNAME, '') + ' w/ Valor Fijo ' + ISNULL(dbo.InitCap(RTRIM(LTRIM(@cNOMPERIODICIDAD))), '') + ' ' + ISNULL(FORMAT(@cVALORFIJO, '#,##0.000'), '');
      END;

    END 
    IF ISNULL(@cCOUNTRANGOTIEMPO,0)<>0 BEGIN
        SET @cCOMMISSIONNAME = ISNULL(@cCOMMISSIONNAME, '') + ' w/ Rangos Tiempo '; 
    END

	
    
    RETURN @cCOMMISSIONNAME;
	 
  END;
GO

IF OBJECT_ID('WSXML_SFG.SFGRANGOCOMISION_GetMinumumPercentualValue', 'FN') IS NOT NULL
  DROP FUNCTION WSXML_SFG.SFGRANGOCOMISION_GetMinumumPercentualValue;
GO

CREATE     FUNCTION WSXML_SFG.SFGRANGOCOMISION_GetMinumumPercentualValue(@pk_ID_RANGOCOMISION NUMERIC(22,0)) RETURNS FLOAT AS
 BEGIN
    DECLARE @cVALUE FLOAT;
   
    SELECT @cVALUE = MIN(VALORPORCENTUAL) FROM WSXML_SFG.RANGOCOMISIONDETALLE WHERE CODRANGOCOMISION = @pk_ID_RANGOCOMISION;
    RETURN @cVALUE;
  END;
GO

  IF OBJECT_ID('WSXML_SFG.SFGRANGOCOMISION_GetMinumumTransactionalValue', 'FN') IS NOT NULL
  DROP FUNCTION WSXML_SFG.SFGRANGOCOMISION_GetMinumumTransactionalValue;
GO

CREATE     FUNCTION WSXML_SFG.SFGRANGOCOMISION_GetMinumumTransactionalValue(@pk_ID_RANGOCOMISION NUMERIC(22,0)) RETURNS FLOAT AS
 BEGIN
    DECLARE @cVALUE FLOAT;
   
    SELECT @cVALUE = MIN(VALORTRANSACCIONAL) FROM WSXML_SFG.RANGOCOMISIONDETALLE WHERE CODRANGOCOMISION = @pk_ID_RANGOCOMISION;
    RETURN @cVALUE;
  END;
GO






